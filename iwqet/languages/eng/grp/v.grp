#### Features common to almost all translations
+t == ; 0==0 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
#### Amharic auxiliaries
## present continuous: እየሰበርኩ ነው 
*** be_v[+aux,tam=prs,-prosp] $v ; ^ be_v 0
->amh $v[pp=Iyye,rl=[+p,-acc],+sub,+rel,tm=prf] new ; || 1, 0 ; 0==1
## past continuous: ይሰብር ነበር 
*** be_v[+aux,tam=pst,-prosp] $v ; ^ be_v 0
->amh $v[tm=imf,ax=None] neb_er ; || 1, 0 ; 0 == 1
## about to: ሊሰብር ነው 
*** be_v[+aux,+prosp,tam=prs] $v ; ^ be_v 0
->amh $v[cj1=lI,tm=imf,+sub] new ; || 1, 0 ; 0 == 1
*** be_v[+aux,+prosp,tam=pst] $v ; ^ be_v 0
->amh $v[cj1=lI,tm=imf,+sub] neb_er ; || 1, 0 ; 0 == 1
## used to continuous: same as above
*** use_v[+aux] $v ; ^ use_v 0
->amh $v[tm=imf,ax=None] neb_er ; || 1, 0 ; 0 == 1
## past perfect (affirmative)
*** have_v[+aux,tam=pst] $v ; ^ have_v 0
->amh $v[tm=ger,ax=None] neb_er ; || 1, 0 ; 0 == 1
## past perfect (negative)
*** have_v[+aux,tam=pst] $v[+neg] ; ^ have_v 0
->amh $v[+neg,tm=prf] neb_er ; || 1, 0 ; 0 == 1
## should (also include possibility of tegeb_a?)
*** should_v[pos=md,+aux] $v ; ^ should_v 0
->amh $n[v=inf,pos=n] hl_w_v[tm=imf,sb=[-p1,-p2,-fem,-plr],ob=[+prp,+b,+expl]] ; || 1, 0 ; 0 == 1 sb:ob,neg:neg
## must (same as should)
*** must_v[pos=md,+aux] $v ; ^ must_v 0
->amh $n[v=inf,pos=n] hl_w_v[tm=imf,sb=[-p1,-p2,-fem,-plr],ob=[+prp,+b,+expl]] ; || 1, 0 ; 0 == 1 sb:ob,neg:neg
## can
*** can_v[pos=md,+aux,-neg] $v ; ^ can_v 0
->amh $v[cj1=lI,+sub,tm=imf] c'l_v[tm=imf,ax=al] ; || 1, 0 ; 0 == 1 sb:sb,tm:tm ; 0=1 sb:sb
*** can_v[pos=md,+aux,+neg] $v ; ^ can_v 0
->amh $v[cj1=lI,+sub,tm=imf] c'l_v[tm=imf,+neg] ; || 1, 0 ; 0 == 1 sb:sb,tm:tm ; 0=1 sb:sb
*** could_v[pos=md,+aux] $v ; ^ could_v 0
->amh $v[cj1=lI,+sub,tm=imf] c'l_v[tm=prf] ; || 1, 0 ; 0 == 1 sb:sb,neg:neg,tm:tm ; 0=1 sb:sb
#### Special cases
### be -> ne, nbr, hwn
*** be_v[tm=imf,-aux] $n ; ^ be_v 0
->amh $n ne_v[tm=imf] ; || 1, 0 ; 0 == 1 sb:sb,neg:neg
*** be_v[tm=imf,-aux] ; ^ be_v 0
->amh ne_v[tm=imf] ; 0 == 0 sb:sb,neg:neg
*** be_v[tm=prf,-aux] ; ^ be_v 0
->amh nbr_v[tm=prf] ; 0 == 0 sb:sb,neg:neg
*** be_v[tm=fut,-aux] ; ^ be_v 0
->amh hwn_v[tm=imf,ax=al] ; 0 == 0 sb:sb,neg:neg
### have -> hl_w
*** have_v[tm=imf] $n[-plr] ; ^ have_v 0
->amh $n hl_w_v[tm=imf,sb=[-plr]] ; || 1, 0 ; 0==1 sb:ob,neg:neg,rel:rel
*** have_v[tm=imf] $n[+plr] ; ^ have_v 0
->amh $n hl_w_v[tm=imf,sb=[+plr]] ; || 1, 0 ; 0==1 sb:ob,neg:neg,rel:rel
### impersonal verbs 
*** be_v[tam=prs] sick ; ^ sick 1
->amh 'mm_v[as=smp,vc=smp,tm=prf,sb=[-p1,-p2,-fem,-plr]] ; || 0, -1 ; 0==0 sb:ob,neg:neg,rel:rel
->amh 'mm_v[-neg,as=smp,vc=smp,tm=ger,ax=al,sb=[-p1,-p2,-fem,-plr]] ; || 0, -1 ; 0==0 sb:ob,neg:neg,rel:rel
->amh 'mm_v[as=smp,vc=ps,tm=prf] ; || 0, -1 ; 0==0 sb:sb,neg:neg,rel:rel
->amh 'mm_v[-neg,as=smp,vc=ps,tm=ger,ax=al] ; || 0, -1 ; 0==0 sb:sb,neg:neg,rel:rel
*** be_v[tam=pst] sick ; ^ sick 1
->amh 'mm_v[as=smp,vc=smp,tm=ger,sb=[-p1,-p2,-fem,-plr]] neb_er ; || 0, 1 ; 0==0 sb:ob,neg:neg,rel:rel
->amh 'mm_v[as=smp,vc=ps,tm=ger] neb_er ; || 0, 1 ; 0==0 sb:sb,neg:neg,rel:rel
### transitive verbs
*** buy_v $a $n ; ^ buy_v 0
->amh $a[cs=acc] $n gz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg
*** buy_v $n ; ^ buy_v 0
->amh $n[cs=acc] gz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg
*** buy_v
->amh gz'_v[as=smp,vc=smp]
### Generic cases start here
*** abandon_v
->amh kd'_v[as=smp,vc=smp]
->amh lqq_v[as=smp,vc=smp]
*** abhor_v
->amh Ty_f_v[as=smp,vc=ps]
->amh Sy_f_v[as=smp,vc=ps]
*** abort_v
->amh wrd_v[as=smp,vc=cs]
->amh Cngf_v[as=smp,vc=smp]
*** abridge_v
->amh 'Tr_v[as=smp,vc=cs]
*** absent_v oneself
->amh qr*_v[as=smp,vc=smp]
*** absorb_v
->amh ms_T_v[as=smp,vc=smp]
*** accommodate_v
->amh nwr_v[as=it,vc=ps]
*** accompany_v
->amh zfn_v[as=rc,vc=tr]
*** accomplish_v
->amh knawn_v[as=smp,vc=tr]
->amh sk_'_v[as=rc,vc=tr]
*** accrue_v interest
->amh wld_v[as=smp,vc=smp]
*** accumulate_v
->amh kmac*_v[as=smp,vc=tr]
->amh qnbr_v[as=rc,vc=tr]
->amh Trqm_v[as=rc,vc=ps]
->amh Trqm_v[as=rc,vc=tr]
->amh kb_t_v[as=rc,vc=tr]
->amh sbsb_v[as=smp,vc=smp]
->amh sbsb_v[as=smp,vc=ps]
->amh kb_t_v[as=smp,vc=smp]
*** accuse_v
->amh kss_v[as=smp,vc=smp]
*** ache_v constantly
->amh nznz_v[as=smp,vc=smp]
*** acquire_v
->amh gN*_v[as=smp,vc=tr]
->amh gby*_v[as=smp,vc=smp]
*** act_v arrogantly
->amh bT_s_v[as=it,vc=ps]
*** act_v cunningly
->amh b|lTlT_v[as=smp,vc=ps]
*** act_v flamboyantly
->amh nTr_v[as=rc,vc=tr]
*** act_v foolishly
->amh md_d_v[as=smp,vc=smp]
*** act_v stealthily
->amh xWk_k_v[as=smp,vc=smp]
*** add_v
->amh Cm_r_v[as=smp,vc=smp]
->amh dm_r_v[as=smp,vc=smp]
*** add_v to
->amh 'k_l_v[as=smp,vc=smp]
*** add_v together
->amh dm_r_v[as=rc,vc=tr]
*** adhere_v to
->amh Tbq_v[as=rc,vc=ps]
*** administer_v
->amh 'dr_v[as=it,vc=tr]
*** admire_v
->amh dnq_v[as=smp,vc=smp]
->amh dnq_v[as=rc,vc=tr]
->amh dnq_v[as=smp,vc=tr]
*** adorn_v
->amh m|nxnx_v[as=smp,vc=tr]
->amh qWnj*_v[as=smp,vc=tr]
*** adorn_v oneself
->amh bj_*_v[as=it,vc=ps]
*** adulterate_v
->amh qy_T_v[as=it,vc=tr]
->amh qy_T_v[as=smp,vc=smp]
->amh qy_T_v[as=smp,vc=ps]
*** adulterate_v slightly
->amh qy_T_v[as=it,vc=smp]
*** advance_v upon
->amh Tg'_v[as=smp,vc=ps]
*** advise_v
->amh ngr_v[as=it,vc=smp]
->amh mkr_v[as=smp,vc=smp]
*** advocate_v for
->amh ramd_v[as=smp,vc=tr]
*** aerate_v
->amh nfs_v[as=rc,vc=tr]
*** afflict_v
->amh qsf_v[as=smp,vc=smp]
*** age_v
->amh grjf_v[as=smp,vc=smp]
->amh xmgl_v[as=smp,vc=cs]
->amh rj*_v[as=smp,vc=cs]
->amh bsl_v[as=smp,vc=smp]
*** aggravate_v
->amh b's_v[as=smp,vc=tr]
*** agitate_v
->amh 'm_s_v[as=smp,vc=smp]
->amh nqnq_v[as=rc,vc=tr]
->amh nqnq_v[as=rc,vc=ps]
->amh ns'_v[as=smp,vc=cs]
->amh dfrs_v[as=smp,vc=tr]
->amh qsqs_v[as=smp,vc=smp]
->amh nqnq_v[as=smp,vc=ps]
*** agree_v together
->amh b'l_v[as=it,vc=ps]
*** aid_v
->amh 'g_z_v[as=smp,vc=smp]
*** aim_v
->amh zgb_v[as=smp,vc=smp]
*** aim_v at
->amh nTr_v[as=it,vc=tr]
*** air_v out
->amh nfs_v[as=rc,vc=tr]
*** alarm_v
->amh Tnqq_v[as=smp,vc=cs]
->amh dnbr_v[as=smp,vc=cs]
*** align_v
->amh drdr_v[as=smp,vc=smp]
*** allocate_v
->amh drs_v[as=rc,vc=ps]
->amh drs_v[as=rc,vc=tr]
->amh qWn_n_v[as=smp,vc=smp]
*** allot_v
->amh md_b_v[as=smp,vc=smp]
->amh kfl_v[as=rc,vc=tr]
*** ally_v oneself
->amh 'br_v[as=it,vc=ps]
*** alter_v
->amh lw_T_v[as=smp,vc=smp]
*** amalgamate_v
->amh dblq_v[as=it,vc=smp]
->amh Cflq_v[as=smp,vc=smp]
->amh Cflq_v[as=smp,vc=cs]
*** amass_v
->amh kmac*_v[as=smp,vc=ps]
*** ameliorate_v
->amh x'l_v[as=smp,vc=cs]
->amh x'l_v[as=it,vc=tr]
*** amount_v to
->amh 'k_l_v[as=smp,vc=smp]
*** amplify_v
->amh gWl'_v[as=smp,vc=tr]
*** amputate_v
->amh qWrT_v[as=smp,vc=smp]
->amh qWmT_v[as=smp,vc=smp]
*** amuse_v
->amh s'q_v[as=smp,vc=cs]
->amh Cawt_v[as=smp,vc=tr]
->amh ds_t_v[as=smp,vc=cs]
*** amuse_v oneself
->amh ds_t_v[as=smp,vc=ps]
*** analyze_v
->amh tntn_v[as=smp,vc=smp]
*** anger_v
->amh qWT'_v[as=smp,vc=cs]
->amh kf'_v[as=smp,vc=cs]
->amh kWrf_v[as=smp,vc=cs]
*** animate_v
->amh fk'_v[as=smp,vc=tr]
->amh n|qsaqs_v[as=smp,vc=tr]
*** annihilate_v
->amh dmss_v[as=smp,vc=smp]
->amh dmss_v[as=smp,vc=ps]
->amh wdm_v[as=smp,vc=tr]
->amh wdm_v[as=smp,vc=smp]
*** announce_v
->amh sm'_v[as=smp,vc=cs]
->amh 'wq_v[as=smp,vc=tr]
->amh lf_f_v[as=smp,vc=smp]
*** annoy_v
->amh rb_x_v[as=smp,vc=smp]
->amh bsaC*_v[as=smp,vc=tr]
*** annoy_v seriously
->amh bx_q_v[as=smp,vc=tr]
*** anoint_v
->amh qb_'_v[as=smp,vc=smp]
*** answer_v
->amh ml_s_v[as=smp,vc=smp]
*** appeal_v
->amh Cwh_v[as=smp,vc=smp]
*** appear_v
->amh zlq_v[as=smp,vc=smp]
->amh 'y*_v[as=smp,vc=ps]
*** appease_v
->amh brd_v[as=smp,vc=tr]
*** applaud_v
->amh CbCb_v[as=smp,vc=tr]
*** apply_v
->amh mlkt_v[as=smp,vc=tr]
*** apportion_v
->amh md_b_v[as=smp,vc=smp]
->amh kfl_v[as=it,vc=tr]
*** appraise_v
->amh gmgm_v[as=smp,vc=ps]
->amh gmgm_v[as=smp,vc=smp]
*** approach_v
->amh Tg'_v[as=smp,vc=ps]
->amh qrb_v[as=smp,vc=smp]
->amh qrb_v[as=rc,vc=ps]
*** appropriate_v
->amh kl_l_v[as=smp,vc=ps]
->amh kl_l_v[as=smp,vc=smp]
*** approve_v
->amh Sdq_v[as=smp,vc=cs]
*** arbitrate_v
->amh frd_v[as=rc,vc=tr]
->amh mWg_t_v[as=rc,vc=tr]
->amh daN*_v[as=smp,vc=smp]
->amh glagl_v[as=smp,vc=smp]
*** arch_v
->amh qs_t_v[as=smp,vc=smp]
*** argue_v
->amh mWg_t_v[as=smp,vc=smp]
->amh mWg_t_v[as=rc,vc=ps]
->amh krkr_v[as=rc,vc=ps]
*** arm_v
->amh 'Tq_v[as=smp,vc=tr]
*** arouse_v
->amh xafd_v[as=smp,vc=cs]
->amh ns'_v[as=smp,vc=cs]
->amh qsqs_v[as=smp,vc=smp]
*** arouse_v compassion
->amh 'zn_v[as=smp,vc=cs]
*** arouse_v initiated
->amh ns'_v[as=smp,vc=cs]
*** arrange_v
->amh xk_f_v[as=smp,vc=smp]
->amh zgaj*_v[as=smp,vc=cs]
->amh snad'_v[as=smp,vc=cs]
*** arrange_v marriage
->amh gb'_v[as=rc,vc=tr]
*** arrange_v neatly
->amh mc_*_v[as=it,vc=tr]
*** arrive_v
->amh drs_v[as=smp,vc=smp]
*** ascend_v
->amh wT'_v[as=smp,vc=smp]
->amh 'rg_v[as=smp,vc=smp]
*** ascertain_v
->amh rgT_v[as=it,vc=tr]
*** ask_v
->amh Ty_q_v[as=smp,vc=smp]
->amh lm_n_v[as=smp,vc=smp]
*** ask_v advice
->amh mkr_v[as=rc,vc=tr]
*** assault_v
->amh Tq'_v[as=smp,vc=ps]
->amh Tq'_v[as=smp,vc=tr]
->amh dbdb_v[as=smp,vc=smp]
*** assemble_v
->amh sbsb_v[as=smp,vc=smp]
->amh gTm_v[as=it,vc=ps]
->amh sbsb_v[as=smp,vc=ps]
->amh kmac*_v[as=it,vc=ps]
->amh kmac*_v[as=it,vc=tr]
*** assess_v
->amh gm_t_v[as=smp,vc=ps]
->amh gmgm_v[as=smp,vc=smp]
->amh gm_t_v[as=smp,vc=smp]
*** assist_v
->amh rd'_v[as=smp,vc=smp]
*** assume_v
->amh gm_t_v[as=smp,vc=ps]
->amh gm_t_v[as=smp,vc=smp]
*** assure_v
->amh rgT_v[as=smp,vc=cs]
*** astonish_v
->amh dnq_v[as=smp,vc=cs]
*** attack_v
->amh Tnawt_v[as=smp,vc=ps]
->amh dbdb_v[as=smp,vc=smp]
*** attack_v assaulted
->amh dbdb_v[as=smp,vc=ps]
*** attempt_v
->amh mWk_r_v[as=smp,vc=smp]
*** attract_v
->amh s'b_v[as=smp,vc=smp]
*** await_v
->amh Tb_q_v[as=it,vc=ps]
*** awake_v
->amh nq'_v[as=smp,vc=tr]
*** awaken_v
->amh qsqs_v[as=smp,vc=smp]
*** awaken_v suddenly
->amh bann_v[as=smp,vc=tr]
*** babble_v
->amh zlabd_v[as=smp,vc=smp]
*** back_v
->amh dg_f_v[as=smp,vc=smp]
*** back_v out
->amh 'fr_v[as=smp,vc=smp]
*** badger_v
->amh gWtgWt_v[as=smp,vc=smp]
*** bake_v
->amh rm_T_v[as=smp,vc=smp]
*** bake_v bread
->amh gagr_v[as=smp,vc=smp]
*** balance_v
->amh mz_n_v[as=smp,vc=smp]
*** bang_v in
->amh qrqr_v[as=smp,vc=smp]
*** banish_v
->amh g'z_v[as=smp,vc=tr]
*** bankrupt_v
->amh qlT_v[as=smp,vc=tr]
->amh ksr_v[as=smp,vc=tr]
*** baptize_v
->amh Tmq_v[as=smp,vc=tr]
*** bargain_v
->amh sm'_v[as=it,vc=ps]
*** bark_v
->amh Cwh_v[as=smp,vc=smp]
*** barter_v
->amh ngd_v[as=it,vc=ps]
*** bathe_v
->amh 'Tb_v[as=smp,vc=smp]
*** batter_v
->amh dqW_s_v[as=it,vc=smp]
*** be_v abducted ; ^ abducted 1
->amh Tlf_v[as=smp,vc=ps]
*** be_v able ; ^ able 1
->amh c'l_v[as=smp,vc=smp]
*** be_v abrogated ; ^ abrogated 1
->amh frs_v[as=smp,vc=smp]
*** be_v absent; ^ absent 1
->amh 'T'_v[as=smp,vc=ps]
*** be_v abundant; ^ abundant 1
->amh brkt_v[as=rc,vc=ps]
->amh n|bxbx_v[as=smp,vc=ps]
->amh t|rfrf_v[as=smp,vc=ps]
*** be_v accomplished; ^ accomplished 1
->amh sk_'_v[as=rc,vc=ps]
->amh knawn_v[as=smp,vc=ps]
*** be_v acid; ^ acid 1
->amh hWmTT_v[as=smp,vc=smp]
*** be_v acrid; ^ acrid 1
->amh krkr_v[as=smp,vc=smp]
*** be_v added; ^ added 1
->amh Cm_r_v[as=smp,vc=ps]
->amh dm_r_v[as=smp,vc=ps]
*** be_v adjourned; ^ adjourned 1
->amh bq'_v[as=smp,vc=tr]
*** be_v administered; ^ administered 1
->amh 'dr_v[as=it,vc=ps]
*** be_v advised; ^ advised 1
->amh mkr_v[as=smp,vc=ps]
*** be_v afraid; ^ afraid 1
->amh fr'_v[as=smp,vc=smp]
*** be_v aggravated; ^ aggravated 1
->amh b's_v[as=smp,vc=smp]
->amh krr_v[as=rc,vc=ps]
*** be_v aggregated; ^ aggregated 1
->amh Tqll_v[as=rc,vc=ps]
*** be_v ajar; ^ ajar 1
->amh n|grbb_v[as=smp,vc=ps]
*** be_v alarmed; ^ alarmed 1
->amh dngT_v[as=smp,vc=smp]
->amh xb_r_v[as=smp,vc=ps]
->amh dngT_v[as=rc,vc=ps]
*** be_v alight; ^ alight 1
->amh fk'_v[as=smp,vc=smp]
*** be_v allotted; ^ allotted 1
->amh md_b_v[as=smp,vc=ps]
*** be_v ambiguous; ^ ambiguous 1
->amh d|bsbs_v[as=smp,vc=ps]
*** be_v analyzed; ^ analyzed 1
->amh tntn_v[as=smp,vc=ps]
*** be_v angry; ^ angry 1
->amh qWT'_v[as=smp,vc=ps]
*** be_v annealed; ^ annealed 1
->amh tb'_v[as=smp,vc=smp]
*** be_v announced; ^ announced 1
->amh lf_f_v[as=smp,vc=ps]
*** be_v annoyed; ^ annoyed 1
->amh bsaC*_v[as=smp,vc=ps]
*** be_v anointed; ^ anointed 1
->amh qb_'_v[as=smp,vc=ps]
*** be_v antagonistic; ^ antagonistic 1
->amh Trr_v[as=rc,vc=ps]
*** be_v anxious; ^ anxious 1
->amh gW'gW'_v[as=smp,vc=smp]
*** be_v appointed; ^ appointed 1
->amh xwm_v[as=smp,vc=ps]
*** be_v approachable; ^ approachable 1
->amh mald_v[as=smp,vc=ps]
*** be_v approved; ^ approved 1
->amh Sdq_v[as=smp,vc=smp]
*** be_v arbitrated; ^ arbitrated 1
->amh glagl_v[as=smp,vc=ps]
*** be_v arched; ^ arched 1
->amh qs_t_v[as=smp,vc=ps]
*** be_v armed; ^ armed 1
->amh 'Tq_v[as=smp,vc=ps]
*** be_v around; ^ around 1
->amh nbr_v[as=smp,vc=smp]
*** be_v aroused; ^ aroused 1
->amh 'l_l_v[as=smp,vc=smp]
*** be_v arranged; ^ arranged 1
->amh zgaj*_v[as=it,vc=ps]
->amh snad'_v[as=smp,vc=ps]
->amh snad'_v[as=it,vc=ps]
*** be_v arrested; ^ arrested 1
->amh y'z_v[as=smp,vc=ps]
*** be_v arrogant; ^ arrogant 1
->amh Cmalq_v[as=smp,vc=ps]
->amh Tgb_v[as=smp,vc=smp]
->amh Cmalq_v[as=it,vc=ps]
*** be_v ashamed; ^ ashamed 1
->amh 'fr_v[as=smp,vc=smp]
*** be_v asked; ^ asked 1
->amh Ty_q_v[as=smp,vc=ps]
*** be_v assembled; ^ assembled 1
->amh kmac*_v[as=smp,vc=ps]
*** be_v assigned; ^ assigned 1
->amh mr'_v[as=smp,vc=ps]
*** be_v astonished; ^ astonished 1
->amh grm_v[as=smp,vc=ps]
->amh dm_m_v[as=smp,vc=ps]
->amh dnq_v[as=smp,vc=ps]
*** be_v attentive; ^ attentive 1
->amh w'l_v[as=smp,vc=cs]
*** be_v attractive; ^ attractive 1
->amh m'r_v[as=smp,vc=tr]
*** be_v authenticated; ^ authenticated 1
->amh gnzb_v[as=rc,vc=ps]
*** be_v aware; ^ aware 1
->amh gnzb_v[as=smp,vc=ps]
*** be_v baked; ^ baked 1
->amh gagr_v[as=smp,vc=ps]
*** be_v banged; ^ banged 1
->amh qrqr_v[as=smp,vc=ps]
*** be_v banished; ^ banished 1
->amh g'z_v[as=smp,vc=ps]
*** be_v beaten; ^ beaten 1
->amh wq'_v[as=smp,vc=ps]
->amh dbdb_v[as=smp,vc=ps]
*** be_v beautiful; ^ beautiful 1
->amh w'b_v[as=smp,vc=ps]
->amh m'r_v[as=smp,vc=tr]
*** be_v bedraggled; ^ bedraggled 1
->amh Cmalq_v[as=smp,vc=ps]
*** be_v befriended; ^ befriended 1
->amh wdaj*_v[as=smp,vc=ps]
*** be_v begged; ^ begged 1
->amh lm_n_v[as=smp,vc=ps]
*** be_v beheaded; ^ beheaded 1
->amh sy_f_v[as=smp,vc=ps]
*** be_v believed; ^ believed 1
->amh 'mn_v[as=smp,vc=ps]
*** be_v belittled; ^ belittled 1
->amh n|gwall_v[as=smp,vc=ps]
*** be_v beneficial; ^ beneficial 1
->amh Tqm_v[as=smp,vc=smp]
*** be_v bent; ^ bent 1
->amh zb'_v[as=smp,vc=smp]
->amh lb_q_v[as=smp,vc=ps]
->amh gWbT_v[as=smp,vc=smp]
->amh n|gaTT_v[as=smp,vc=ps]
*** be_v besmeared; ^ besmeared 1
->amh Cmalq_v[as=it,vc=ps]
*** be_v biased; ^ biased 1
->amh dl'_v[as=smp,vc=tr]
*** be_v bismirched; ^ bismirched 1
->amh Cmalq_v[as=it,vc=ps]
*** be_v bitten; ^ bitten 1
->amh 'nks_v[as=smp,vc=ps]
*** be_v bitter; ^ bitter 1
->amh mrr_v[as=smp,vc=smp]
*** be_v blamed; ^ blamed 1
->amh nqf_v[as=smp,vc=ps]
*** be_v blessed; ^ blessed 1
->amh bark_v[as=smp,vc=ps]
*** be_v blotted; ^ blotted 1
->amh nqWT_v[as=smp,vc=smp]
*** be_v blown-out; ^ out 1
->amh nf'_v[as=it,vc=ps]
*** be_v boastful; ^ boastful 1
->amh kWr'_v[as=it,vc=ps]
*** be_v boiled; ^ boiled 1
->amh fl'_v[as=smp,vc=ps]
*** be_v bold; ^ bold 1
->amh dfr_v[as=smp,vc=smp]
*** be_v bolted; ^ bolted 1
->amh xgW_r_v[as=smp,vc=ps]
->amh qrqr_v[as=smp,vc=ps]
*** be_v bored; ^ bored 1
->amh bs'_v[as=smp,vc=ps]
->amh srsr_v[as=smp,vc=ps]
->amh bWrbWr_v[as=smp,vc=ps]
*** be_v born; ^ born 1
->amh wld_v[as=smp,vc=ps]
*** be_v bought; ^ bought 1
->amh xm_t_v[as=smp,vc=ps]
->amh gz'_v[as=smp,vc=ps]
*** be_v branded; ^ branded 1
->amh tkW_s_v[as=smp,vc=ps]
*** be_v brave; ^ brave 1
->amh gWb_z_v[as=smp,vc=smp]
*** be_v brewed; ^ brewed 1
->amh Tmq_v[as=smp,vc=ps]
*** be_v bridled; ^ bridled 1
->amh lgW_m_v[as=smp,vc=ps]
*** be_v brief; ^ brief 1
->amh 'Tr_v[as=smp,vc=smp]
*** be_v brightened; ^ brightened 1
->amh dmq_v[as=smp,vc=smp]
*** be_v broadcast; ^ broadcast 1
->amh sraC*_v[as=smp,vc=ps]
*** be_v broken; ^ broken 1
->amh nkt_v[as=smp,vc=smp]
->amh sbr_v[as=smp,vc=ps]
->amh qlTm_v[as=smp,vc=ps]
*** be_v built; ^ built 1
->amh 'nT_v[as=smp,vc=ps]
*** be_v buried; ^ buried 1
->amh qbr_v[as=smp,vc=ps]
*** be_v burned; ^ burned 1
->amh lmTT_v[as=smp,vc=ps]
*** be_v burnt; ^ burnt 1
->amh qT_l_v[as=rc,vc=ps]
*** be_v burst; ^ burst 1
->amh brgd_v[as=it,vc=ps]
*** be_v bushy; ^ bushy 1
->amh cf_g_v[as=smp,vc=ps]
*** be_v busy; ^ busy 1
->amh y'z_v[as=smp,vc=ps]
*** be_v cajoled; ^ cajoled 1
->amh dl_l_v[as=smp,vc=ps]
*** be_v canceled; ^ canceled 1
->amh sr_z_v[as=smp,vc=ps]
*** be_v capsized; ^ capsized 1
->amh glbT_v[as=smp,vc=ps]
*** be_v careful; ^ careful 1
->amh Tnqq_v[as=smp,vc=ps]
*** be_v careless; ^ careless 1
->amh n|zlazl_v[as=smp,vc=ps]
*** be_v castrated; ^ castrated 1
->amh wqT_v[as=smp,vc=ps]
->amh kWlax*_v[as=smp,vc=ps]
->amh slb_v[as=smp,vc=ps]
*** be_v casuistic; ^ casuistic 1
->amh rqq_v[as=rc,vc=ps]
*** be_v caught; ^ caught 1
->amh ql_b_v[as=smp,vc=ps]
->amh y'z_v[as=smp,vc=ps]
*** be_v celebrated; ^ celebrated 1
->amh kbr_v[as=smp,vc=smp]
*** be_v changed; ^ changed 1
->amh mnzr_v[as=smp,vc=ps]
->amh lw_T_v[as=smp,vc=ps]
->amh zrzr_v[as=smp,vc=ps]
*** be_v chapped; ^ chapped 1
->amh qWrfd_v[as=smp,vc=smp]
*** be_v charged; ^ charged 1
->amh kss_v[as=smp,vc=ps]
*** be_v charitable; ^ charitable 1
->amh lg_s_v[as=smp,vc=smp]
*** be_v chastized; ^ chastized 1
->amh qsf_v[as=smp,vc=ps]
*** be_v cheap; ^ cheap 1
->amh rks_v[as=smp,vc=smp]
*** be_v cheated; ^ cheated 1
->amh C|brbr_v[as=smp,vc=ps]
*** be_v checked; ^ checked 1
->amh ft_x_v[as=smp,vc=ps]
*** be_v chewed; ^ chewed 1
->amh 'N_k_v[as=smp,vc=ps]
->amh qWrTm_v[as=smp,vc=ps]
->amh lm_T_v[as=rc,vc=ps]
*** be_v chilly; ^ chilly 1
->amh qzqz_v[as=rc,vc=ps]
*** be_v chipped; ^ chipped 1
->amh xr_f_v[as=it,vc=ps]
*** be_v choked; ^ choked 1
->amh 'nq_v[as=smp,vc=ps]
->amh dfn_v[as=rc,vc=ps]
->amh 'f_n_v[as=smp,vc=ps]
*** be_v chopped; ^ chopped 1
->amh ktkt_v[as=smp,vc=ps]
->amh flT_v[as=smp,vc=ps]
->amh qrTf_v[as=smp,vc=ps]
*** be_v chosen; ^ chosen 1
->amh mrT_v[as=smp,vc=ps]
*** be_v churned; ^ churned 1
->amh n'T_v[as=smp,vc=ps]
*** be_v circulated; ^ circulated 1
->amh sraC*_v[as=smp,vc=ps]
*** be_v circumcised; ^ circumcised 1
->amh gr_z_v[as=smp,vc=ps]
*** be_v clarified; ^ clarified 1
->amh br'_v[as=it,vc=ps]
->amh ngWr_v[as=smp,vc=smp]
*** be_v clawed; ^ clawed 1
->amh bWC_q_v[as=smp,vc=ps]
->amh bWaTT_v[as=smp,vc=ps]
*** be_v clean; ^ clean 1
->amh Td'_v[as=smp,vc=smp]
*** be_v cleaned; ^ cleaned 1
->amh Sd'_v[as=smp,vc=smp]
*** be_v clear; ^ clear 1
->amh Tr'_v[as=smp,vc=smp]
->amh gWl'_v[as=smp,vc=smp]
->amh ks_t_v[as=smp,vc=ps]
*** be_v closed; ^ closed 1
->amh dfn_v[as=smp,vc=ps]
->amh zg'_v[as=smp,vc=ps]
*** be_v cloudy; ^ cloudy 1
->amh damn_v[as=smp,vc=smp]
*** be_v coherent; ^ coherent 1
->amh y'z_v[as=it,vc=ps]
*** be_v coiled; ^ coiled 1
->amh TnTn_v[as=smp,vc=ps]
*** be_v collected; ^ collected 1
->amh Trqm_v[as=rc,vc=ps]
*** be_v combed; ^ combed 1
->amh bT_r_v[as=smp,vc=ps]
*** be_v combined; ^ combined 1
->amh Tm_r_v[as=rc,vc=ps]
*** be_v comfortable; ^ comfortable 1
->amh mc_*_v[as=smp,vc=tr]
->amh mc_*_v[as=smp,vc=ps]
->amh dl'_v[as=smp,vc=smp]
*** be_v comforted; ^ comforted 1
->amh Sn'_v[as=it,vc=ps]
*** be_v commemorated; ^ commemorated 1
->amh 's_b_v[as=smp,vc=ps]
*** be_v comparable; ^ comparable 1
->amh mz_n_v[as=it,vc=ps]
->amh mT_n_v[as=it,vc=ps]
*** be_v compared; ^ compared 1
->amh nSr_v[as=it,vc=ps]
->amh wd_r_v[as=it,vc=ps]
*** be_v compatible; ^ compatible 1
->amh gN*_v[as=it,vc=ps]
*** be_v compelled; ^ compelled 1
->amh gdd_v[as=smp,vc=ps]
*** be_v compensated; ^ compensated 1
->amh k's_v[as=smp,vc=ps]
*** be_v competent; ^ competent 1
->amh bq'_v[as=smp,vc=smp]
*** be_v complete; ^ complete 1
->amh mWl'_v[as=rc,vc=ps]
*** be_v completed; ^ completed 1
->amh zlq_v[as=smp,vc=ps]
->amh Tnqq_v[as=rc,vc=ps]
->amh Cr_s_v[as=smp,vc=ps]
->amh fS_m_v[as=smp,vc=ps]
*** be_v composed; ^ composed 1
->amh drs_v[as=smp,vc=ps]
*** be_v compressed; ^ compressed 1
->amh lTlT_v[as=smp,vc=ps]
*** be_v concealed; ^ concealed 1
->amh sw_r_v[as=smp,vc=ps]
*** be_v conceited; ^ conceited 1
->amh gzf_v[as=smp,vc=tr]
->amh dndn_v[as=smp,vc=smp]
->amh Tgb_v[as=smp,vc=smp]
->amh gxr_v[as=smp,vc=ps]
->amh wT_r_v[as=smp,vc=ps]
*** be_v concluded; ^ concluded 1
->amh dmdm_v[as=smp,vc=ps]
->amh Tqll_v[as=rc,vc=ps]
*** be_v condemned; ^ condemned 1
->amh kWn_n_v[as=smp,vc=ps]
*** be_v confiscated; ^ confiscated 1
->amh wrs_v[as=smp,vc=ps]
*** be_v confused; ^ confused 1
->amh mt'_v[as=rc,vc=ps]
->amh mt'_v[as=it,vc=ps]
->amh zbarq_v[as=smp,vc=ps]
*** be_v congested; ^ congested 1
->amh Cnq_v[as=it,vc=ps]
->amh Cf_q_v[as=it,vc=ps]
*** be_v connected; ^ connected 1
->amh y'z_v[as=it,vc=ps]
*** be_v considered; ^ considered 1
->amh Tn'_v[as=smp,vc=ps]
*** be_v consoled; ^ consoled 1
->amh Sn'_v[as=it,vc=ps]
*** be_v constrained; ^ constrained 1
->amh gt'_v[as=smp,vc=ps]
*** be_v consumed; ^ consumed 1
->amh 'lq_v[as=smp,vc=smp]
->amh Cr_s_v[as=smp,vc=ps]
->amh fj*_v[as=smp,vc=ps]
*** be_v contigious; ^ contigious 1
->amh Tg'_v[as=it,vc=ps]
*** be_v contributed; ^ contributed 1
->amh wT'_v[as=it,vc=ps]
*** be_v convenient; ^ convenient 1
->amh mc_*_v[as=smp,vc=ps]
*** be_v cooked; ^ cooked 1
->amh qq_l_v[as=smp,vc=ps]
*** be_v cool; ^ cool 1
->amh qzqz_v[as=rc,vc=ps]
*** be_v copied; ^ copied 1
->amh glbT_v[as=smp,vc=ps]
*** be_v copious; ^ copious 1
->amh t|rfrf_v[as=smp,vc=ps]
*** be_v corrected; ^ corrected 1
->amh kWr_j_v[as=smp,vc=ps]
->amh 'r_m_v[as=smp,vc=ps]
*** be_v corroded; ^ corroded 1
->amh bl'_v[as=smp,vc=ps]
*** be_v counted; ^ counted 1
->amh qWTr_v[as=smp,vc=ps]
*** be_v courageous; ^ courageous 1
->amh dfr_v[as=smp,vc=smp]
->amh gWb_z_v[as=smp,vc=smp]
->amh jgn_v[as=smp,vc=smp]
*** be_v covered; ^ covered 1
->amh Tqll_v[as=rc,vc=ps]
->amh kdn_v[as=smp,vc=ps]
->amh xf_n_v[as=smp,vc=ps]
*** be_v cracked; ^ cracked 1
->amh frks_v[as=smp,vc=ps]
*** be_v crafty; ^ crafty 1
->amh Cwl_v[as=smp,vc=smp]
*** be_v cramped; ^ cramped 1
->amh 'f_g_v[as=smp,vc=ps]
*** be_v created; ^ created 1
->amh fTr_v[as=smp,vc=ps]
*** be_v crippled; ^ crippled 1
->amh snkl_v[as=smp,vc=ps]
*** be_v criticised; ^ criticised 1
->amh nqf_v[as=smp,vc=ps]
*** be_v criticized; ^ criticized 1
->amh tc_*_v[as=smp,vc=ps]
*** be_v crooked; ^ crooked 1
->amh Tmm_v[as=smp,vc=smp]
->amh Tmm_v[as=rc,vc=ps]
*** be_v cross-eyed; ^ eyed 1
->amh xndr_v[as=smp,vc=smp]
*** be_v crossbred; ^ crossbred 1
->amh dq_l_v[as=rc,vc=ps]
*** be_v crowded; ^ crowded 1
->amh Cnq_v[as=it,vc=ps]
->amh Tbb_v[as=rc,vc=ps]
*** be_v crowned; ^ crowned 1
->amh qdaj*_v[as=smp,vc=ps]
*** be_v crucified; ^ crucified 1
->amh sql_v[as=smp,vc=ps]
*** be_v cruel; ^ cruel 1
->amh Ck_n_v[as=smp,vc=smp]
*** be_v crumbled; ^ crumbled 1
->amh qWrs_v[as=it,vc=ps]
*** be_v crushed; ^ crushed 1
->amh damT_v[as=smp,vc=ps]
->amh Cflq_v[as=smp,vc=ps]
*** be_v cured; ^ cured 1
->amh d'n_v[as=smp,vc=smp]
->amh x'r_v[as=smp,vc=smp]
*** be_v cursed; ^ cursed 1
->amh rgm_v[as=smp,vc=ps]
*** be_v curved; ^ curved 1
->amh gWbT_v[as=smp,vc=smp]
*** be_v customary; ^ customary 1
->amh lmd_v[as=smp,vc=ps]
*** be_v cut; ^ cut 1
->amh krkm_v[as=smp,vc=ps]
->amh qWr_'_v[as=smp,vc=ps]
->amh qWrT_v[as=smp,vc=ps]
*** be_v damp; ^ damp 1
->amh rTb_v[as=smp,vc=smp]
*** be_v dark; ^ dark 1
->amh Cl_m_v[as=smp,vc=smp]
*** be_v daubed; ^ daubed 1
->amh lqlq_v[as=smp,vc=ps]
*** be_v de-husked; ^ husked 1
->amh xkxk_v[as=smp,vc=ps]
->amh xlqq_v[as=smp,vc=ps]
*** be_v deaf; ^ deaf 1
->amh dnqWr_v[as=smp,vc=smp]
*** be_v deceived; ^ deceived 1
->amh tall_v[as=smp,vc=ps]
->amh wnbd_v[as=rc,vc=ps]
*** be_v decided; ^ decided 1
->amh ws_n_v[as=smp,vc=ps]
->amh qWrT_v[as=smp,vc=ps]
*** be_v declared; ^ declared 1
->amh glS_v[as=smp,vc=ps]
*** be_v decorated; ^ decorated 1
->amh gyT_v[as=smp,vc=tr]
->amh xl_m_v[as=smp,vc=ps]
*** be_v decreased; ^ decreased 1
->amh qn_s_v[as=smp,vc=ps]
*** be_v deep; ^ deep 1
->amh Tlq_v[as=smp,vc=smp]
*** be_v defiled; ^ defiled 1
->amh rks_v[as=smp,vc=smp]
*** be_v deformed; ^ deformed 1
->amh Cramt_v[as=smp,vc=ps]
->amh Cramd_v[as=smp,vc=ps]
->amh Cramm_v[as=smp,vc=ps]
*** be_v delayed; ^ delayed 1
->amh zgy*_v[as=smp,vc=smp]
*** be_v delegated; ^ delegated 1
->amh wk_l_v[as=smp,vc=ps]
*** be_v delicious; ^ delicious 1
->amh TafT_v[as=smp,vc=smp]
*** be_v deloused; ^ deloused 1
->amh qml_v[as=smp,vc=ps]
*** be_v denied; ^ denied 1
->amh 'bl_v[as=smp,vc=ps]
->amh k'd_v[as=smp,vc=ps]
*** be_v deprived; ^ deprived 1
->amh nfg_v[as=smp,vc=ps]
*** be_v destroyed; ^ destroyed 1
->amh Tf'_v[as=smp,vc=smp]
->amh dmss_v[as=smp,vc=ps]
->amh frs_v[as=smp,vc=smp]
*** be_v developed; ^ developed 1
->amh lm'_v[as=smp,vc=smp]
*** be_v difficult; ^ difficult 1
->amh dagt_v[as=smp,vc=tr]
->amh Snn_v[as=smp,vc=smp]
->amh kbd_v[as=smp,vc=smp]
*** be_v digested; ^ digested 1
->amh bl'_v[as=it,vc=ps]
*** be_v diked; ^ diked 1
->amh kt_r_v[as=smp,vc=ps]
*** be_v diligent; ^ diligent 1
->amh tg'_v[as=smp,vc=smp]
*** be_v diluted; ^ diluted 1
->amh kl_s_v[as=smp,vc=ps]
->amh qTn_v[as=smp,vc=smp]
*** be_v dim; ^ dim 1
->amh dbzz_v[as=smp,vc=smp]
*** be_v dipped; ^ dipped 1
->amh dfq_v[as=smp,vc=ps]
*** be_v dirtied; ^ dirtied 1
->amh r|mTmT_v[as=smp,vc=ps]
*** be_v dirty; ^ dirty 1
->amh qWx_x_v[as=smp,vc=smp]
*** be_v disappointed; ^ disappointed 1
->amh 'z_b_v[as=it,vc=ps]
*** be_v disclosed; ^ disclosed 1
->amh glS_v[as=smp,vc=ps]
->amh ks_t_v[as=smp,vc=ps]
*** be_v discoloured; ^ discoloured 1
->amh dnbz_v[as=smp,vc=smp]
*** be_v discontinued; ^ discontinued 1
->amh qWrT_v[as=rc,vc=ps]
*** be_v disentangled; ^ disentangled 1
->amh ft'_v[as=it,vc=ps]
*** be_v disgusted; ^ disgusted 1
->amh zgnn_v[as=smp,vc=smp]
*** be_v disgusting; ^ disgusting 1
->amh gWfnn_v[as=smp,vc=smp]
*** be_v disinfected; ^ disinfected 1
->amh Sd'_v[as=smp,vc=smp]
*** be_v disorganized; ^ disorganized 1
->amh dblq_v[as=it,vc=ps]
*** be_v displayed; ^ displayed 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v disputable; ^ disputable 1
->amh CqCq_v[as=rc,vc=tr]
*** be_v disrespectful; ^ disrespectful 1
->amh dfr_v[as=smp,vc=smp]
*** be_v disrupted; ^ disrupted 1
->amh qaws_v[as=smp,vc=ps]
->amh fls_v[as=rc,vc=ps]
*** be_v distorted; ^ distorted 1
->amh zb'_v[as=rc,vc=ps]
*** be_v distressed; ^ distressed 1
->amh nk'_v[as=smp,vc=ps]
*** be_v distributed; ^ distributed 1
->amh 'd_l_v[as=smp,vc=ps]
->amh drs_v[as=rc,vc=ps]
*** be_v disturbed; ^ disturbed 1
->amh 'w_k_v[as=smp,vc=ps]
->amh wk'_v[as=smp,vc=tr]
->amh bTbT_v[as=smp,vc=ps]
->amh bTbT_v[as=rc,vc=ps]
->amh qWrqWr_v[as=smp,vc=ps]
*** be_v divested; ^ divested 1
->amh gff_v[as=smp,vc=ps]
*** be_v divided; ^ divided 1
->amh kfl_v[as=it,vc=ps]
->amh gms_v[as=smp,vc=ps]
->amh kfl_v[as=smp,vc=ps]
*** be_v donated; ^ donated 1
->amh darg_v[as=smp,vc=ps]
*** be_v done; ^ done 1
->amh drg_v[as=smp,vc=ps]
->amh dgm_v[as=it,vc=ps]
*** be_v drafted; ^ drafted 1
->amh rqq_v[as=smp,vc=smp]
*** be_v drawn; ^ drawn 1
->amh s'l_v[as=smp,vc=ps]
*** be_v drilled; ^ drilled 1
->amh bs'_v[as=smp,vc=ps]
*** be_v dropped; ^ dropped 1
->amh tw_v[as=smp,vc=ps]
*** be_v dry; ^ dry 1
->amh drq_v[as=smp,vc=smp]
*** be_v dug; ^ dug 1
->amh qWf_r_v[as=smp,vc=ps]
*** be_v dull; ^ dull 1
->amh dnzz_v[as=smp,vc=smp]
->amh dWldWm_v[as=smp,vc=smp]
->amh dn_z_v[as=smp,vc=smp]
->amh dd_b_v[as=smp,vc=smp]
*** be_v ejected; ^ ejected 1
->amh s|fnTr_v[as=smp,vc=ps]
*** be_v eliminated; ^ eliminated 1
->amh wg_d_v[as=smp,vc=ps]
*** be_v elucidated; ^ elucidated 1
->amh br'_v[as=it,vc=ps]
*** be_v emaciated; ^ emaciated 1
->amh C'C'_v[as=smp,vc=smp]
*** be_v embarrassed; ^ embarrassed 1
->amh sq_q_v[as=smp,vc=ps]
->amh Cnq_v[as=smp,vc=ps]
*** be_v embroidered; ^ embroidered 1
->amh zmzm_v[as=smp,vc=ps]
*** be_v emphasized; ^ emphasized 1
->amh Tnkr_v[as=rc,vc=ps]
*** be_v employed; ^ employed 1
->amh qTr_v[as=smp,vc=ps]
*** be_v emptied; ^ emptied 1
->amh zrgf_v[as=smp,vc=ps]
*** be_v encircled; ^ encircled 1
->amh kbb_v[as=smp,vc=ps]
*** be_v engaged; ^ engaged 1
->amh 'C*_v[as=smp,vc=smp]
*** be_v enough; ^ enough 1
->amh bq'_v[as=smp,vc=smp]
*** be_v enraged; ^ enraged 1
->amh bgn_v[as=smp,vc=smp]
*** be_v enriched; ^ enriched 1
->amh dabr_v[as=smp,vc=smp]
*** be_v enrolled; ^ enrolled 1
->amh ktb_v[as=smp,vc=ps]
*** be_v entangled; ^ entangled 1
->amh w|tbtb_v[as=smp,vc=ps]
->amh 'sr_v[as=it,vc=ps]
*** be_v enthusiastic; ^ enthusiastic 1
->amh nx_T_v[as=smp,vc=smp]
*** be_v entwined; ^ entwined 1
->amh TmTm_v[as=smp,vc=ps]
*** be_v enumerated; ^ enumerated 1
->amh zrzr_v[as=smp,vc=ps]
*** be_v envigorated; ^ envigorated 1
->amh Tnkr_v[as=rc,vc=ps]
*** be_v envious; ^ envious 1
->amh qn'_v[as=smp,vc=smp]
*** be_v equalized; ^ equalized 1
->amh 'k_l_v[as=it,vc=ps]
*** be_v eradicated; ^ eradicated 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v erected; ^ erected 1
->amh wqr_v[as=rc,vc=ps]
*** be_v eroded; ^ eroded 1
->amh xrxr_v[as=smp,vc=ps]
->amh xntr_v[as=smp,vc=ps]
->amh bWrbWr_v[as=smp,vc=ps]
->amh 'Tb_v[as=smp,vc=ps]
*** be_v escorted; ^ escorted 1
->amh 'j_b_v[as=smp,vc=ps]
*** be_v established; ^ established 1
->amh qwm_v[as=it,vc=ps]
->amh qWrqWr_v[as=smp,vc=ps]
*** be_v estimated; ^ estimated 1
->amh gm_t_v[as=smp,vc=ps]
*** be_v evaluated; ^ evaluated 1
->amh gmgm_v[as=smp,vc=ps]
->amh frd_v[as=smp,vc=ps]
*** be_v evicted; ^ evicted 1
->amh nql_v[as=smp,vc=ps]
*** be_v exaggerated; ^ exaggerated 1
->amh ngs_v[as=rc,vc=ps]
->amh gnn_v[as=rc,vc=ps]
->amh dnq_v[as=rc,vc=ps]
*** be_v excellent; ^ excellent 1
->amh n'q_v[as=smp,vc=cs]
*** be_v excluded; ^ excluded 1
->amh gll_v[as=smp,vc=ps]
*** be_v exhausted; ^ exhausted 1
->amh z|lflf_v[as=smp,vc=ps]
->amh z'l_v[as=smp,vc=smp]
*** be_v exiled; ^ exiled 1
->amh sdd_v[as=smp,vc=ps]
*** be_v expected; ^ expected 1
->amh Tb_q_v[as=smp,vc=ps]
*** be_v explained; ^ explained 1
->amh glS_v[as=smp,vc=ps]
*** be_v exploited; ^ exploited 1
->amh mzbr_v[as=smp,vc=ps]
->amh bzbz_v[as=smp,vc=ps]
*** be_v exposed; ^ exposed 1
->amh glS_v[as=rc,vc=ps]
*** be_v extended; ^ extended 1
->amh zrg'_v[as=smp,vc=ps]
*** be_v exterminated; ^ exterminated 1
->amh CfCf_v[as=smp,vc=ps]
*** be_v extinguished; ^ extinguished 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v famous; ^ famous 1
->amh gnn_v[as=smp,vc=smp]
*** be_v fast; ^ fast 1
->amh fTn_v[as=smp,vc=smp]
*** be_v fastened; ^ fastened 1
->amh Tbq_v[as=smp,vc=smp]
*** be_v fat; ^ fat 1
->amh gzf_v[as=smp,vc=smp]
*** be_v fattened; ^ fattened 1
->amh mWl'_v[as=smp,vc=tr]
*** be_v feared; ^ feared 1
->amh fr'_v[as=smp,vc=ps]
*** be_v fearful; ^ fearful 1
->amh fr'_v[as=smp,vc=smp]
*** be_v fenced; ^ fenced 1
->amh 'Tr_v[as=smp,vc=ps]
*** be_v fermented; ^ fermented 1
->amh fl'_v[as=smp,vc=smp]
->amh bl'_v[as=it,vc=ps]
*** be_v fertile; ^ fertile 1
->amh rb'_v[as=smp,vc=smp]
*** be_v filed; ^ filed 1
->amh mWr_d_v[as=smp,vc=ps]
*** be_v filled; ^ filled 1
->amh mWl'_v[as=smp,vc=ps]
*** be_v filtered; ^ filtered 1
->amh Tr'_v[as=rc,vc=ps]
->amh Tl_l_v[as=smp,vc=smp]
*** be_v fine; ^ fine 1
->amh dqq_v[as=smp,vc=smp]
*** be_v finished; ^ finished 1
->amh Tnqq_v[as=rc,vc=ps]
->amh Cr_s_v[as=smp,vc=ps]
*** be_v fired; ^ fired 1
->amh wg_d_v[as=smp,vc=ps]
->amh tkW_s_v[as=smp,vc=ps]
->amh brr_v[as=rc,vc=ps]
*** be_v firm; ^ firm 1
->amh Tbq_v[as=smp,vc=smp]
->amh Tn'_v[as=smp,vc=smp]
*** be_v fixed; ^ fixed 1
->amh wdd_v[as=rc,vc=ps]
*** be_v flavourless; ^ flavourless 1
->amh 'l_T_v[as=smp,vc=smp]
*** be_v fleeced; ^ fleeced 1
->amh mWl_C_v[as=smp,vc=ps]
*** be_v flooded; ^ flooded 1
->amh T|lqlq_v[as=smp,vc=ps]
*** be_v folded; ^ folded 1
->amh 'Tf_v[as=smp,vc=ps]
*** be_v fooled; ^ fooled 1
->amh blT_v[as=smp,vc=ps]
*** be_v forbearing; ^ forbearing 1
->amh c'l_v[as=smp,vc=cs]
*** be_v forced; ^ forced 1
->amh gdd_v[as=smp,vc=ps]
*** be_v forgotten; ^ forgotten 1
->amh zng'_v[as=it,vc=ps]
->amh rs'_v[as=smp,vc=ps]
->amh zng'_v[as=smp,vc=ps]
*** be_v found; ^ found 1
->amh gN*_v[as=smp,vc=ps]
*** be_v founded; ^ founded 1
->amh msrt_v[as=smp,vc=ps]
*** be_v frightened; ^ frightened 1
->amh fr'_v[as=smp,vc=smp]
->amh n|qTqT_v[as=smp,vc=ps]
*** be_v frisky; ^ frisky 1
->amh 'l_l_v[as=smp,vc=smp]
*** be_v full; ^ full 1
->amh mWl'_v[as=smp,vc=smp]
->amh Tgb_v[as=smp,vc=smp]
*** be_v fumigated; ^ fumigated 1
->amh 'Tn_v[as=smp,vc=ps]
*** be_v gathered; ^ gathered 1
->amh sbsb_v[as=smp,vc=ps]
*** be_v generous; ^ generous 1
->amh lg_s_v[as=smp,vc=smp]
->amh cyr_v[as=smp,vc=smp]
*** be_v gentle; ^ gentle 1
->amh lz_b_v[as=smp,vc=smp]
*** be_v given; ^ given 1
->amh sT*_v[as=smp,vc=ps]
->amh rd'_v[as=smp,vc=ps]
->amh by_n_v[as=smp,vc=ps]
*** be_v gleaned; ^ gleaned 1
->amh qarm_v[as=smp,vc=ps]
*** be_v gloomy; ^ gloomy 1
->amh n|Trzz_v[as=smp,vc=ps]
*** be_v glued; ^ glued 1
->amh Tbq_v[as=rc,vc=ps]
*** be_v grabbed; ^ grabbed 1
->amh Cb_t_v[as=smp,vc=ps]
->amh qm_'_v[as=smp,vc=ps]
*** be_v grave; ^ grave 1
->amh kbd_v[as=smp,vc=smp]
*** be_v greedy; ^ greedy 1
->amh s|gbgb_v[as=smp,vc=ps]
->amh n|gbgb_v[as=smp,vc=ps]
*** be_v ground; ^ ground 1
->amh qWrTm_v[as=smp,vc=ps]
*** be_v guzzled; ^ guzzled 1
->amh l'f_v[as=smp,vc=ps]
*** be_v hacked; ^ hacked 1
->amh gmdl_v[as=smp,vc=ps]
*** be_v haltered; ^ haltered 1
->amh xb_b_v[as=smp,vc=ps]
*** be_v hammered; ^ hammered 1
->amh qTqT_v[as=smp,vc=ps]
*** be_v hanged; ^ hanged 1
->amh sql_v[as=smp,vc=ps]
*** be_v hard; ^ hard 1
->amh Tnkr_v[as=smp,vc=smp]
->amh gWrbT_v[as=smp,vc=smp]
*** be_v harmed; ^ harmed 1
->amh gWd'_v[as=smp,vc=ps]
*** be_v harnessed; ^ harnessed 1
->amh lb_b_v[as=smp,vc=ps]
*** be_v harrowed; ^ harrowed 1
->amh ksks_v[as=smp,vc=ps]
*** be_v hasted; ^ hasted 1
->amh wkb_v[as=rc,vc=ps]
*** be_v hatched; ^ hatched 1
->amh flfl_v[as=smp,vc=ps]
->amh qfqf_v[as=smp,vc=ps]
*** be_v hated; ^ hated 1
->amh Tl'_v[as=smp,vc=ps]
*** be_v healed; ^ healed 1
->amh d'n_v[as=smp,vc=smp]
->amh fw_s_v[as=smp,vc=ps]
->amh x'r_v[as=smp,vc=smp]
*** be_v heaped; ^ heaped 1
->amh qWl_l_v[as=smp,vc=ps]
*** be_v heard; ^ heard 1
->amh sm'_v[as=smp,vc=ps]
*** be_v heated; ^ heated 1
->amh g'l_v[as=it,vc=ps]
->amh g'l_v[as=smp,vc=smp]
*** be_v heavy; ^ heavy 1
->amh kbd_v[as=rc,vc=ps]
->amh kbd_v[as=smp,vc=smp]
*** be_v helped; ^ helped 1
->amh rd'_v[as=smp,vc=ps]
*** be_v helpful; ^ helpful 1
->amh gdd_v[as=rc,vc=tr]
->amh Tqm_v[as=smp,vc=smp]
*** be_v hewed; ^ hewed 1
->amh krtf_v[as=smp,vc=ps]
*** be_v hidden; ^ hidden 1
->amh db_q_v[as=smp,vc=ps]
->amh xx_g_v[as=smp,vc=ps]
->amh xf_n_v[as=it,vc=ps]
*** be_v hindered; ^ hindered 1
->amh nTb_v[as=rc,vc=ps]
*** be_v hit; ^ hit 1
->amh ql'_v[as=smp,vc=ps]
->amh Zl_T_v[as=smp,vc=ps]
->amh lt_m_v[as=smp,vc=ps]
->amh mt'_v[as=smp,vc=ps]
*** be_v hobbled; ^ hobbled 1
->amh qy_d_v[as=smp,vc=ps]
->amh snkl_v[as=smp,vc=ps]
*** be_v hoed; ^ hoed 1
->amh kWtkWt_v[as=smp,vc=ps]
*** be_v hollowed; ^ hollowed 1
->amh flfl_v[as=smp,vc=ps]
*** be_v honest; ^ honest 1
->amh mc_*_v[as=smp,vc=tr]
*** be_v honoured; ^ honoured 1
->amh kbr_v[as=smp,vc=smp]
->amh kbr_v[as=smp,vc=ps]
*** be_v horrified; ^ horrified 1
->amh zgnn_v[as=smp,vc=smp]
*** be_v hot; ^ hot 1
->amh g'l_v[as=smp,vc=smp]
->amh fj*_v[as=rc,vc=ps]
*** be_v housed; ^ housed 1
->amh 'rf_v[as=smp,vc=smp]
*** be_v humiliated; ^ humiliated 1
->amh wrd_v[as=rc,vc=ps]
*** be_v humped; ^ humped 1
->amh gWbT_v[as=smp,vc=smp]
*** be_v hung; ^ hung 1
->amh n|TlTl_v[as=smp,vc=ps]
*** be_v hungry; ^ hungry 1
->amh r'b_v[as=smp,vc=smp]
->amh r'b_v[as=smp,vc=ps]
*** be_v hurt; ^ hurt 1
->amh kf'_v[as=smp,vc=ps]
*** be_v husked; ^ husked 1
->amh flfl_v[as=smp,vc=ps]
*** be_v ignored; ^ ignored 1
->amh 'lf_v[as=smp,vc=ps]
*** be_v ill; ^ ill 1
->amh 'mm_v[as=smp,vc=smp]
*** be_v impeached; ^ impeached 1
->amh x'r_v[as=smp,vc=ps]
*** be_v imperative; ^ imperative 1
->amh fl_g_v[as=smp,vc=cs]
*** be_v impertinent; ^ impertinent 1
->amh ftft_v[as=smp,vc=smp]
*** be_v implicated; ^ implicated 1
->amh bk_l_v[as=smp,vc=ps]
*** be_v impolite; ^ impolite 1
->amh nw_r_v[as=smp,vc=cs]
*** be_v important; ^ important 1
->amh fl_g_v[as=smp,vc=cs]
*** be_v importunate; ^ importunate 1
->amh cg_r_v[as=smp,vc=cs]
->amh n|sfsf_v[as=smp,vc=ps]
->amh nznz_v[as=smp,vc=smp]
*** be_v impossible; ^ impossible 1
->amh dagt_v[as=smp,vc=tr]
*** be_v impounded; ^ impounded 1
->amh y'z_v[as=smp,vc=ps]
*** be_v impoverished; ^ impoverished 1
->amh dxy*_v[as=smp,vc=smp]
*** be_v impressed; ^ impressed 1
->amh dnq_v[as=smp,vc=tr]
*** be_v imprisoned; ^ imprisoned 1
->amh 'sr_v[as=smp,vc=ps]
*** be_v improved; ^ improved 1
->amh x'l_v[as=it,vc=ps]
*** be_v impure; ^ impure 1
->amh rks_v[as=smp,vc=smp]
*** be_v incised; ^ incised 1
->amh bT'_v[as=smp,vc=ps]
*** be_v incomparable; ^ incomparable 1
->amh n'q_v[as=smp,vc=cs]
*** be_v increased; ^ increased 1
->amh 'k_l_v[as=smp,vc=ps]
*** be_v indecent; ^ indecent 1
->amh nw_r_v[as=smp,vc=cs]
*** be_v induced; ^ induced 1
->amh ns'_v[as=it,vc=ps]
*** be_v inflamed; ^ inflamed 1
->amh y'z_v[as=it,vc=ps]
*** be_v inflated; ^ inflated 1
->amh nf'_v[as=smp,vc=ps]
*** be_v infuriated; ^ infuriated 1
->amh db_n_v[as=smp,vc=smp]
->amh Tys_v[as=smp,vc=smp]
*** be_v inherited; ^ inherited 1
->amh wrs_v[as=smp,vc=ps]
*** be_v inquisitive; ^ inquisitive 1
->amh tWstWs_v[as=smp,vc=tr]
*** be_v inserted; ^ inserted 1
->amh dnqr_v[as=smp,vc=ps]
->amh zrnq_v[as=smp,vc=ps]
*** be_v inspected; ^ inspected 1
->amh ft_x_v[as=smp,vc=ps]
*** be_v instigated; ^ instigated 1
->amh gf'_v[as=it,vc=ps]
*** be_v insulted; ^ insulted 1
->amh sdb_v[as=smp,vc=ps]
*** be_v insulting; ^ insulting 1
->amh mWTmWT_v[as=smp,vc=tr]
*** be_v interfering; ^ interfering 1
->amh tWstWs_v[as=smp,vc=tr]
*** be_v interlocked; ^ interlocked 1
->amh sk_'_v[as=rc,vc=ps]
->amh qWaTr_v[as=it,vc=tr]
*** be_v interrupted; ^ interrupted 1
->amh dnaqf_v[as=smp,vc=ps]
*** be_v intrusive; ^ intrusive 1
->amh ftft_v[as=smp,vc=smp]
*** be_v invaded; ^ invaded 1
->amh wrr_v[as=smp,vc=ps]
*** be_v ironed; ^ ironed 1
->amh tkW_s_v[as=smp,vc=ps]
*** be_v itemized; ^ itemized 1
->amh zrzr_v[as=smp,vc=ps]
*** be_v jubilant; ^ jubilant 1
->amh fndq_v[as=smp,vc=smp]
*** be_v judged; ^ judged 1
->amh frd_v[as=smp,vc=ps]
*** be_v jumpy; ^ jumpy 1
->amh xmqq_v[as=rc,vc=ps]
*** be_v kept; ^ kept 1
->amh Tb_q_v[as=smp,vc=ps]
*** be_v kicked; ^ kicked 1
->amh rgT_v[as=smp,vc=ps]
*** be_v killed; ^ killed 1
->amh gdl_v[as=smp,vc=ps]
*** be_v kissed; ^ kissed 1
->amh s'm_v[as=smp,vc=ps]
*** be_v kneaded; ^ kneaded 1
->amh laqWT_v[as=smp,vc=smp]
->amh bWk'_v[as=smp,vc=ps]
*** be_v knocked-down; ^ down 1
->amh zr_r_v[as=smp,vc=ps]
*** be_v known; ^ known 1
->amh 'wq_v[as=smp,vc=ps]
*** be_v late; ^ late 1
->amh qWy_*_v[as=smp,vc=smp]
->amh zgy*_v[as=smp,vc=smp]
*** be_v lean; ^ lean 1
->amh gWfy*_v[as=smp,vc=smp]
*** be_v led; ^ led 1
->amh mr'_v[as=smp,vc=ps]
*** be_v left; ^ left 1
->amh tw_v[as=smp,vc=ps]
*** be_v leveled; ^ leveled 1
->amh dldl_v[as=smp,vc=ps]
*** be_v licked; ^ licked 1
->amh l's_v[as=smp,vc=ps]
*** be_v lifeless; ^ lifeless 1
->amh qzqz_v[as=smp,vc=smp]
*** be_v limited; ^ limited 1
->amh ws_n_v[as=smp,vc=ps]
*** be_v listened; ^ listened 1
->amh dmT_v[as=smp,vc=ps]
*** be_v lived; ^ lived 1
->amh nwr_v[as=smp,vc=ps]
*** be_v lively; ^ lively 1
->amh dr'_v[as=smp,vc=smp]
*** be_v loaded; ^ loaded 1
->amh C'n_v[as=smp,vc=ps]
*** be_v loose; ^ loose 1
->amh l'l'_v[as=smp,vc=smp]
*** be_v looted; ^ looted 1
->amh mzbr_v[as=smp,vc=ps]
*** be_v loquacious; ^ loquacious 1
->amh n|T'T'_v[as=smp,vc=ps]
*** be_v lost; ^ lost 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v loved; ^ loved 1
->amh wdd_v[as=smp,vc=ps]
*** be_v low-spirited; ^ spirited 1
->amh qzz_v[as=smp,vc=smp]
*** be_v lulled; ^ lulled 1
->amh zng'_v[as=rc,vc=ps]
*** be_v magnified; ^ magnified 1
->amh gWl'_v[as=smp,vc=smp]
*** be_v maltreated; ^ maltreated 1
->amh n|glat'_v[as=smp,vc=ps]
->amh gf'_v[as=smp,vc=ps]
*** be_v mandated; ^ mandated 1
->amh wk_l_v[as=smp,vc=ps]
*** be_v married; ^ married 1
->amh d'r_v[as=smp,vc=ps]
*** be_v mature; ^ mature 1
->amh bsl_v[as=smp,vc=smp]
*** be_v measured; ^ measured 1
->amh mtr_v[as=smp,vc=ps]
*** be_v meddlesome; ^ meddlesome 1
->amh n|TWlTWl_v[as=smp,vc=ps]
*** be_v mentioned; ^ mentioned 1
->amh ws_'_v[as=smp,vc=ps]
*** be_v merciful; ^ merciful 1
->amh m'r_v[as=smp,vc=smp]
*** be_v merry; ^ merry 1
->amh fnTz_v[as=smp,vc=smp]
*** be_v milked; ^ milked 1
->amh 'lb_v[as=smp,vc=ps]
*** be_v minced; ^ minced 1
->amh ktf_v[as=smp,vc=ps]
->amh qrTf_v[as=it,vc=ps]
*** be_v miserly; ^ miserly 1
->amh nfg_v[as=smp,vc=smp]
*** be_v mishandled; ^ mishandled 1
->amh gWsqWl_v[as=rc,vc=ps]
*** be_v missed; ^ missed 1
->amh s't_v[as=smp,vc=ps]
*** be_v missing; ^ missing 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v mixed; ^ mixed 1
->amh qlaql_v[as=smp,vc=ps]
->amh dblq_v[as=rc,vc=ps]
->amh qy_T_v[as=smp,vc=ps]
*** be_v mowed; ^ mowed 1
->amh 'Cd_v[as=smp,vc=ps]
*** be_v much; ^ much 1
->amh bz'_v[as=smp,vc=tr]
*** be_v muddy; ^ muddy 1
->amh Cqy*_v[as=smp,vc=smp]
*** be_v multiplied; ^ multiplied 1
->amh bz'_v[as=rc,vc=ps]
*** be_v nailed; ^ nailed 1
->amh cnkr_v[as=smp,vc=ps]
*** be_v named; ^ named 1
->amh sN*_v[as=smp,vc=ps]
*** be_v narrow; ^ narrow 1
->amh Tbb_v[as=smp,vc=smp]
*** be_v neat; ^ neat 1
->amh Td'_v[as=smp,vc=smp]
*** be_v necessary; ^ necessary 1
->amh fl_g_v[as=smp,vc=cs]
*** be_v need; ^ need 1
->amh cg_r_v[as=smp,vc=ps]
*** be_v needy; ^ needy 1
->amh cg_r_v[as=smp,vc=ps]
*** be_v noisy; ^ noisy 1
->amh n|C'C'_v[as=smp,vc=ps]
*** be_v nominated; ^ nominated 1
->amh TqW_m_v[as=smp,vc=ps]
*** be_v numb; ^ numb 1
->amh fzz_v[as=smp,vc=smp]
*** be_v numerous; ^ numerous 1
->amh bz'_v[as=smp,vc=tr]
*** be_v obeyed; ^ obeyed 1
->amh sm'_v[as=smp,vc=ps]
*** be_v obligated; ^ obligated 1
->amh gdd_v[as=smp,vc=ps]
*** be_v obliging; ^ obliging 1
->amh mc_*_v[as=smp,vc=tr]
*** be_v obsessed; ^ obsessed 1
->amh b|slsl_v[as=smp,vc=tr]
->amh b|slsl_v[as=smp,vc=ps]
*** be_v obstinate; ^ obstinate 1
->amh d|rqrq_v[as=smp,vc=ps]
->amh n|gragr_v[as=smp,vc=tr]
*** be_v obstructed; ^ obstructed 1
->amh 'g_d_v[as=smp,vc=ps]
*** be_v occupied; ^ occupied 1
->amh y'z_v[as=smp,vc=ps]
*** be_v offensive; ^ offensive 1
->amh Sy_f_v[as=smp,vc=cs]
*** be_v open; ^ open 1
->amh fnd'_v[as=smp,vc=smp]
*** be_v opened; ^ opened 1
->amh glS_v[as=smp,vc=ps]
->amh kft_v[as=smp,vc=ps]
*** be_v oppressed; ^ oppressed 1
->amh Tq'_v[as=smp,vc=ps]
->amh CqW_n_v[as=smp,vc=ps]
*** be_v ordered; ^ ordered 1
->amh 'zz_v[as=smp,vc=ps]
*** be_v organized; ^ organized 1
->amh drj*_v[as=rc,vc=ps]
*** be_v outstanding; ^ outstanding 1
->amh n'q_v[as=smp,vc=cs]
*** be_v oval; ^ oval 1
->amh mWlmWl_v[as=smp,vc=smp]
->amh mWl_l_v[as=smp,vc=smp]
*** be_v over-cooked; ^ cooked 1
->amh nfr_v[as=smp,vc=smp]
*** be_v over-demanding; ^ demanding 1
->amh mWlaqq_v[as=smp,vc=ps]
*** be_v over-hasty; ^ hasty 1
->amh n|qlql_v[as=smp,vc=ps]
*** be_v over-inflated; ^ inflated 1
->amh qbtt_v[as=smp,vc=ps]
*** be_v overbearing; ^ overbearing 1
->amh 'by_v[as=smp,vc=ps]
*** be_v overcharged; ^ overcharged 1
->amh gWd'_v[as=smp,vc=ps]
*** be_v overcooked; ^ overcooked 1
->amh tkn_v[as=smp,vc=smp]
*** be_v overcrowded; ^ overcrowded 1
->amh Cf_q_v[as=it,vc=ps]
*** be_v overflowing; ^ overflowing 1
->amh T|lqlq_v[as=smp,vc=ps]
*** be_v overtaken; ^ overtaken 1
->amh qdm_v[as=smp,vc=ps]
*** be_v overthrown; ^ overthrown 1
->amh glbT_v[as=smp,vc=ps]
->amh fngl_v[as=smp,vc=ps]
*** be_v overwhelmed; ^ overwhelmed 1
->amh T|lqlq_v[as=smp,vc=ps]
*** be_v packed; ^ packed 1
->amh 'k_t_v[as=smp,vc=ps]
*** be_v paltered; ^ paltered 1
->amh fnTq_v[as=rc,vc=ps]
*** be_v panic-stricken; ^ stricken 1
->amh xb_r_v[as=smp,vc=ps]
*** be_v pardoned; ^ pardoned 1
->amh m'r_v[as=smp,vc=ps]
*** be_v partial; ^ partial 1
->amh dl'_v[as=smp,vc=tr]
->amh dl'_v[as=rc,vc=tr]
*** be_v passed; ^ passed 1
->amh 'lf_v[as=smp,vc=ps]
*** be_v patched; ^ patched 1
->amh dr_t_v[as=smp,vc=ps]
*** be_v patient; ^ patient 1
->amh 'g_s_v[as=smp,vc=ps]
->amh c'l_v[as=smp,vc=cs]
*** be_v peeled; ^ peeled 1
->amh mlT_v[as=smp,vc=ps]
->amh l'T_v[as=smp,vc=ps]
*** be_v pensive; ^ pensive 1
->amh tk_z_v[as=smp,vc=smp]
*** be_v persecuted; ^ persecuted 1
->amh sdd_v[as=rc,vc=ps]
*** be_v perturbed; ^ perturbed 1
->amh dnagr_v[as=smp,vc=ps]
*** be_v picked; ^ picked 1
->amh lqm_v[as=smp,vc=ps]
*** be_v pinched; ^ pinched 1
->amh qWnTr_v[as=smp,vc=ps]
->amh qWnTT_v[as=smp,vc=ps]
*** be_v pious; ^ pious 1
->amh Sdq_v[as=smp,vc=smp]
*** be_v piquant; ^ piquant 1
->amh kWr_T_v[as=smp,vc=smp]
*** be_v pitiable; ^ pitiable 1
->amh 'zn_v[as=smp,vc=cs]
*** be_v plagued; ^ plagued 1
->amh sqy*_v[as=rc,vc=ps]
*** be_v plaited; ^ plaited 1
->amh gWngWn_v[as=smp,vc=ps]
*** be_v planed; ^ planed 1
->amh l'g_v[as=smp,vc=ps]
*** be_v planned; ^ planned 1
->amh 'q_d_v[as=smp,vc=ps]
*** be_v planted; ^ planted 1
->amh tkl_v[as=smp,vc=ps]
*** be_v plastered; ^ plastered 1
->amh mrg_v[as=smp,vc=ps]
->amh ls_n_v[as=smp,vc=ps]
*** be_v pleased; ^ pleased 1
->amh ds_t_v[as=smp,vc=ps]
*** be_v pleated; ^ pleated 1
->amh xnxn_v[as=smp,vc=ps]
*** be_v plentiful; ^ plentiful 1
->amh brkt_v[as=smp,vc=smp]
->amh mWl'_v[as=smp,vc=smp]
->amh Z|gWdgWd_v[as=smp,vc=ps]
*** be_v ploughed; ^ ploughed 1
->amh 'rs_v[as=smp,vc=ps]
*** be_v plucked; ^ plucked 1
->amh qTf_v[as=smp,vc=ps]
*** be_v plugged; ^ plugged 1
->amh wt_f_v[as=smp,vc=ps]
*** be_v plump; ^ plump 1
->amh dndn_v[as=smp,vc=smp]
*** be_v plundered; ^ plundered 1
->amh zrf_v[as=smp,vc=ps]
*** be_v pointed; ^ pointed 1
->amh dg_n_v[as=smp,vc=ps]
*** be_v poked; ^ poked 1
->amh qWsqWs_v[as=smp,vc=ps]
*** be_v poor; ^ poor 1
->amh dxy*_v[as=smp,vc=smp]
*** be_v popular; ^ popular 1
->amh lmd_v[as=smp,vc=ps]
*** be_v possible; ^ possible 1
->amh c'l_v[as=smp,vc=ps]
*** be_v postponed; ^ postponed 1
->amh 'lf_v[as=it,vc=ps]
*** be_v pounded; ^ pounded 1
->amh wqT_v[as=smp,vc=ps]
*** be_v powdered; ^ powdered 1
->amh dqW_s_v[as=smp,vc=ps]
*** be_v praised; ^ praised 1
->amh msgn_v[as=smp,vc=ps]
*** be_v prayed; ^ prayed 1
->amh Sl_y_v[as=smp,vc=ps]
*** be_v preached; ^ preached 1
->amh sbk_v[as=smp,vc=ps]
*** be_v precious; ^ precious 1
->amh kbr_v[as=smp,vc=smp]
*** be_v predominant; ^ predominant 1
->amh 'y_l_v[as=smp,vc=smp]
*** be_v pregnant; ^ pregnant 1
->amh rgz_v[as=smp,vc=tr]
->amh kbd_v[as=smp,vc=smp]
*** be_v preoccupied; ^ preoccupied 1
->amh b|knkn_v[as=smp,vc=ps]
*** be_v prepared; ^ prepared 1
->amh zgaj*_v[as=it,vc=ps]
->amh sl_f_v[as=smp,vc=ps]
->amh zgaj*_v[as=smp,vc=ps]
->amh dg_s_v[as=smp,vc=ps]
->amh sn_q_v[as=smp,vc=ps]
*** be_v pretentious; ^ pretentious 1
->amh k|bsbs_v[as=smp,vc=ps]
*** be_v prevalent; ^ prevalent 1
->amh 'y_l_v[as=smp,vc=smp]
*** be_v prevented; ^ prevented 1
->amh nfg_v[as=smp,vc=ps]
->amh klkl_v[as=smp,vc=ps]
*** be_v profitable; ^ profitable 1
->amh rb'_v[as=smp,vc=smp]
*** be_v profound; ^ profound 1
->amh Tlq_v[as=smp,vc=smp]
*** be_v projected; ^ projected 1
->amh s|fnTr_v[as=smp,vc=ps]
*** be_v proportionate; ^ proportionate 1
->amh mT_n_v[as=it,vc=ps]
*** be_v proud; ^ proud 1
->amh lT_T_v[as=smp,vc=ps]
*** be_v prudent; ^ prudent 1
->amh Tnqq_v[as=smp,vc=ps]
->amh zy_d_v[as=smp,vc=smp]
*** be_v pulled; ^ pulled 1
->amh gWt_t_v[as=smp,vc=ps]
->amh s'b_v[as=smp,vc=ps]
*** be_v punished; ^ punished 1
->amh qT'_v[as=smp,vc=ps]
->amh qWnTT_v[as=smp,vc=ps]
->amh qsf_v[as=smp,vc=smp]
*** be_v pure; ^ pure 1
->amh Tr'_v[as=smp,vc=smp]
->amh Tl_l_v[as=smp,vc=smp]
*** be_v purified; ^ purified 1
->amh Tl_l_v[as=smp,vc=smp]
*** be_v putrid; ^ putrid 1
->amh gm'_v[as=smp,vc=smp]
*** be_v qualified; ^ qualified 1
->amh bq'_v[as=smp,vc=smp]
*** be_v questionable; ^ questionable 1
->amh TrTr_v[as=rc,vc=tr]
*** be_v quick; ^ quick 1
->amh fTn_v[as=smp,vc=smp]
*** be_v raged; ^ raged 1
->amh ntb_v[as=smp,vc=smp]
*** be_v ragged; ^ ragged 1
->amh znTl_v[as=it,vc=ps]
*** be_v raised; ^ raised 1
->amh Cm_r_v[as=smp,vc=ps]
->amh wT'_v[as=rc,vc=ps]
->amh wT'_v[as=it,vc=ps]
*** be_v raked; ^ raked 1
->amh n|gWall_v[as=smp,vc=ps]
*** be_v ratified; ^ ratified 1
->amh Sdq_v[as=smp,vc=smp]
*** be_v ravenous; ^ ravenous 1
->amh sfsf_v[as=smp,vc=cs]
*** be_v reactivated; ^ reactivated 1
->amh n|qsaqs_v[as=smp,vc=ps]
*** be_v ready; ^ ready 1
->amh Tnqq_v[as=rc,vc=ps]
->amh zgaj*_v[as=smp,vc=ps]
->amh drs_v[as=smp,vc=smp]
*** be_v recited; ^ recited 1
->amh dgm_v[as=smp,vc=ps]
*** be_v recommended; ^ recommended 1
->amh 'C*_v[as=smp,vc=ps]
*** be_v reconciled; ^ reconciled 1
->amh 'r_q_v[as=smp,vc=ps]
*** be_v recorded; ^ recorded 1
->amh S'f_v[as=smp,vc=ps]
->amh wrs_v[as=it,vc=ps]
*** be_v recovered; ^ recovered 1
->amh gN*_v[as=smp,vc=ps]
*** be_v redundant; ^ redundant 1
->amh dr_b_v[as=it,vc=ps]
*** be_v refined; ^ refined 1
->amh ngWr_v[as=smp,vc=ps]
*** be_v reflected; ^ reflected 1
->amh n|Sbarq_v[as=smp,vc=ps]
*** be_v registered; ^ registered 1
->amh mzgb_v[as=smp,vc=ps]
*** be_v reimbursed; ^ reimbursed 1
->amh tk_'_v[as=smp,vc=ps]
*** be_v reinforced; ^ reinforced 1
->amh Tnkr_v[as=rc,vc=ps]
*** be_v related; ^ related 1
->amh tr_k_v[as=smp,vc=ps]
*** be_v relieved; ^ relieved 1
->amh qy_r_v[as=smp,vc=ps]
*** be_v remembered; ^ remembered 1
->amh ws_'_v[as=smp,vc=ps]
*** be_v removed; ^ removed 1
->amh qrf_v[as=smp,vc=ps]
*** be_v repaired; ^ repaired 1
->amh bj_*_v[as=it,vc=ps]
->amh bj_*_v[as=smp,vc=ps]
*** be_v repellent; ^ repellent 1
->amh gWfnn_v[as=smp,vc=smp]
*** be_v reproached; ^ reproached 1
->amh wqs_v[as=smp,vc=ps]
*** be_v respected; ^ respected 1
->amh 'fr_v[as=smp,vc=ps]
*** be_v restless; ^ restless 1
->amh nawz_v[as=smp,vc=smp]
*** be_v reviewed; ^ reviewed 1
->amh kl_s_v[as=smp,vc=ps]
*** be_v rigged; ^ rigged 1
->amh xq_b_v[as=smp,vc=ps]
*** be_v righteous; ^ righteous 1
->amh bq'_v[as=smp,vc=smp]
*** be_v ringed; ^ ringed 1
->amh sn_g_v[as=smp,vc=ps]
*** be_v ripe; ^ ripe 1
->amh bsl_v[as=smp,vc=smp]
*** be_v ripped; ^ ripped 1
->amh xrkt_v[as=smp,vc=ps]
*** be_v roasted; ^ roasted 1
->amh qWl'_v[as=smp,vc=ps]
*** be_v robbed; ^ robbed 1
->amh mWClf_v[as=smp,vc=ps]
*** be_v rolled; ^ rolled 1
->amh d|bWlbWl_v[as=smp,vc=ps]
->amh x|krkr_v[as=smp,vc=ps]
*** be_v rotten; ^ rotten 1
->amh bsbs_v[as=smp,vc=smp]
*** be_v routed; ^ routed 1
->amh ft'_v[as=smp,vc=ps]
*** be_v rowed; ^ rowed 1
->amh qzf_v[as=smp,vc=ps]
*** be_v rubbed; ^ rubbed 1
->amh ft_g_v[as=smp,vc=ps]
->amh 'x*_v[as=smp,vc=ps]
->amh fgfg_v[as=smp,vc=ps]
*** be_v ruled; ^ ruled 1
->amh gz'_v[as=smp,vc=ps]
*** be_v rumpled; ^ rumpled 1
->amh qfrr_v[as=smp,vc=ps]
*** be_v rung; ^ rung 1
->amh dw_l_v[as=smp,vc=ps]
*** be_v runny; ^ runny 1
->amh mWCmWC_v[as=smp,vc=smp]
*** be_v sacrificed; ^ sacrificed 1
->amh sw_'_v[as=smp,vc=ps]
*** be_v sad; ^ sad 1
->amh 'zn_v[as=smp,vc=smp]
->amh tk_z_v[as=smp,vc=smp]
*** be_v said; ^ said 1
->amh b'l_v[as=smp,vc=ps]
*** be_v sanctified; ^ sanctified 1
->amh qd_s_v[as=smp,vc=ps]
*** be_v satiated; ^ satiated 1
->amh Tgb_v[as=smp,vc=smp]
*** be_v satisfied; ^ satisfied 1
->amh rk'_v[as=smp,vc=smp]
*** be_v sausage-shaped; ^ shaped 1
->amh mWl_l_v[as=smp,vc=smp]
*** be_v saved; ^ saved 1
->amh d'n_v[as=smp,vc=smp]
->amh qWT_b_v[as=smp,vc=ps]
*** be_v savoury; ^ savoury 1
->amh TafT_v[as=smp,vc=smp]
->amh T'm_v[as=smp,vc=smp]
*** be_v scalded; ^ scalded 1
->amh mWxlq_v[as=smp,vc=ps]
*** be_v scattered; ^ scattered 1
->amh n|TbTb_v[as=rc,vc=ps]
->amh naN*_v[as=smp,vc=ps]
->amh bt_n_v[as=it,vc=ps]
*** be_v scorched; ^ scorched 1
->amh n|gbgb_v[as=smp,vc=ps]
*** be_v scrapped; ^ scrapped 1
->amh qff_v[as=smp,vc=ps]
*** be_v scratched; ^ scratched 1
->amh mWaCr_v[as=smp,vc=ps]
*** be_v screened; ^ screened 1
->amh kl_l_v[as=smp,vc=ps]
*** be_v scribbled; ^ scribbled 1
->amh mWaCr_v[as=smp,vc=ps]
*** be_v scrubbed; ^ scrubbed 1
->amh ft_g_v[as=smp,vc=ps]
*** be_v sealed; ^ sealed 1
->amh 'x_g_v[as=smp,vc=ps]
*** be_v searched; ^ searched 1
->amh ft_x_v[as=smp,vc=ps]
*** be_v seductive; ^ seductive 1
->amh x|kWrmm_v[as=smp,vc=ps]
->amh x|kWrmm_v[as=smp,vc=tr]
*** be_v seen; ^ seen 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v segmented; ^ segmented 1
->amh kfl_v[as=it,vc=ps]
*** be_v segregated; ^ segregated 1
->amh gll_v[as=smp,vc=ps]
*** be_v sent; ^ sent 1
->amh l'k_v[as=smp,vc=ps]
*** be_v separated; ^ separated 1
->amh r'q_v[as=it,vc=ps]
*** be_v served; ^ served 1
->amh srr_v[as=smp,vc=ps]
->amh glgl_v[as=smp,vc=ps]
*** be_v servile; ^ servile 1
->amh 'ns_v[as=smp,vc=smp]
*** be_v severe; ^ severe 1
->amh kbd_v[as=smp,vc=smp]
*** be_v sewn; ^ sewn 1
->amh wsws_v[as=smp,vc=ps]
*** be_v shaken; ^ shaken 1
->amh wzwz_v[as=rc,vc=ps]
->amh nqnq_v[as=smp,vc=ps]
->amh ng'_v[as=rc,vc=ps]
*** be_v sharpened; ^ sharpened 1
->amh sl'_v[as=smp,vc=smp]
->amh fC*_v[as=rc,vc=ps]
->amh qrS_v[as=smp,vc=ps]
->amh s'l_v[as=smp,vc=ps]
*** be_v sheared; ^ sheared 1
->amh xl_t_v[as=smp,vc=ps]
*** be_v shelled; ^ shelled 1
->amh flfl_v[as=smp,vc=ps]
*** be_v shortened; ^ shortened 1
->amh krkm_v[as=smp,vc=ps]
*** be_v shouldered; ^ shouldered 1
->amh 'ngt_v[as=smp,vc=ps]
*** be_v shown; ^ shown 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v shrivelled; ^ shrivelled 1
->amh kWramt_v[as=smp,vc=ps]
*** be_v sifted; ^ sifted 1
->amh Tnff_v[as=smp,vc=smp]
*** be_v signed; ^ signed 1
->amh fr_m_v[as=smp,vc=ps]
*** be_v simpleminded; ^ simpleminded 1
->amh gljj_v[as=smp,vc=smp]
*** be_v simplified; ^ simplified 1
->amh qll_v[as=rc,vc=ps]
*** be_v sipped; ^ sipped 1
->amh qsm_v[as=smp,vc=ps]
*** be_v skimmed; ^ skimmed 1
->amh gff_v[as=smp,vc=ps]
*** be_v skinned; ^ skinned 1
->amh gff_v[as=smp,vc=ps]
*** be_v slandered; ^ slandered 1
->amh 'm'_v[as=smp,vc=ps]
*** be_v slaughter; ^ slaughter 1
->amh 'rd_v[as=smp,vc=ps]
*** be_v slow; ^ slow 1
->amh gWadd_v[as=smp,vc=ps]
*** be_v smashed; ^ smashed 1
->amh Trms_v[as=smp,vc=ps]
*** be_v smeared; ^ smeared 1
->amh Cmalq_v[as=smp,vc=ps]
->amh lqlq_v[as=smp,vc=ps]
*** be_v smoothed; ^ smoothed 1
->amh lmss_v[as=smp,vc=ps]
*** be_v snapped; ^ snapped 1
->amh bT_s_v[as=smp,vc=ps]
->amh bT_s_v[as=it,vc=ps]
*** be_v snatched; ^ snatched 1
->amh ktlb_v[as=smp,vc=ps]
->amh mnTq_v[as=smp,vc=ps]
->amh mntf_v[as=smp,vc=ps]
*** be_v soaked; ^ soaked 1
->amh nkr_v[as=smp,vc=ps]
->amh bxqT_v[as=smp,vc=smp]
->amh 'j_l_v[as=smp,vc=ps]
*** be_v soft-hearted; ^ hearted 1
->amh r|gbgb_v[as=smp,vc=ps]
*** be_v soiled; ^ soiled 1
->amh 'df_v[as=smp,vc=smp]
*** be_v sold; ^ sold 1
->amh xyT_v[as=smp,vc=ps]
->amh qn'_v[as=smp,vc=ps]
*** be_v solid; ^ solid 1
->amh Tnkr_v[as=smp,vc=smp]
*** be_v sorrowful; ^ sorrowful 1
->amh 'zn_v[as=smp,vc=smp]
*** be_v sorry; ^ sorry 1
->amh 'zn_v[as=smp,vc=smp]
->amh Tt_t_v[as=smp,vc=ps]
->amh SS_t_v[as=smp,vc=ps]
*** be_v sought; ^ sought 1
->amh fl_g_v[as=smp,vc=ps]
*** be_v sown; ^ sown 1
->amh zr'_v[as=smp,vc=ps]
*** be_v spared; ^ spared 1
->amh trf_v[as=smp,vc=smp]
*** be_v spiced; ^ spiced 1
->amh qm_m_v[as=smp,vc=ps]
*** be_v spilt; ^ spilt 1
->amh df'_v[as=smp,vc=ps]
*** be_v splashed; ^ splashed 1
->amh fnTq_v[as=rc,vc=ps]
*** be_v splay-footed; ^ footed 1
->amh n|xaff_v[as=smp,vc=tr]
*** be_v split; ^ split 1
->amh flT_v[as=smp,vc=ps]
->amh snTq_v[as=smp,vc=ps]
*** be_v spoiled; ^ spoiled 1
->amh n|qbarr_v[as=smp,vc=ps]
->amh blax*_v[as=smp,vc=ps]
->amh qbT_v[as=smp,vc=tr]
*** be_v spoilt; ^ spoilt 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v spread; ^ spread 1
->amh nz'_v[as=smp,vc=ps]
->amh 'nTf_v[as=smp,vc=ps]
->amh zrg'_v[as=smp,vc=ps]
*** be_v sprinkled; ^ sprinkled 1
->amh r|kfkf_v[as=smp,vc=ps]
->amh nsns_v[as=smp,vc=ps]
->amh rC*_v[as=smp,vc=ps]
*** be_v spun; ^ spun 1
->amh ftl_v[as=smp,vc=ps]
*** be_v spurred; ^ spurred 1
->amh kWlkWl_v[as=smp,vc=ps]
*** be_v squeezed; ^ squeezed 1
->amh Cb_t_v[as=smp,vc=ps]
->amh Cmq_v[as=smp,vc=ps]
*** be_v stamped; ^ stamped 1
->amh 't_m_v[as=smp,vc=ps]
->amh daxq_v[as=smp,vc=smp]
*** be_v started; ^ started 1
->amh wT_n_v[as=smp,vc=ps]
->amh jm_r_v[as=smp,vc=ps]
*** be_v stationed; ^ stationed 1
->amh md_b_v[as=smp,vc=ps]
*** be_v sticky; ^ sticky 1
->amh gagr_v[as=smp,vc=ps]
*** be_v stiffened; ^ stiffened 1
->amh drq_v[as=smp,vc=smp]
*** be_v stirred; ^ stirred 1
->amh msl_v[as=rc,vc=ps]
*** be_v stolen; ^ stolen 1
->amh srq_v[as=smp,vc=ps]
->amh mntf_v[as=smp,vc=ps]
*** be_v stoned; ^ stoned 1
->amh wgr_v[as=smp,vc=ps]
*** be_v stopped; ^ stopped 1
->amh dfn_v[as=smp,vc=ps]
->amh qWrT_v[as=rc,vc=ps]
->amh tw_v[as=smp,vc=ps]
*** be_v stored; ^ stored 1
->amh ktt_v[as=smp,vc=ps]
*** be_v stout; ^ stout 1
->amh gzf_v[as=smp,vc=smp]
*** be_v straightened; ^ straightened 1
->amh qn'_v[as=rc,vc=ps]
->amh 'r_q_v[as=smp,vc=ps]
*** be_v stressed; ^ stressed 1
->amh Tbq_v[as=smp,vc=smp]
*** be_v stretched; ^ stretched 1
->amh lT_T_v[as=smp,vc=ps]
->amh wT_r_v[as=smp,vc=ps]
->amh n|frTT_v[as=smp,vc=ps]
*** be_v stripped; ^ stripped 1
->amh glff_v[as=smp,vc=ps]
->amh lmlm_v[as=smp,vc=ps]
*** be_v strong; ^ strong 1
->amh Tn'_v[as=smp,vc=smp]
->amh Tnkr_v[as=smp,vc=smp]
*** be_v strung; ^ strung 1
->amh lmTT_v[as=smp,vc=ps]
*** be_v stubborn; ^ stubborn 1
->amh drq_v[as=smp,vc=smp]
->amh Tmm_v[as=smp,vc=smp]
*** be_v stuck; ^ stuck 1
->amh lT_f_v[as=smp,vc=ps]
*** be_v studied; ^ studied 1
->amh Tn'_v[as=smp,vc=ps]
*** be_v stuffed; ^ stuffed 1
->amh wT_q_v[as=smp,vc=ps]
->amh 'm_q_v[as=smp,vc=ps]
->amh sgsg_v[as=smp,vc=ps]
*** be_v stunted; ^ stunted 1
->amh qnCr_v[as=smp,vc=smp]
*** be_v stupefied; ^ stupefied 1
->amh fTT_v[as=rc,vc=ps]
*** be_v stupid; ^ stupid 1
->amh dnqWr_v[as=smp,vc=smp]
*** be_v subdued; ^ subdued 1
->amh Tmd_v[as=smp,vc=ps]
->amh gz'_v[as=smp,vc=ps]
*** be_v submissive; ^ submissive 1
->amh q|lsls_v[as=smp,vc=ps]
->amh x|qWTqWT_v[as=smp,vc=ps]
*** be_v subsidized; ^ subsidized 1
->amh dgW_m_v[as=smp,vc=ps]
*** be_v substituted; ^ substituted 1
->amh lw_T_v[as=smp,vc=ps]
->amh tk_'_v[as=smp,vc=ps]
*** be_v subtle; ^ subtle 1
->amh rqq_v[as=rc,vc=ps]
*** be_v successful; ^ successful 1
->amh qn'_v[as=rc,vc=ps]
->amh mWl'_v[as=rc,vc=ps]
->amh sk_'_v[as=rc,vc=ps]
->amh knawn_v[as=smp,vc=ps]
*** be_v sucked; ^ sucked 1
->amh mTT_v[as=smp,vc=ps]
->amh mzmz_v[as=smp,vc=ps]
*** be_v sued; ^ sued 1
->amh kss_v[as=smp,vc=ps]
*** be_v sulky; ^ sulky 1
->amh kWrf_v[as=smp,vc=tr]
*** be_v sunk; ^ sunk 1
->amh drsm_v[as=smp,vc=ps]
*** be_v superfluous; ^ superfluous 1
->amh n|z'z'_v[as=smp,vc=ps]
->amh trf_v[as=smp,vc=smp]
->amh t|rfrf_v[as=smp,vc=ps]
*** be_v superior; ^ superior 1
->amh l'q_v[as=smp,vc=smp]
*** be_v supple; ^ supple 1
->amh l'l'_v[as=smp,vc=smp]
*** be_v supplemented; ^ supplemented 1
->amh 'T'_v[as=it,vc=ps]
*** be_v supported; ^ supported 1
->amh dg_f_v[as=smp,vc=ps]
*** be_v surrounded; ^ surrounded 1
->amh 'Tr_v[as=smp,vc=ps]
*** be_v surveyed; ^ surveyed 1
->amh Tn'_v[as=smp,vc=ps]
->amh qaN*_v[as=smp,vc=ps]
*** be_v suspected; ^ suspected 1
->amh TrTr_v[as=smp,vc=ps]
*** be_v suspended; ^ suspended 1
->amh n|TlTl_v[as=smp,vc=ps]
*** be_v suspicious; ^ suspicious 1
->amh gngn_v[as=smp,vc=smp]
*** be_v swallowed; ^ swallowed 1
->amh w'T_v[as=smp,vc=ps]
*** be_v sweet; ^ sweet 1
->amh TafT_v[as=smp,vc=smp]
*** be_v swept; ^ swept 1
->amh 's_s_v[as=smp,vc=ps]
*** be_v swollen; ^ swollen 1
->amh 'bT_v[as=smp,vc=smp]
*** be_v tactful; ^ tactful 1
->amh zy_d_v[as=smp,vc=smp]
*** be_v taken; ^ taken 1
->amh nT_l_v[as=smp,vc=ps]
->amh wsd_v[as=smp,vc=ps]
*** be_v tamed; ^ tamed 1
->amh gr'_v[as=smp,vc=ps]
*** be_v tasted; ^ tasted 1
->amh qms_v[as=smp,vc=ps]
*** be_v tasty; ^ tasty 1
->amh TafT_v[as=smp,vc=smp]
->amh T'm_v[as=smp,vc=smp]
*** be_v tattooed; ^ tattooed 1
->amh nqs_v[as=smp,vc=ps]
*** be_v taxed; ^ taxed 1
->amh qrT_v[as=smp,vc=ps]
*** be_v tended; ^ tended 1
->amh 'rs_v[as=smp,vc=ps]
->amh 'g_d_v[as=smp,vc=ps]
*** be_v tender; ^ tender 1
->amh lz_b_v[as=smp,vc=smp]
->amh lsls_v[as=rc,vc=ps]
*** be_v terrorized; ^ terrorized 1
->amh r|btbt_v[as=smp,vc=ps]
->amh xb_r_v[as=smp,vc=ps]
*** be_v tested; ^ tested 1
->amh ft_n_v[as=smp,vc=ps]
*** be_v thanked; ^ thanked 1
->amh msgn_v[as=smp,vc=ps]
*** be_v thin; ^ thin 1
->amh gWfy*_v[as=smp,vc=smp]
->amh sl_l_v[as=smp,vc=smp]
->amh 'l_T_v[as=smp,vc=smp]
*** be_v thirsty; ^ thirsty 1
->amh Tm'_v[as=smp,vc=ps]
*** be_v thought; ^ thought 1
->amh 's_b_v[as=smp,vc=ps]
*** be_v threshed; ^ threshed 1
->amh wq'_v[as=smp,vc=ps]
*** be_v thrifty; ^ thrifty 1
->amh qWT_b_v[as=smp,vc=smp]
*** be_v thrown; ^ thrown 1
->amh wrwr_v[as=smp,vc=ps]
*** be_v thwarted; ^ thwarted 1
->amh Cngf_v[as=smp,vc=smp]
*** be_v tickled; ^ tickled 1
->amh kWlkWl_v[as=smp,vc=ps]
*** be_v tied; ^ tied 1
->amh qrqb_v[as=smp,vc=ps]
->amh qWraN*_v[as=smp,vc=ps]
*** be_v tight; ^ tight 1
->amh Tbb_v[as=smp,vc=smp]
*** be_v tightened; ^ tightened 1
->amh Tbq_v[as=smp,vc=smp]
*** be_v tiresome; ^ tiresome 1
->amh slc*_v[as=smp,vc=smp]
*** be_v told; ^ told 1
->amh wr'_v[as=smp,vc=ps]
*** be_v tongue-tied; ^ tied 1
->amh mrg_v[as=smp,vc=ps]
*** be_v torn; ^ torn 1
->amh qdd_v[as=smp,vc=ps]
*** be_v tortured; ^ tortured 1
->amh n|grgb_v[as=smp,vc=ps]
->amh sqy*_v[as=rc,vc=ps]
*** be_v touched; ^ touched 1
->amh nk'_v[as=smp,vc=ps]
*** be_v tough; ^ tough 1
->amh Tnkr_v[as=smp,vc=smp]
->amh grjf_v[as=smp,vc=smp]
*** be_v transferred; ^ transferred 1
->amh zwr_v[as=rc,vc=ps]
->amh qy_r_v[as=smp,vc=ps]
*** be_v translated; ^ translated 1
->amh trgWm_v[as=smp,vc=ps]
*** be_v transported; ^ transported 1
->amh gW'z_v[as=it,vc=ps]
*** be_v trapped; ^ trapped 1
->amh Tmd_v[as=smp,vc=ps]
*** be_v treated; ^ treated 1
->amh 'k_m_v[as=smp,vc=ps]
->amh mWax*_v[as=smp,vc=ps]
*** be_v trimmed; ^ trimmed 1
->amh krkm_v[as=smp,vc=ps]
->amh kff_v[as=smp,vc=ps]
*** be_v tripped; ^ tripped 1
->amh Tlf_v[as=smp,vc=ps]
*** be_v trustworthy; ^ trustworthy 1
->amh 'mn_v[as=smp,vc=ps]
*** be_v tuned; ^ tuned 1
->amh qaN*_v[as=smp,vc=ps]
*** be_v turned; ^ turned 1
->amh 'm_s_v[as=smp,vc=ps]
->amh zw_r_v[as=smp,vc=ps]
*** be_v twisted; ^ twisted 1
->amh qWlmm_v[as=smp,vc=ps]
*** be_v uncoiled; ^ uncoiled 1
->amh trtr_v[as=smp,vc=ps]
*** be_v uncomfortable; ^ uncomfortable 1
->amh gWrbT_v[as=smp,vc=smp]
*** be_v uncouth; ^ uncouth 1
->amh x|gWaTT_v[as=smp,vc=tr]
*** be_v united; ^ united 1
->amh 'br_v[as=it,vc=ps]
*** be_v unloaded; ^ unloaded 1
->amh rgf_v[as=rc,vc=ps]
*** be_v unsettled; ^ unsettled 1
->amh n|qZqZ_v[as=smp,vc=ps]
*** be_v unsuccessful; ^ unsuccessful 1
->amh fWrx_v[as=smp,vc=smp]
*** be_v untidy; ^ untidy 1
->amh z|rkrk_v[as=smp,vc=ps]
->amh n|zlazl_v[as=smp,vc=ps]
*** be_v unveiled; ^ unveiled 1
->amh glS_v[as=smp,vc=ps]
*** be_v unzipped; ^ unzipped 1
->amh trtr_v[as=smp,vc=ps]
*** be_v uprooted; ^ uprooted 1
->amh fls_v[as=smp,vc=smp]
->amh mnTr_v[as=smp,vc=ps]
->amh nql_v[as=smp,vc=ps]
*** be_v useful; ^ useful 1
->amh gdd_v[as=rc,vc=tr]
->amh Tqm_v[as=smp,vc=smp]
->amh rb'_v[as=smp,vc=smp]
*** be_v vaccinated; ^ vaccinated 1
->amh ktb_v[as=smp,vc=ps]
*** be_v valid; ^ valid 1
->amh glgl_v[as=smp,vc=tr]
*** be_v veiled; ^ veiled 1
->amh gard_v[as=smp,vc=ps]
*** be_v venerated; ^ venerated 1
->amh kbr_v[as=smp,vc=ps]
*** be_v verbose; ^ verbose 1
->amh zbzb_v[as=smp,vc=smp]
*** be_v verified; ^ verified 1
->amh Tr'_v[as=rc,vc=ps]
*** be_v vexed; ^ vexed 1
->amh ndd_v[as=rc,vc=ps]
*** be_v victorious; ^ victorious 1
->amh xnf_v[as=smp,vc=cs]
*** be_v violated; ^ violated 1
->amh dfr_v[as=smp,vc=ps]
*** be_v visible; ^ visible 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v vulgar; ^ vulgar 1
->amh x|gWaTT_v[as=smp,vc=tr]
*** be_v wasted; ^ wasted 1
->amh bakn_v[as=smp,vc=smp]
*** be_v weak; ^ weak 1
->amh dgdg_v[as=smp,vc=smp]
->amh dkm_v[as=smp,vc=smp]
*** be_v weak-sighted; ^ sighted 1
->amh dgdg_v[as=smp,vc=smp]
->amh Tnabs_v[as=smp,vc=ps]
*** be_v wedge-shaped; ^ shaped 1
->amh xWTT_v[as=smp,vc=smp]
*** be_v weeded; ^ weeded 1
->amh 'r_m_v[as=smp,vc=ps]
*** be_v weighed; ^ weighed 1
->amh mz_n_v[as=smp,vc=ps]
*** be_v welded; ^ welded 1
->amh by_d_v[as=smp,vc=ps]
*** be_v wet; ^ wet 1
->amh rTb_v[as=smp,vc=smp]
*** be_v whipped; ^ whipped 1
->amh grf_v[as=smp,vc=ps]
*** be_v wide; ^ wide 1
->amh sf'_v[as=it,vc=ps]
*** be_v willful; ^ willful 1
->amh n|gragr_v[as=smp,vc=tr]
*** be_v winnowed; ^ winnowed 1
->amh tnfs_v[as=smp,vc=smp]
->amh bT_r_v[as=smp,vc=ps]
*** be_v worshipped; ^ worshipped 1
->amh mlk_v[as=smp,vc=ps]
*** be_v wounded; ^ wounded 1
->amh qWsl_v[as=smp,vc=smp]
*** be_v wretched; ^ wretched 1
->amh gWsqWl_v[as=smp,vc=smp]
*** be_v wrinkled; ^ wrinkled 1
->amh gW|rbrb_v[as=smp,vc=ps]
->amh Cmatr_v[as=smp,vc=ps]
->amh kWmatr_v[as=smp,vc=ps]
*** be_v written; ^ written 1
->amh S'f_v[as=smp,vc=ps]
->amh drs_v[as=smp,vc=ps]
*** be_v wrung; ^ wrung 1
->amh Cmq_v[as=smp,vc=ps]
*** be_v yolked ; ^ yolked 1
->amh Tmd_v[as=rc,vc=ps]
*** bear_v abundantly
->amh n|jrgg_v[as=smp,vc=ps]
->amh n|Zrgg_v[as=smp,vc=ps]
->amh n|jrgg_v[as=smp,vc=tr]
*** bear_v fruit
->amh fr'_v[as=smp,vc=tr]
*** bear_v with
->amh nwr_v[as=it,vc=ps]
*** beat_v
->amh qsqs_v[as=smp,vc=smp]
->amh qndb_v[as=smp,vc=smp]
->amh wq'_v[as=smp,vc=smp]
->amh dbdb_v[as=smp,vc=smp]
->amh xnf_v[as=smp,vc=cs]
*** beat_v severely
->amh 'r'_v[as=smp,vc=cs]
->amh nr_t_v[as=smp,vc=smp]
*** beat_v soundly
->amh sl_q_v[as=smp,vc=smp]
*** beat_v up
->amh bTbT_v[as=smp,vc=smp]
->amh sbq_v[as=smp,vc=smp]
*** beautify_v
->amh qWnj*_v[as=smp,vc=tr]
*** beautify_v oneself
->amh w'b_v[as=smp,vc=ps]
*** become_v
->amh hwn_v[as=smp,vc=smp]
*** become_v abject
->amh kWn_n_v[as=smp,vc=cs]
*** become_v abortive
->amh kxf_v[as=smp,vc=smp]
*** become_v absent-minded
->amh zng'_v[as=smp,vc=smp]
*** become_v abundant
->amh brkt_v[as=smp,vc=smp]
*** become_v anxious
->amh sg'_v[as=smp,vc=smp]
*** become_v attenuated
->amh mll_v[as=smp,vc=smp]
*** become_v awkward
->amh n|glajj_v[as=smp,vc=ps]
*** become_v bad
->amh kf'_v[as=smp,vc=smp]
*** become_v bankrupt
->amh ksr_v[as=smp,vc=smp]
*** become_v barren
->amh raqWt_v[as=smp,vc=ps]
->amh ms_n_v[as=smp,vc=smp]
*** become_v beautiful
->amh qWnj*_v[as=smp,vc=smp]
*** become_v better
->amh x'l_v[as=smp,vc=ps]
*** become_v big
->amh tl_q_v[as=smp,vc=smp]
*** become_v big-bellied
->amh n|gfTT_v[as=smp,vc=ps]
*** become_v blunt
->amh n|TraTs_v[as=smp,vc=ps]
->amh TrTs_v[as=smp,vc=smp]
->amh Tr_s_v[as=smp,vc=smp]
->amh dn_z_v[as=smp,vc=smp]
->amh dWldWm_v[as=smp,vc=smp]
*** become_v bold
->amh dfr_v[as=it,vc=ps]
*** become_v bone-dry
->amh kn_n_v[as=smp,vc=smp]
*** become_v bored
->amh slc*_v[as=smp,vc=smp]
*** become_v boring
->amh cyk_v[as=smp,vc=smp]
*** become_v brighter
->amh kft_v[as=smp,vc=smp]
*** become_v calm
->amh rg'_v[as=smp,vc=smp]
*** become_v celebrated
->amh kbr_v[as=smp,vc=ps]
*** become_v charcoal
->amh ksl_v[as=smp,vc=smp]
*** become_v chic
->amh zn_T_v[as=smp,vc=smp]
*** become_v clean
->amh nT'_v[as=smp,vc=smp]
->amh nS'_v[as=smp,vc=smp]
*** become_v clear
->amh qrr_v[as=smp,vc=smp]
*** become_v coagulated
->amh rg'_v[as=smp,vc=smp]
*** become_v coarse
->amh krdd_v[as=smp,vc=smp]
->amh xakr_v[as=smp,vc=smp]
*** become_v cold
->amh brd_v[as=smp,vc=smp]
*** become_v coloured
->amh qlm_v[as=smp,vc=smp]
*** become_v confused
->amh skr_v[as=rc,vc=ps]
*** become_v contented
->amh wrd_v[as=smp,vc=ps]
*** become_v cool
->amh qzqz_v[as=smp,vc=smp]
*** become_v crazy
->amh 'bd_v[as=smp,vc=smp]
*** become_v crippled
->amh kWramt_v[as=smp,vc=tr]
*** become_v crusty
->amh qnbr_v[as=smp,vc=smp]
*** become_v dark
->amh mx*_v[as=smp,vc=smp]
->amh Cl_m_v[as=smp,vc=smp]
->amh dngz_v[as=smp,vc=smp]
*** become_v difficult
->amh Tn_n_v[as=smp,vc=smp]
->amh q't_v[as=smp,vc=tr]
->amh 'w_k_v[as=smp,vc=smp]
*** become_v dirty
->amh 'df_v[as=smp,vc=smp]
*** become_v disjointed
->amh wlq_v[as=smp,vc=smp]
*** become_v drowned
->amh smT_v[as=smp,vc=smp]
*** become_v drunk
->amh skr_v[as=smp,vc=smp]
*** become_v dry
->amh kc_c_v[as=smp,vc=smp]
*** become_v dull
->amh fzz_v[as=smp,vc=smp]
->amh kc_c_v[as=smp,vc=smp]
*** become_v eloquent
->amh sl'_v[as=smp,vc=smp]
*** become_v emaciated
->amh mWg_g_v[as=smp,vc=smp]
->amh mnmn_v[as=smp,vc=smp]
->amh kWsmn_v[as=smp,vc=smp]
->amh slsl_v[as=smp,vc=smp]
*** become_v embarrassed
->amh 'fr_v[as=smp,vc=smp]
*** become_v engaged
->amh fT_m_v[as=it,vc=ps]
*** become_v enterprising
->amh wT'_v[as=rc,vc=tr]
*** become_v evening
->amh mx*_v[as=smp,vc=smp]
*** become_v exhausted
->amh dkm_v[as=rc,vc=ps]
*** become_v expensive
->amh wdd_v[as=smp,vc=ps]
*** become_v extended
->amh rzm_v[as=smp,vc=smp]
*** become_v famous
->amh 'wq_v[as=smp,vc=ps]
*** become_v fat
->amh Tbdl_v[as=smp,vc=smp]
->amh dlb_v[as=smp,vc=smp]
->amh dWfdWf_v[as=smp,vc=smp]
->amh wf_r_v[as=it,vc=smp]
->amh sb'_v[as=smp,vc=smp]
*** become_v feeble
->amh qWrqWz_v[as=smp,vc=smp]
*** become_v fermented
->amh bWk'_v[as=smp,vc=smp]
*** become_v fleshy
->amh frTm_v[as=smp,vc=tr]
->amh frTm_v[as=smp,vc=smp]
*** become_v forgotten
->amh rs'_v[as=smp,vc=ps]
*** become_v frenzied
->amh 'bd_v[as=smp,vc=smp]
*** become_v frequent
->amh dgm_v[as=it,vc=ps]
*** become_v frizzy
->amh n|kfrr_v[as=smp,vc=ps]
*** become_v full
->amh mWl'_v[as=smp,vc=smp]
*** become_v glowing
->amh f'm_v[as=smp,vc=smp]
*** become_v greasy
->amh q|lTlT_v[as=smp,vc=ps]
*** become_v greedy
->amh s's'_v[as=smp,vc=smp]
*** become_v green
->amh ClCl_v[as=smp,vc=tr]
->amh lmlm_v[as=smp,vc=tr]
->amh lmlm_v[as=smp,vc=smp]
*** become_v grey
->amh xb_t_v[as=smp,vc=smp]
*** become_v hard
->amh gg_r_v[as=smp,vc=smp]
*** become_v harsh
->amh xakr_v[as=smp,vc=smp]
*** become_v hollow
->amh gWdgWd_v[as=smp,vc=smp]
*** become_v hot
->amh mwq_v[as=smp,vc=smp]
->amh tkW_s_v[as=smp,vc=smp]
*** become_v idle
->amh wslt_v[as=smp,vc=tr]
->amh bWz_n_v[as=smp,vc=smp]
->amh magT_v[as=smp,vc=smp]
->amh lsls_v[as=rc,vc=ps]
*** become_v illustrious
->amh gnn_v[as=smp,vc=smp]
*** become_v impatient
->amh q|nznz_v[as=smp,vc=ps]
*** become_v importunate
->amh mWz_z_v[as=smp,vc=smp]
*** become_v inactive
->amh wt_f_v[as=smp,vc=ps]
*** become_v incoherent
->amh zb'_v[as=rc,vc=ps]
*** become_v inconstant
->amh wall_v[as=smp,vc=smp]
*** become_v inflated
->amh qt_r_v[as=smp,vc=ps]
*** become_v insane
->amh 'bd_v[as=smp,vc=smp]
*** become_v interlocked
->amh qWl_f_v[as=rc,vc=ps]
*** become_v irascible
->amh kWrf_v[as=smp,vc=ps]
*** become_v jealous
->amh qn'_v[as=smp,vc=smp]
*** become_v kinky
->amh krdd_v[as=smp,vc=smp]
*** become_v late
->amh rfd_v[as=smp,vc=smp]
*** become_v lazy
->amh snf_v[as=smp,vc=smp]
*** become_v lifeless
->amh bwz_v[as=smp,vc=smp]
*** become_v light
->amh qll_v[as=smp,vc=smp]
*** become_v lighter
->amh nT'_v[as=it,vc=smp]
*** become_v live
->amh f'm_v[as=smp,vc=smp]
*** become_v lively
->amh dmq_v[as=smp,vc=smp]
->amh nq'_v[as=smp,vc=smp]
*** become_v lucky
->amh 'd_l_v[as=smp,vc=ps]
*** become_v lukewarm
->amh ls_s_v[as=smp,vc=smp]
*** become_v luminous
->amh b|rqrq_v[as=smp,vc=tr]
*** become_v mature
->amh sk_n_v[as=smp,vc=smp]
*** become_v mischievous
->amh k|lflf_v[as=smp,vc=ps]
*** become_v modest
->amh 'fr_v[as=smp,vc=smp]
*** become_v morbid
->amh mWqmWq_v[as=smp,vc=smp]
*** become_v morning
->amh ng'_v[as=smp,vc=smp]
*** become_v muddy
->amh dfrs_v[as=smp,vc=smp]
*** become_v naked
->amh raqWt_v[as=smp,vc=ps]
*** become_v naughty
->amh qbT_v[as=smp,vc=smp]
*** become_v near
->amh Tg'_v[as=smp,vc=ps]
*** become_v needy
->amh 'T'_v[as=smp,vc=smp]
*** become_v notorious
->amh qll_v[as=rc,vc=ps]
*** become_v numb
->amh nzr_v[as=smp,vc=tr]
*** become_v offended
->amh mrr_v[as=smp,vc=tr]
->amh kf'_v[as=smp,vc=ps]
*** become_v paralyzed
->amh sl_l_v[as=smp,vc=smp]
*** become_v partners
->amh xark_v[as=smp,vc=ps]
*** become_v pathetic
->amh kWn_n_v[as=smp,vc=cs]
*** become_v peaceful
->amh rg'_v[as=smp,vc=smp]
*** become_v pitiful
->amh kWn_n_v[as=smp,vc=cs]
*** become_v polite
->amh 'db_v[as=smp,vc=smp]
*** become_v pot-bellied
->amh n|zfTT_v[as=smp,vc=ps]
*** become_v powdered
->amh l'm_v[as=smp,vc=smp]
*** become_v proud
->amh kWr'_v[as=smp,vc=smp]
->amh jn_n_v[as=smp,vc=ps]
*** become_v putrid
->amh Tnb'_v[as=smp,vc=smp]
*** become_v questionable
->amh Ty_q_v[as=rc,vc=tr]
*** become_v quiet
->amh 'rf_v[as=smp,vc=smp]
*** become_v quite
->amh rg'_v[as=it,vc=ps]
*** become_v ragged
->amh zatl_v[as=smp,vc=smp]
*** become_v rampant
->amh zmt_v[as=rc,vc=ps]
*** become_v restive
->amh n|gragr_v[as=smp,vc=tr]
*** become_v restless
->amh qW|nTnT_v[as=smp,vc=ps]
->amh kl_f_v[as=smp,vc=smp]
->amh klb_v[as=smp,vc=smp]
*** become_v rich
->amh kbr_v[as=smp,vc=smp]
->amh blTg_v[as=smp,vc=smp]
*** become_v rotten
->amh mWqmWq_v[as=smp,vc=smp]
*** become_v rough
->amh xakr_v[as=smp,vc=smp]
*** become_v rumpled
->amh rgb_v[as=smp,vc=smp]
*** become_v scorching
->amh grr_v[as=smp,vc=smp]
*** become_v senile
->amh jaj*_v[as=smp,vc=smp]
->amh n|glajj_v[as=smp,vc=ps]
->amh n|Zbarr_v[as=smp,vc=ps]
->amh gljj_v[as=smp,vc=smp]
->amh grjf_v[as=smp,vc=smp]
*** become_v separated
->amh lqq_v[as=rc,vc=ps]
*** become_v serious
->amh kbd_v[as=smp,vc=smp]
*** become_v skilled
->amh slTn_v[as=smp,vc=smp]
*** become_v skinny
->amh ks'_v[as=smp,vc=smp]
*** become_v smaller
->amh 'ns_v[as=smp,vc=smp]
*** become_v smart
->amh gWb_z_v[as=smp,vc=smp]
*** become_v sophisticated
->amh zb_n_v[as=smp,vc=smp]
*** become_v spoiled
->amh mWlaqq_v[as=smp,vc=ps]
*** become_v squalid
->amh dss_v[as=smp,vc=smp]
*** become_v sterile
->amh mkn_v[as=smp,vc=smp]
*** become_v sticky
->amh malg_v[as=smp,vc=smp]
*** become_v stout
->amh wd_l_v[as=smp,vc=smp]
*** become_v straight
->amh sl_f_v[as=smp,vc=ps]
*** become_v stripped
->amh z|gWrgWr_v[as=smp,vc=ps]
*** become_v strong
->amh brt'_v[as=smp,vc=smp]
->amh drq_v[as=smp,vc=smp]
->amh 'y_l_v[as=smp,vc=smp]
->amh gWlbt_v[as=smp,vc=smp]
->amh tb'_v[as=smp,vc=smp]
*** become_v stupid
->amh bwz_v[as=smp,vc=smp]
*** become_v successful
->amh gWb_z_v[as=smp,vc=smp]
->amh wT'_v[as=rc,vc=ps]
*** become_v sunburnt
->amh ksm_v[as=smp,vc=tr]
*** become_v tainted
->amh wy_b_v[as=smp,vc=smp]
*** become_v taller
->amh 'dg_v[as=smp,vc=smp]
*** become_v thick
->amh wf_r_v[as=smp,vc=smp]
*** become_v thin
->amh mnmn_v[as=smp,vc=smp]
->amh qTn_v[as=smp,vc=smp]
->amh ks'_v[as=smp,vc=smp]
->amh slsl_v[as=smp,vc=smp]
->amh lw_T_v[as=it,vc=ps]
*** become_v turbid
->amh dfrs_v[as=smp,vc=smp]
*** become_v twisted
->amh wlagd_v[as=smp,vc=ps]
->amh n|gadd_v[as=smp,vc=ps]
*** become_v unpopular
->amh Tl'_v[as=smp,vc=ps]
*** become_v unsteady
->amh wall_v[as=smp,vc=smp]
*** become_v used
->amh lmd_v[as=smp,vc=ps]
*** become_v useful
->amh fy_d_v[as=smp,vc=smp]
*** become_v verdant
->amh CbCb_v[as=smp,vc=smp]
*** become_v warm
->amh mwq_v[as=smp,vc=smp]
*** become_v weak
->amh dqq_v[as=rc,vc=ps]
->amh lax*_v[as=smp,vc=smp]
*** become_v weak-sighted
->amh dngz_v[as=smp,vc=smp]
*** become_v wealthy
->amh kbr_v[as=smp,vc=smp]
*** become_v wet
->amh r's_v[as=smp,vc=smp]
->amh rTb_v[as=smp,vc=smp]
*** become_v white
->amh nT'_v[as=smp,vc=smp]
*** become_v worse
->amh kf'_v[as=smp,vc=smp]
*** become_v yellowish
->amh wy_b_v[as=smp,vc=smp]
*** beg_v entreated
->amh lm_n_v[as=smp,vc=smp]
*** beg_v shamelessly
->amh bWagt_v[as=smp,vc=smp]
*** begin_v
->amh wT_n_v[as=smp,vc=smp]
->amh wT_n_v[as=smp,vc=ps]
->amh b't_v[as=smp,vc=smp]
*** behave_v badly
->amh bxqT_v[as=rc,vc=ps]
->amh balg_v[as=smp,vc=smp]
*** behave_v gracefully
->amh znakt_v[as=smp,vc=ps]
*** behave_v hypocritically
->amh mSadq_v[as=smp,vc=ps]
*** behave_v naively
->amh jyl_v[as=it,vc=ps]
*** behave_v rudely
->amh mnqr_v[as=rc,vc=ps]
->amh dfr_v[as=rc,vc=ps]
->amh mnqr_v[as=it,vc=ps]
*** behave_v slugishly
->amh n|krff_v[as=smp,vc=ps]
*** behave_v unnaturally
->amh kW|nsns_v[as=smp,vc=ps]
*** behead_v
->amh sy_f_v[as=smp,vc=smp]
*** belch_v
->amh gs'_v[as=smp,vc=tr]
*** believe_v
->amh 'mn_v[as=smp,vc=smp]
*** belittle_v
->amh kWs_s_v[as=smp,vc=tr]
->amh n|qWaxx_v[as=smp,vc=tr]
->amh n|gwall_v[as=smp,vc=tr]
->amh n'q_v[as=smp,vc=smp]
*** bellow_v
->amh gWr'_v[as=rc,vc=tr]
*** belt_v
->amh 'Tq_v[as=smp,vc=ps]
*** bend_v
->amh gWnbs_v[as=smp,vc=tr]
->amh n|gadd_v[as=smp,vc=tr]
->amh df'_v[as=smp,vc=smp]
->amh Tmzz_v[as=rc,vc=ps]
->amh n|gadd_v[as=smp,vc=ps]
->amh zmm_v[as=smp,vc=cs]
->amh lb_q_v[as=smp,vc=smp]
->amh Tmm_v[as=rc,vc=tr]
->amh gWbT_v[as=smp,vc=tr]
->amh lm_T_v[as=smp,vc=smp]
*** bend_v down
->amh ql_s_v[as=smp,vc=smp]
*** bend_v on
->amh mrkWz_v[as=smp,vc=ps]
*** bend_v over
->amh qWlmm_v[as=smp,vc=smp]
*** bend_v round
->amh qWlmm_v[as=smp,vc=smp]
*** benefit_v
->amh Tqm_v[as=smp,vc=smp]
->amh Tqm_v[as=smp,vc=ps]
*** beseech_v
->amh lm_n_v[as=smp,vc=smp]
*** besiege_v
->amh kbb_v[as=smp,vc=smp]
*** betray_v
->amh kd'_v[as=smp,vc=smp]
*** bewitch_v
->amh fzz_v[as=smp,vc=tr]
*** bicker_v
->amh ntrk_v[as=smp,vc=smp]
*** bid_v
->amh Cart_v[as=smp,vc=ps]
*** bid_v farewell
->amh snbt_v[as=rc,vc=ps]
*** bind_v
->amh Tr_z_v[as=smp,vc=smp]
*** bite_v
->amh nks_v[as=smp,vc=smp]
->amh nks_v[as=rc,vc=ps]
->amh ndf_v[as=smp,vc=smp]
*** blabber_v
->amh qbajr_v[as=smp,vc=smp]
*** black_v
->amh TqWr_v[as=smp,vc=tr]
*** blacken_v
->amh TqWr_v[as=smp,vc=tr]
*** blame_v
->amh zlf_v[as=rc,vc=ps]
->amh zlf_v[as=smp,vc=smp]
->amh nqf_v[as=smp,vc=smp]
->amh nw_r_v[as=smp,vc=tr]
->amh nqf_v[as=it,vc=smp]
*** blaze_v
->amh n|bWgbWg_v[as=smp,vc=ps]
*** blaze_v up
->amh lm'_v[as=smp,vc=smp]
*** bleed_v
->amh dm'_v[as=smp,vc=smp]
*** bless_v
->amh bark_v[as=smp,vc=smp]
->amh mr_q_v[as=smp,vc=smp]
->amh qd_s_v[as=smp,vc=smp]
->amh qd_s_v[as=smp,vc=ps]
*** blind_v
->amh T|brbr_v[as=smp,vc=tr]
->amh gard_v[as=smp,vc=smp]
*** blink_v
->amh qW|lClC_v[as=smp,vc=tr]
*** blister_v
->amh qWaTr_v[as=smp,vc=smp]
*** block_v
->amh dq_n_v[as=smp,vc=ps]
->amh zg'_v[as=smp,vc=smp]
->amh 'g_d_v[as=smp,vc=smp]
*** block_v up
->amh zg'_v[as=smp,vc=smp]
*** bloom_v
->amh 'b_b_v[as=smp,vc=smp]
*** blossom_v
->amh fk'_v[as=smp,vc=tr]
->amh fk'_v[as=smp,vc=smp]
*** blossom_v flowered
->amh 'b_b_v[as=smp,vc=smp]
*** blot_v
->amh nqWT_v[as=smp,vc=smp]
->amh nTb_v[as=smp,vc=tr]
->amh Tm'_v[as=smp,vc=tr]
->amh mTT_v[as=smp,vc=tr]
->amh nTb_v[as=smp,vc=smp]
*** blow_v
->amh nfs_v[as=smp,vc=smp]
->amh nf'_v[as=smp,vc=smp]
->amh nfs_v[as=it,vc=smp]
*** blow_v out
->amh Tf'_v[as=smp,vc=tr]
*** blow_v up
->amh fnd'_v[as=smp,vc=tr]
->amh fnd'_v[as=smp,vc=smp]
*** blur_v
->amh dbzz_v[as=smp,vc=tr]
*** bluster_v
->amh dnf'_v[as=smp,vc=smp]
->amh wbr'_v[as=smp,vc=smp]
*** boast_v
->amh dnf'_v[as=smp,vc=smp]
->amh fWk_r_v[as=smp,vc=smp]
->amh xl_l_v[as=smp,vc=smp]
*** boil_v
->amh fl'_v[as=smp,vc=smp]
->amh n|dkdk_v[as=smp,vc=tr]
->amh fl'_v[as=smp,vc=tr]
->amh qq_l_v[as=smp,vc=smp]
->amh qq_l_v[as=smp,vc=ps]
*** boil_v furiously
->amh nfr_v[as=smp,vc=smp]
*** boil_v lightly
->amh n|grgb_v[as=smp,vc=tr]
*** boil_v over
->amh gnfl_v[as=smp,vc=smp]
*** boil_v up
->amh g|flfl_v[as=smp,vc=tr]
*** bolt_v
->amh xgW_r_v[as=smp,vc=smp]
->amh brgg_v[as=smp,vc=smp]
->amh dnbr_v[as=smp,vc=smp]
->amh qrqr_v[as=smp,vc=smp]
->amh wrwr_v[as=smp,vc=smp]
*** boom_v
->amh gWr'_v[as=rc,vc=tr]
*** border_v
->amh ws_n_v[as=rc,vc=tr]
*** border_v with
->amh ws_n_v[as=rc,vc=ps]
*** bore_v
->amh srsr_v[as=smp,vc=smp]
->amh bWrbWr_v[as=smp,vc=smp]
->amh bs'_v[as=smp,vc=smp]
->amh xnqWr_v[as=smp,vc=smp]
->amh slc*_v[as=smp,vc=cs]
->amh takt_v[as=smp,vc=tr]
*** bore_v into
->amh flfl_v[as=smp,vc=smp]
*** borrow_v
->amh bd_r_v[as=smp,vc=ps]
*** bother_v
->amh nznz_v[as=rc,vc=ps]
->amh xaql_v[as=smp,vc=smp]
*** bounce_v
->amh nTr_v[as=smp,vc=smp]
->amh gW'n_v[as=smp,vc=smp]
->amh nTr_v[as=smp,vc=tr]
->amh gW'n_v[as=smp,vc=tr]
*** bow_v
->amh sgd_v[as=smp,vc=smp]
*** bow_v to
->amh gWnbs_v[as=smp,vc=tr]
->amh gWbdd_v[as=smp,vc=tr]
*** bowl_v along
->amh x|krkr_v[as=smp,vc=tr]
->amh x|krkr_v[as=smp,vc=ps]
*** box_v
->amh nf'_v[as=rc,vc=ps]
*** brag_v
->amh dnf'_v[as=smp,vc=smp]
->amh fWk_r_v[as=smp,vc=smp]
*** braid_v
->amh gWngWn_v[as=smp,vc=smp]
*** brand_v
->amh tkW_s_v[as=smp,vc=smp]
*** bray_v
->amh nf'_v[as=rc,vc=tr]
*** breach_v
->amh T's_v[as=smp,vc=smp]
*** break_v
->amh frT_v[as=smp,vc=smp]
->amh sbr_v[as=smp,vc=smp]
*** break_v away
->amh ftlk_v[as=smp,vc=ps]
*** break_v ground
->amh qbqb_v[as=smp,vc=smp]
*** break_v in
->amh sbr_v[as=smp,vc=smp]
*** break_v loose
->amh flqq_v[as=smp,vc=smp]
->amh flqq_v[as=smp,vc=ps]
*** break_v off
->amh qWrs_v[as=smp,vc=smp]
->amh xr_f_v[as=smp,vc=smp]
->amh xr_f_v[as=it,vc=smp]
->amh qnTs_v[as=smp,vc=smp]
*** break_v open
->amh fnkt_v[as=smp,vc=smp]
->amh frT_v[as=smp,vc=tr]
*** break_v out
->amh mrqz_v[as=smp,vc=tr]
*** break_v through
->amh T's_v[as=smp,vc=smp]
*** break_v up
->amh n'd_v[as=smp,vc=smp]
->amh bt_n_v[as=smp,vc=smp]
*** break_v wind
->amh fs'_v[as=smp,vc=smp]
*** breathe_v
->amh tnfs_v[as=smp,vc=smp]
->amh nfs_v[as=smp,vc=smp]
->amh nfs_v[as=it,vc=smp]
*** breathe_v lightly
->amh tnfs_v[as=it,vc=smp]
*** breed_v
->amh rb'_v[as=smp,vc=tr]
*** brew_v
->amh Tmq_v[as=smp,vc=smp]
*** brighten_v
->amh Tr'_v[as=smp,vc=smp]
->amh fk'_v[as=smp,vc=smp]
->amh wz'_v[as=smp,vc=smp]
*** bring_v
->amh mT'_v[as=smp,vc=tr]
*** bring_v about
->amh mT'_v[as=smp,vc=tr]
*** bring_v abundantly
->amh Z|gWdgWd_v[as=smp,vc=tr]
*** bring_v close
->amh Tg'_v[as=smp,vc=cs]
*** bring_v deficit
->amh ksr_v[as=smp,vc=tr]
*** bring_v down
->amh wrd_v[as=smp,vc=tr]
*** bring_v forward
->amh drs_v[as=smp,vc=tr]
*** bring_v in
->amh gb'_v[as=smp,vc=tr]
->amh gN*_v[as=smp,vc=cs]
*** bring_v near
->amh qrb_v[as=smp,vc=tr]
->amh qrb_v[as=rc,vc=tr]
*** bring_v together
->amh zamd_v[as=smp,vc=cs]
->amh gTm_v[as=rc,vc=tr]
*** broil_v
->amh n|CrCr_v[as=smp,vc=ps]
->amh n|CrCr_v[as=smp,vc=tr]
*** brood_v
->amh 'qf_v[as=smp,vc=smp]
*** bruise_v
->amh qTqT_v[as=smp,vc=smp]
->amh qTqT_v[as=smp,vc=ps]
*** brush_v against
->amh 'x*_v[as=it,vc=ps]
*** bubble_v
->amh kWrf_v[as=smp,vc=smp]
->amh f|lqlq_v[as=smp,vc=ps]
*** bubble_v up
->amh g|flfl_v[as=smp,vc=ps]
*** build_v
->amh gnb'_v[as=smp,vc=smp]
->amh sr'_v[as=smp,vc=smp]
*** bully_v off
->amh qWrqWs_v[as=smp,vc=smp]
*** bum_v
->amh dzdz_v[as=smp,vc=tr]
->amh zTzT_v[as=smp,vc=cs]
*** bum_v around
->amh dxdx_v[as=smp,vc=tr]
*** bump_v
->amh lg_'_v[as=rc,vc=tr]
->amh gC*_v[as=smp,vc=smp]
*** bump_v on
->amh gC*_v[as=smp,vc=ps]
*** burden_v
->amh C'n_v[as=smp,vc=smp]
*** burn_v
->amh qWTqWT_v[as=smp,vc=smp]
->amh ndd_v[as=smp,vc=smp]
->amh ndd_v[as=smp,vc=tr]
->amh fj*_v[as=rc,vc=ps]
->amh lmTT_v[as=smp,vc=smp]
->amh lblb_v[as=smp,vc=ps]
->amh gWrn'_v[as=smp,vc=tr]
->amh qT_l_v[as=rc,vc=tr]
*** burn_v black
->amh 'rr_v[as=smp,vc=smp]
*** burn_v brightly
->amh n|tgtg_v[as=smp,vc=tr]
*** burn_v off
->amh gay*_v[as=smp,vc=tr]
->amh l'f_v[as=smp,vc=smp]
*** burn_v scalded
->amh mWxlq_v[as=smp,vc=smp]
*** burn_v slightly
->amh lblb_v[as=smp,vc=smp]
*** burn_v up
->amh f'm_v[as=it,vc=ps]
*** burst_v
->amh frT_v[as=smp,vc=smp]
->amh fnd'_v[as=smp,vc=tr]
->amh fnd'_v[as=smp,vc=smp]
*** burst_v open
->amh fk'_v[as=smp,vc=smp]
->amh brgd_v[as=smp,vc=smp]
*** bury_v
->amh qbr_v[as=smp,vc=smp]
*** bustle_v
->amh knf_v[as=smp,vc=smp]
->amh klb_v[as=smp,vc=smp]
*** button_v
->amh qWl_f_v[as=smp,vc=ps]
*** button_v up
->amh qWl_f_v[as=smp,vc=smp]
*** cadge_v everywhere
->amh n|sWlsWl_v[as=smp,vc=ps]
*** cajole_v
->amh dl_l_v[as=smp,vc=smp]
->amh lm_T_v[as=it,vc=ps]
->amh 'bl_v[as=it,vc=smp]
->amh wT'_v[as=it,vc=tr]
*** calculate_v
->amh 's_b_v[as=smp,vc=smp]
->amh sl'_v[as=smp,vc=cs]
*** call_v
->amh sN*_v[as=smp,vc=ps]
*** calm_v down
->amh 'g_s_v[as=smp,vc=tr]
->amh brd_v[as=smp,vc=tr]
*** camp_v
->amh sfr_v[as=smp,vc=smp]
*** campaign_v
->amh zmt_v[as=smp,vc=smp]
*** canter_v
->amh sWmsWm_v[as=smp,vc=smp]
*** caper_v
->amh fnC*_v[as=smp,vc=smp]
*** caress_v
->amh dass_v[as=smp,vc=smp]
->amh dabs_v[as=it,vc=smp]
*** carry_v
->amh xk_m_v[as=smp,vc=ps]
*** carry_v away
->amh g'z_v[as=smp,vc=tr]
*** carry_v awkwardly
->amh n|krff_v[as=smp,vc=tr]
->amh n|zlazl_v[as=smp,vc=tr]
*** carry_v clumsily
->amh n|krff_v[as=smp,vc=tr]
->amh n|zrff_v[as=smp,vc=tr]
*** carry_v out
->amh fS_m_v[as=smp,vc=cs]
*** carry_v sluggishly
->amh n|krff_v[as=smp,vc=tr]
*** carve_v
->amh Trb_v[as=smp,vc=smp]
*** cash_v
->amh lw_T_v[as=smp,vc=smp]
*** cast_v about
->amh bt_n_v[as=smp,vc=smp]
*** castrate_v
->amh wqT_v[as=smp,vc=smp]
->amh kWlax*_v[as=smp,vc=tr]
*** catalogue_v
->amh mzgb_v[as=smp,vc=smp]
*** catch_v
->amh y'z_v[as=smp,vc=smp]
*** catch_v fire
->amh qT_l_v[as=rc,vc=ps]
->amh qT_l_v[as=it,vc=ps]
->amh y'z_v[as=it,vc=ps]
*** cause_v discomfort
->amh kWskWs_v[as=smp,vc=smp]
*** cause_v disturbance
->amh bTbT_v[as=smp,vc=smp]
*** cause_v excess
->amh blT_v[as=smp,vc=tr]
*** cause_v fear
->amh z|rTrT_v[as=smp,vc=tr]
*** cause_v panic
->amh z|rTrT_v[as=smp,vc=tr]
*** cause_v quarrel
->amh CqCq_v[as=rc,vc=tr]
*** cause_v weariness
->amh z'l_v[as=smp,vc=cs]
*** cause_v weevils
->amh nqz_v[as=smp,vc=tr]
*** caution_v
->amh Tnqq_v[as=smp,vc=cs]
*** cease_v
->amh qwm_v[as=smp,vc=smp]
*** celebrate_v
->amh kbr_v[as=smp,vc=tr]
*** challenge_v vehemently
->amh rgrg_v[as=smp,vc=ps]
*** change_v
->amh qy_r_v[as=smp,vc=smp]
->amh xr_f_v[as=smp,vc=smp]
->amh qy_r_v[as=it,vc=smp]
->amh xr_f_v[as=smp,vc=ps]
->amh mnzr_v[as=smp,vc=smp]
->amh lw_T_v[as=smp,vc=smp]
*** change_v colour
->amh nbz_v[as=smp,vc=smp]
*** change_v completely
->amh mnzr_v[as=it,vc=smp]
*** change_v money
->amh zrzr_v[as=smp,vc=smp]
*** chant_v
->amh zym_v[as=smp,vc=cs]
->amh zm_r_v[as=smp,vc=smp]
->amh xl_l_v[as=smp,vc=smp]
*** charge_v
->amh mWl'_v[as=smp,vc=smp]
->amh kfl_v[as=smp,vc=cs]
->amh sg_g_v[as=smp,vc=cs]
*** chase_v
->amh rwT_v[as=smp,vc=tr]
->amh rwT_v[as=it,vc=tr]
*** chase_v away
->amh sdd_v[as=rc,vc=tr]
*** chase_v out
->amh wT'_v[as=smp,vc=cs]
*** chastise_v
->amh qT'_v[as=smp,vc=ps]
->amh qT'_v[as=smp,vc=smp]
*** chat_v
->amh Cawt_v[as=smp,vc=ps]
*** chatter_v
->amh lflf_v[as=smp,vc=smp]
*** chatter_v together
->amh lflf_v[as=rc,vc=ps]
*** cheat_v
->amh tall_v[as=smp,vc=tr]
->amh kWr_j_v[as=smp,vc=smp]
->amh tall_v[as=smp,vc=ps]
->amh slb_v[as=smp,vc=smp]
->amh C|brbr_v[as=smp,vc=tr]
*** check_v
->amh ft_x_v[as=smp,vc=smp]
->amh mrmr_v[as=smp,vc=smp]
*** cheer_v up
->amh Sn'_v[as=it,vc=ps]
*** cherish_v
->amh n|kbkb_v[as=rc,vc=ps]
->amh n|kbkb_v[as=smp,vc=tr]
*** chew_v
->amh mskW'_v[as=smp,vc=tr]
->amh lm_T_v[as=rc,vc=tr]
->amh 'N_k_v[as=smp,vc=smp]
->amh qWrTm_v[as=it,vc=smp]
*** chew_v ƒçat
->amh q'm_v[as=smp,vc=smp]
*** chip_v
->amh crcm_v[as=smp,vc=smp]
*** chip_v off
->amh kWrkWm_v[as=smp,vc=smp]
*** chisel_v carved
->amh wqr_v[as=smp,vc=smp]
*** choke_v
->amh 'f_n_v[as=smp,vc=smp]
->amh 'nq_v[as=smp,vc=smp]
*** choose_v
->amh mrT_v[as=smp,vc=smp]
*** chop_v
->amh ktkt_v[as=smp,vc=smp]
->amh qrTf_v[as=smp,vc=smp]
->amh mtr_v[as=it,vc=smp]
->amh gWrd_v[as=smp,vc=smp]
->amh ktf_v[as=smp,vc=smp]
->amh gWrd_v[as=it,vc=smp]
->amh ktf_v[as=smp,vc=ps]
*** chop_v down
->amh qWrT_v[as=it,vc=smp]
*** chop_v finely
->amh qrTf_v[as=it,vc=smp]
*** chop_v off
->amh CfCf_v[as=smp,vc=smp]
*** chop_v up
->amh cfcf_v[as=smp,vc=smp]
*** christen_v
->amh Tmq_v[as=smp,vc=tr]
*** churn_v up
->amh laxq_v[as=smp,vc=tr]
->amh laqWT_v[as=smp,vc=tr]
*** circulate_v
->amh sraC*_v[as=smp,vc=cs]
->amh zw_r_v[as=it,vc=ps]
*** circumcise_v
->amh gr_z_v[as=smp,vc=smp]
*** cite_v
->amh Tqs_v[as=smp,vc=smp]
*** clamour_v repeatedly
->amh Cwh_v[as=it,vc=ps]
*** clap_v
->amh CbCb_v[as=smp,vc=tr]
*** clap_v hands
->amh CbCb_v[as=smp,vc=tr]
*** clarify_v
->amh rd'_v[as=smp,vc=cs]
->amh Tr'_v[as=rc,vc=tr]
->amh br'_v[as=it,vc=tr]
->amh gnzb_v[as=smp,vc=cs]
*** clash_v
->amh gC*_v[as=rc,vc=ps]
->amh gC*_v[as=rc,vc=tr]
*** clasp_v
->amh Cb_T_v[as=smp,vc=smp]
*** classify_v
->amh kfl_v[as=it,vc=smp]
->amh ly_*_v[as=it,vc=smp]
*** claw_v
->amh bWC_q_v[as=smp,vc=smp]
->amh bWC_q_v[as=it,vc=smp]
->amh bWaTT_v[as=smp,vc=smp]
*** claw_v at
->amh mnCr_v[as=smp,vc=smp]
*** clean_v
->amh 'bs_v[as=smp,vc=smp]
->amh Sd'_v[as=smp,vc=cs]
->amh Tr'_v[as=smp,vc=tr]
->amh nS'_v[as=smp,vc=tr]
->amh Trg_v[as=smp,vc=smp]
*** clean_v oneself
->amh Td'_v[as=rc,vc=ps]
*** clean_v up
->amh Sd'_v[as=it,vc=ps]
->amh Sd'_v[as=smp,vc=cs]
*** clear_v
->amh mnTr_v[as=smp,vc=smp]
*** clear_v completely
->amh mnTr_v[as=it,vc=smp]
*** clear_v up
->amh Tr'_v[as=smp,vc=smp]
->amh Tr'_v[as=rc,vc=tr]
->amh rgf_v[as=smp,vc=smp]
*** cleave_v
->amh snTq_v[as=smp,vc=smp]
*** clench_v
->amh Cb_T_v[as=smp,vc=smp]
*** climb_v
->amh wT'_v[as=smp,vc=smp]
->amh n|TlTl_v[as=rc,vc=ps]
*** climb_v over
->amh zll_v[as=smp,vc=smp]
*** cling_v to
->amh TmTm_v[as=smp,vc=ps]
->amh Tbq_v[as=rc,vc=ps]
*** clink_v
->amh q|ClCl_v[as=smp,vc=ps]
*** close_v
->amh qWl_f_v[as=smp,vc=smp]
->amh zg'_v[as=smp,vc=smp]
->amh dfn_v[as=smp,vc=smp]
*** close_v up
->amh xgaxg_v[as=smp,vc=cs]
*** clot_v
->amh gWagWl_v[as=smp,vc=tr]
->amh gWagWl_v[as=smp,vc=smp]
*** cluck_v
->amh xk'_v[as=it,vc=tr]
*** clutch_v
->amh Cb_T_v[as=smp,vc=smp]
*** coach_v
->amh slTn_v[as=smp,vc=tr]
*** cock_v
->amh qb_l_v[as=it,vc=tr]
*** coil_v
->amh TmTm_v[as=smp,vc=ps]
->amh Tqll_v[as=smp,vc=smp]
->amh TnTn_v[as=smp,vc=tr]
*** coil_v up
->amh TmTm_v[as=smp,vc=smp]
*** collapse_v
->amh frs_v[as=smp,vc=smp]
*** collect_v
->amh kmac*_v[as=it,vc=ps]
->amh gss_v[as=rc,vc=tr]
->amh Trqm_v[as=rc,vc=tr]
->amh kmac*_v[as=it,vc=tr]
*** collide_v
->amh lg_'_v[as=rc,vc=tr]
*** colour_v
->amh qlm_v[as=smp,vc=tr]
*** comb_v
->amh bT_r_v[as=smp,vc=tr]
*** combat_v
->amh wg'_v[as=smp,vc=smp]
->amh wg'_v[as=rc,vc=ps]
*** combine_v
->amh Tm_r_v[as=rc,vc=tr]
*** come_v
->amh mT'_v[as=smp,vc=smp]
*** come_v across
->amh gN*_v[as=smp,vc=tr]
*** come_v alive
->amh nq'_v[as=it,vc=smp]
*** come_v back
->amh ml_s_v[as=smp,vc=ps]
*** come_v down
->amh wrd_v[as=smp,vc=smp]
*** come_v in
->amh gb'_v[as=smp,vc=smp]
*** come_v near
->amh qrb_v[as=smp,vc=smp]
*** come_v true
->amh fS_m_v[as=smp,vc=ps]
*** comfort_v
->amh xngl_v[as=smp,vc=smp]
*** command_v
->amh 'zz_v[as=smp,vc=smp]
*** command_v respect
->amh kbr_v[as=smp,vc=ps]
*** commence_v
->amh jm_r_v[as=smp,vc=smp]
->amh wT_n_v[as=smp,vc=smp]
->amh wT_n_v[as=smp,vc=ps]
*** comment_v on
->amh tc_*_v[as=smp,vc=smp]
->amh tc_*_v[as=smp,vc=ps]
*** commit_v adultery
->amh mnzr_v[as=smp,vc=tr]
*** commit_v fornication
->amh qnzr_v[as=smp,vc=smp]
*** compare_v
->amh nTr_v[as=it,vc=ps]
->amh blT_v[as=it,vc=tr]
->amh gnzb_v[as=rc,vc=tr]
->amh mskr_v[as=rc,vc=tr]
->amh wd_r_v[as=it,vc=tr]
->amh 'y*_v[as=it,vc=tr]
->amh nSr_v[as=it,vc=tr]
*** compel_v
->amh gdd_v[as=smp,vc=cs]
*** compensate_v
->amh k's_v[as=smp,vc=smp]
->amh k's_v[as=it,vc=ps]
*** compete_v
->amh wd_r_v[as=it,vc=ps]
*** compile_v
->amh qnbr_v[as=it,vc=tr]
->amh qnbr_v[as=rc,vc=tr]
->amh qnbr_v[as=it,vc=ps]
->amh Tnaqr_v[as=smp,vc=tr]
*** complain_v
->amh mrr_v[as=rc,vc=tr]
->amh gW|rmrm_v[as=smp,vc=tr]
*** complain_v pointlessly
->amh nCanC_v[as=smp,vc=ps]
*** complement_v
->amh gWlms_v[as=rc,vc=tr]
*** complete_v
->amh bq'_v[as=smp,vc=tr]
->amh Tnqq_v[as=rc,vc=tr]
->amh mWl'_v[as=rc,vc=tr]
->amh zlq_v[as=smp,vc=smp]
*** compose_v
->amh qN_*_v[as=smp,vc=ps]
*** compress_v
->amh TqTq_v[as=smp,vc=smp]
->amh 'm_q_v[as=smp,vc=smp]
*** conceal_v
->amh gard_v[as=smp,vc=ps]
->amh db_q_v[as=smp,vc=smp]
->amh gard_v[as=smp,vc=smp]
->amh xf_n_v[as=smp,vc=smp]
*** conceive_v
->amh Sns_v[as=smp,vc=ps]
*** concentrate_v
->amh kmac*_v[as=smp,vc=ps]
->amh kt_r_v[as=smp,vc=smp]
->amh kmac*_v[as=it,vc=ps]
->amh kmac*_v[as=it,vc=tr]
*** conclude_v
->amh Tqll_v[as=rc,vc=tr]
*** concur_v
->amh dr_b_v[as=smp,vc=ps]
*** condemn_v
->amh kWn_n_v[as=smp,vc=smp]
*** conduct_v negotiation
->amh drdr_v[as=rc,vc=tr]
*** conduct_v war
->amh wg'_v[as=rc,vc=tr]
*** confiscate_v
->amh wrs_v[as=smp,vc=smp]
*** confound_v with
->amh dblq_v[as=smp,vc=smp]
*** confront_v
->amh gTm_v[as=rc,vc=ps]
*** confuse_v
->amh skr_v[as=rc,vc=tr]
->amh zbarq_v[as=smp,vc=cs]
->amh mt'_v[as=rc,vc=tr]
->amh dnagr_v[as=smp,vc=tr]
->amh mt'_v[as=it,vc=tr]
->amh dblq_v[as=rc,vc=tr]
*** conjugate_v
->amh gss_v[as=smp,vc=smp]
*** connect_v
->amh Tlf_v[as=smp,vc=smp]
->amh y'z_v[as=it,vc=tr]
*** conquer_v
->amh xnf_v[as=smp,vc=cs]
*** consent_v
->amh gb'_v[as=it,vc=ps]
*** console_v
->amh lqs_v[as=rc,vc=tr]
->amh Sn'_v[as=it,vc=tr]
*** consolidate_v
->amh Tnkr_v[as=rc,vc=tr]
->amh Tnkr_v[as=smp,vc=tr]
*** conspire_v
->amh 'd_m_v[as=smp,vc=smp]
->amh dWl_t_v[as=smp,vc=smp]
->amh syr_v[as=smp,vc=cs]
*** conspire_v against
->amh 'br_v[as=smp,vc=smp]
*** constrain_v
->amh gt'_v[as=smp,vc=smp]
*** consult_v
->amh mkr_v[as=rc,vc=tr]
->amh way*_v[as=smp,vc=tr]
->amh mkr_v[as=it,vc=ps]
*** consume_v
->amh fj*_v[as=smp,vc=smp]
->amh Cr_s_v[as=smp,vc=smp]
->amh bl'_v[as=smp,vc=smp]
*** contaminate_v
->amh nk'_v[as=it,vc=ps]
->amh bk_l_v[as=smp,vc=smp]
*** contemplate_v
->amh slsl_v[as=rc,vc=tr]
*** contest_v
->amh krkr_v[as=rc,vc=ps]
*** continue_v
->amh qT_l_v[as=smp,vc=smp]
*** contradict_v
->amh qarn_v[as=smp,vc=ps]
*** contribute_v
->amh wT'_v[as=rc,vc=tr]
*** control_v
->amh qWTr_v[as=it,vc=ps]
*** convalesce_v
->amh gg_m_v[as=smp,vc=tr]
*** converse_v
->amh Cawt_v[as=it,vc=ps]
*** convey_v
->amh qrb_v[as=smp,vc=tr]
*** convince_v
->amh 'mn_v[as=it,vc=tr]
->amh 'mn_v[as=smp,vc=cs]
->amh wT'_v[as=it,vc=tr]
*** cook_v
->amh qq_l_v[as=smp,vc=smp]
*** cook_v enough
->amh bsl_v[as=smp,vc=tr]
*** cook_v porridge
->amh gnf'_v[as=smp,vc=tr]
*** cool_v
->amh qzqz_v[as=smp,vc=tr]
->amh brd_v[as=smp,vc=tr]
*** cool_v down
->amh qzqz_v[as=smp,vc=tr]
->amh qzqz_v[as=smp,vc=smp]
->amh brd_v[as=smp,vc=tr]
*** cooperate_v
->amh 'br_v[as=it,vc=ps]
->amh rd'_v[as=it,vc=ps]
->amh dr_b_v[as=smp,vc=ps]
*** coordinate_v
->amh qnbr_v[as=it,vc=tr]
->amh qnbr_v[as=rc,vc=tr]
*** copulate_v
->amh bd'_v[as=smp,vc=smp]
*** copy_v
->amh glbT_v[as=smp,vc=smp]
*** copy_v from
->amh qd'_v[as=smp,vc=smp]
*** correct_v
->amh kWr_j_v[as=smp,vc=smp]
->amh 'r_m_v[as=smp,vc=smp]
*** correspond_v
->amh sm'_v[as=it,vc=ps]
->amh l'k_v[as=it,vc=ps]
*** corrode_v
->amh z'g_v[as=smp,vc=smp]
*** counsel_v
->amh mkr_v[as=smp,vc=smp]
*** count_v
->amh qWTr_v[as=smp,vc=smp]
*** couple_v
->amh Tm_r_v[as=rc,vc=ps]
->amh Tm_r_v[as=rc,vc=tr]
*** cover_v
->amh gard_v[as=smp,vc=ps]
->amh gard_v[as=smp,vc=smp]
->amh lgW_d_v[as=smp,vc=smp]
->amh mt'_v[as=smp,vc=smp]
->amh xf_n_v[as=smp,vc=smp]
*** cover_v oneself
->amh xf_n_v[as=it,vc=ps]
*** covet_v
->amh kj_l_v[as=smp,vc=smp]
*** crack_v
->amh Cwh_v[as=smp,vc=tr]
->amh snTq_v[as=smp,vc=ps]
->amh snTq_v[as=smp,vc=smp]
*** crackle_v
->amh n|T'T'_v[as=smp,vc=ps]
*** cradle_v
->amh 'qf_v[as=smp,vc=smp]
->amh 'qf_v[as=smp,vc=ps]
*** cram_v
->amh 'C_q_v[as=smp,vc=smp]
->amh xmdd_v[as=smp,vc=smp]
->amh sksk_v[as=smp,vc=smp]
->amh 'm_q_v[as=smp,vc=smp]
->amh gWsgWs_v[as=smp,vc=smp]
->amh 'm_q_v[as=smp,vc=ps]
*** cram_v together
->amh 'm_g_v[as=smp,vc=smp]
*** cramp_v
->amh nzr_v[as=smp,vc=tr]
->amh 'f_g_v[as=smp,vc=smp]
*** crash_v
->amh gC*_v[as=rc,vc=ps]
*** crash_v into
->amh lt_m_v[as=smp,vc=ps]
*** crawl_v
->amh d'h_v[as=smp,vc=smp]
->amh s'b_v[as=smp,vc=ps]
*** crawl_v about
->amh r|msms_v[as=smp,vc=ps]
*** crease_v
->amh Cmdd_v[as=rc,vc=tr]
->amh Cb_T_v[as=it,vc=tr]
->amh kWmatr_v[as=smp,vc=tr]
->amh Cramd_v[as=smp,vc=ps]
->amh Cramt_v[as=smp,vc=ps]
->amh Cramd_v[as=smp,vc=tr]
->amh kWmatr_v[as=smp,vc=ps]
->amh Cb_T_v[as=it,vc=ps]
*** crease_v severely
->amh kWmatr_v[as=it,vc=tr]
*** create_v
->amh fTr_v[as=smp,vc=smp]
*** create_v animosity
->amh nks_v[as=rc,vc=tr]
*** create_v conflict
->amh gC*_v[as=rc,vc=tr]
*** cringe_v
->amh xmqq_v[as=rc,vc=ps]
*** cripple_v
->amh kWrtm_v[as=it,vc=smp]
->amh kWramt_v[as=smp,vc=ps]
->amh snkl_v[as=smp,vc=smp]
*** criticize_v
->amh wqs_v[as=smp,vc=ps]
->amh wqs_v[as=smp,vc=smp]
->amh nqf_v[as=smp,vc=smp]
->amh tc_*_v[as=smp,vc=smp]
*** criticize_v others
->amh lgW_m_v[as=smp,vc=tr]
*** crook_v
->amh wlagd_v[as=it,vc=ps]
->amh wlagd_v[as=smp,vc=ps]
->amh wlagd_v[as=smp,vc=tr]
*** crop_v close
->amh mWl_C_v[as=smp,vc=smp]
*** cross_v
->amh xagr_v[as=it,vc=ps]
->amh xagr_v[as=smp,vc=ps]
->amh Tm_r_v[as=rc,vc=tr]
->amh rb'_v[as=rc,vc=tr]
*** cross_v oneself
->amh matb_v[as=smp,vc=tr]
*** crossbreed_v
->amh kl_s_v[as=rc,vc=ps]
*** crowd_v
->amh Tbb_v[as=rc,vc=tr]
*** crowd_v around
->amh kbb_v[as=smp,vc=smp]
*** crowd_v together
->amh 'gW_r_v[as=smp,vc=ps]
->amh 'gW_r_v[as=smp,vc=smp]
*** crucify_v
->amh sql_v[as=smp,vc=smp]
*** crumble_v
->amh n'd_v[as=smp,vc=smp]
->amh frfr_v[as=smp,vc=ps]
->amh ftft_v[as=smp,vc=smp]
->amh n|ktkt_v[as=rc,vc=ps]
->amh frfr_v[as=smp,vc=smp]
*** crunch_v
->amh qWrTm_v[as=smp,vc=smp]
*** crush_v
->amh gWrb_v[as=smp,vc=smp]
->amh fC*_v[as=smp,vc=smp]
->amh xkxk_v[as=smp,vc=ps]
->amh Cflq_v[as=smp,vc=smp]
->amh damT_v[as=smp,vc=smp]
*** cry_v
->amh nfrq_v[as=rc,vc=ps]
->amh lqs_v[as=smp,vc=tr]
->amh Cwh_v[as=smp,vc=smp]
->amh nb'_v[as=smp,vc=smp]
*** cry_v out
->amh Cwh_v[as=smp,vc=smp]
*** cultivate_v
->amh 'rs_v[as=smp,vc=ps]
->amh kW't_v[as=smp,vc=smp]
*** cup_v
->amh 'gm_v[as=smp,vc=smp]
*** curdle_v
->amh rg'_v[as=smp,vc=tr]
*** cure_v
->amh fw_s_v[as=smp,vc=smp]
->amh d'n_v[as=smp,vc=tr]
*** curry_v favour
->amh lm_T_v[as=it,vc=ps]
->amh gWbgWb_v[as=smp,vc=tr]
->amh tWftWf_v[as=smp,vc=tr]
*** curse_v
->amh rgm_v[as=smp,vc=smp]
->amh rgm_v[as=rc,vc=ps]
*** curtain_v off
->amh gard_v[as=smp,vc=smp]
*** curve_v
->amh Tmm_v[as=smp,vc=smp]
*** curve_v down
->amh zmm_v[as=smp,vc=smp]
->amh zmm_v[as=smp,vc=cs]
*** cut_v
->amh gWrd_v[as=smp,vc=smp]
->amh qWrT_v[as=smp,vc=smp]
->amh bT'_v[as=smp,vc=smp]
->amh Crgd_v[as=smp,vc=smp]
*** cut_v away
->amh znTf_v[as=smp,vc=smp]
->amh znTl_v[as=smp,vc=smp]
*** cut_v back
->amh gaTT_v[as=smp,vc=smp]
*** cut_v badly
->amh gaTT_v[as=smp,vc=smp]
*** cut_v down
->amh gnds_v[as=smp,vc=smp]
->amh CfCf_v[as=smp,vc=smp]
*** cut_v hair
->amh krkm_v[as=smp,vc=smp]
*** cut_v off
->amh qnTb_v[as=smp,vc=smp]
->amh qWmT_v[as=smp,vc=smp]
*** cut_v open
->amh znTl_v[as=smp,vc=smp]
*** cut_v out
->amh qdd_v[as=smp,vc=smp]
*** cut_v short
->amh 'Tr_v[as=smp,vc=cs]
*** dam_v
->amh gd_b_v[as=smp,vc=smp]
*** damage_v
->amh gWd'_v[as=smp,vc=smp]
->amh blax*_v[as=smp,vc=tr]
->amh gWd'_v[as=smp,vc=ps]
*** dampen_v
->amh rTb_v[as=smp,vc=tr]
*** dance_v
->amh Cf_r_v[as=smp,vc=smp]
->amh dl_q_v[as=smp,vc=ps]
->amh dn_s_v[as=smp,vc=smp]
*** dare_v
->amh dfr_v[as=smp,vc=smp]
*** darken_v
->amh TqWr_v[as=smp,vc=tr]
*** darken_v completely
->amh ksl_v[as=smp,vc=tr]
*** dash_v
->amh lg_'_v[as=rc,vc=tr]
->amh n|drdr_v[as=smp,vc=ps]
*** dash_v off
->amh ftlk_v[as=smp,vc=ps]
*** daub_v
->amh lqlq_v[as=smp,vc=smp]
->amh mrg_v[as=smp,vc=smp]
->amh mrg_v[as=smp,vc=ps]
*** dawdle_v
->amh lg_m_v[as=smp,vc=smp]
*** dawn_v
->amh ng'_v[as=smp,vc=smp]
*** daze_v
->amh fzz_v[as=smp,vc=tr]
*** dazzle_v
->amh C|brbr_v[as=smp,vc=tr]
*** deafen_v
->amh dnqWr_v[as=smp,vc=tr]
*** debase_v
->amh rks_v[as=smp,vc=tr]
*** debate_v contended
->amh krkr_v[as=rc,vc=ps]
*** decant_v
->amh qrr_v[as=smp,vc=tr]
*** decapitate_v
->amh ql'_v[as=smp,vc=smp]
*** deceive_v
->amh tall_v[as=smp,vc=tr]
->amh mt'_v[as=it,vc=tr]
->amh wnbd_v[as=it,vc=ps]
->amh xf_T_v[as=smp,vc=smp]
*** decide_v
->amh ws_n_v[as=smp,vc=smp]
->amh qWrT_v[as=smp,vc=cs]
*** decipher_v
->amh ft'_v[as=smp,vc=smp]
*** declare_v
->amh 'wq_v[as=smp,vc=tr]
*** declare_v untrue
->amh 'bl_v[as=it,vc=tr]
*** decorate_v
->amh zy_n_v[as=smp,vc=smp]
->amh xl_m_v[as=smp,vc=smp]
*** decorate_v over-elaborately
->amh xl_m_v[as=it,vc=smp]
*** decrease_v
->amh gWdl_v[as=smp,vc=tr]
->amh qn_s_v[as=smp,vc=smp]
*** decrease_v slightly
->amh qn_s_v[as=it,vc=smp]
*** decree_v by-law
->amh dngg_v[as=smp,vc=smp]
*** deepen_v
->amh gWdgWd_v[as=smp,vc=tr]
*** defecate_v
->amh 'r'_v[as=smp,vc=smp]
*** defend_v
->amh klkl_v[as=rc,vc=ps]
*** defend_v oneself
->amh mk_t_v[as=smp,vc=smp]
*** defile_v
->amh rks_v[as=smp,vc=tr]
*** deform_v
->amh Cramd_v[as=smp,vc=tr]
->amh Cramm_v[as=smp,vc=tr]
->amh blax*_v[as=smp,vc=tr]
->amh Tmm_v[as=smp,vc=smp]
*** delay_v
->amh qr*_v[as=smp,vc=cs]
->amh gWt_t_v[as=rc,vc=ps]
->amh zgy*_v[as=smp,vc=cs]
->amh qWy_*_v[as=smp,vc=tr]
*** delegate_v
->amh wk_l_v[as=smp,vc=smp]
*** deliver_v
->amh drs_v[as=smp,vc=tr]
->amh wld_v[as=smp,vc=smp]
->amh rkb_v[as=smp,vc=cs]
*** delouse_v
->amh qml_v[as=smp,vc=smp]
*** delude_v
->amh wnbd_v[as=rc,vc=tr]
->amh wnbd_v[as=rc,vc=ps]
*** demand_v
->amh Ty_q_v[as=smp,vc=smp]
*** demarcate_v
->amh ws_n_v[as=rc,vc=ps]
->amh ws_n_v[as=rc,vc=tr]
->amh kl_l_v[as=rc,vc=ps]
*** demean_v oneself
->amh gWbdd_v[as=smp,vc=tr]
*** demolish_v
->amh n'd_v[as=smp,vc=smp]
->amh n'd_v[as=smp,vc=ps]
*** demolish_v sunk
->amh drsm_v[as=smp,vc=smp]
*** demonstrate_v
->amh 'y*_v[as=smp,vc=cs]
*** denigrate_v
->amh mnCq_v[as=rc,vc=tr]
->amh mnCq_v[as=it,vc=tr]
*** dent_v
->amh crcm_v[as=smp,vc=smp]
*** denude_v
->amh raqWt_v[as=smp,vc=tr]
*** deny_v
->amh 'bl_v[as=it,vc=tr]
->amh kd'_v[as=smp,vc=smp]
->amh k'd_v[as=smp,vc=smp]
->amh 'bl_v[as=smp,vc=smp]
->amh nfg_v[as=smp,vc=smp]
*** deny_v falsely
->amh xf_T_v[as=smp,vc=smp]
*** deplore_v
->amh 'zn_v[as=smp,vc=smp]
*** depress_v
->amh sgW_d_v[as=smp,vc=smp]
->amh n|Trzz_v[as=smp,vc=ps]
->amh db_t_v[as=smp,vc=smp]
*** deride_v
->amh xwf_v[as=smp,vc=cs]
->amh zb_t_v[as=it,vc=ps]
->amh zb_t_v[as=smp,vc=smp]
->amh fyz_v[as=smp,vc=tr]
->amh xrdd_v[as=smp,vc=smp]
*** descend_v
->amh wrd_v[as=smp,vc=smp]
*** descend_v gradually
->amh wrd_v[as=it,vc=smp]
*** desert_v
->amh kd'_v[as=smp,vc=smp]
->amh frTT_v[as=smp,vc=smp]
*** design_v
->amh 'q_d_v[as=smp,vc=smp]
*** desire_v
->amh fl_g_v[as=smp,vc=smp]
->amh wdd_v[as=smp,vc=smp]
->amh fl_g_v[as=smp,vc=ps]
*** desire_v eagerly
->amh gWmj*_v[as=smp,vc=smp]
*** despise_v
->amh wrd_v[as=rc,vc=tr]
->amh n'q_v[as=smp,vc=ps]
->amh wr_f_v[as=smp,vc=smp]
*** destroy_v
->amh dmss_v[as=smp,vc=smp]
->amh fls_v[as=rc,vc=tr]
->amh frs_v[as=it,vc=tr]
->amh wdm_v[as=smp,vc=tr]
*** detach_v
->amh ly_*_v[as=it,vc=tr]
->amh gnTl_v[as=smp,vc=smp]
*** detain_v
->amh zgy*_v[as=smp,vc=cs]
->amh qWy_*_v[as=smp,vc=tr]
*** deteriorate_v
->amh b's_v[as=smp,vc=smp]
->amh blax*_v[as=smp,vc=ps]
*** develop_v
->amh lm'_v[as=smp,vc=tr]
->amh dabr_v[as=smp,vc=tr]
->amh sf'_v[as=it,vc=ps]
->amh drj*_v[as=smp,vc=smp]
->amh drj*_v[as=rc,vc=tr]
->amh qn'_v[as=smp,vc=tr]
->amh gWlms_v[as=smp,vc=smp]
->amh 'Tb_v[as=smp,vc=smp]
*** develop_v ears
->amh zrzr_v[as=smp,vc=smp]
*** develop_v physically
->amh 'dg_v[as=smp,vc=smp]
*** develop_v shoots
->amh qWTqWT_v[as=smp,vc=tr]
*** devise_v
->amh fTr_v[as=smp,vc=smp]
*** devour_v
->amh gWamT_v[as=smp,vc=tr]
*** die_v
->amh mwt_v[as=smp,vc=smp]
*** die_v prematurely
->amh qTf_v[as=smp,vc=ps]
*** die_v suddenly
->amh df'_v[as=smp,vc=ps]
*** differentiate_v
->amh ly_*_v[as=smp,vc=smp]
*** dig_v
->amh qWf_r_v[as=smp,vc=smp]
*** digest_v
->amh bl'_v[as=it,vc=tr]
*** dilute_v
->amh kl_s_v[as=smp,vc=smp]
->amh qTn_v[as=smp,vc=tr]
*** dim_v
->amh qn_s_v[as=smp,vc=smp]
*** diminish_v
->amh gWdl_v[as=smp,vc=tr]
->amh qn_s_v[as=smp,vc=smp]
->amh gWdl_v[as=smp,vc=smp]
->amh 'ns_v[as=smp,vc=smp]
*** dip_v
->amh zf_q_v[as=smp,vc=ps]
->amh dfq_v[as=smp,vc=smp]
*** dip_v out
->amh Cl_f_v[as=smp,vc=smp]
*** dip_v soaked
->amh zf_q_v[as=smp,vc=smp]
*** direct_v
->amh 'lf_v[as=it,vc=tr]
*** direct_v at
->amh snzr_v[as=smp,vc=smp]
*** disagree_v
->amh frs_v[as=rc,vc=ps]
*** disappear_v
->amh Tf'_v[as=smp,vc=smp]
->amh qlT_v[as=smp,vc=smp]
*** disarrange_v
->amh msaql_v[as=it,vc=tr]
->amh mnqr_v[as=it,vc=smp]
->amh qfrr_v[as=smp,vc=smp]
*** discard_v
->amh wg_d_v[as=smp,vc=cs]
->amh T'l_v[as=smp,vc=smp]
*** disclose_v
->amh glS_v[as=it,vc=smp]
*** discover_v
->amh gN*_v[as=smp,vc=tr]
*** discuss_v together
->amh mkr_v[as=it,vc=ps]
*** disdain_v
->amh n|qWaxx_v[as=smp,vc=tr]
*** disgrace_v
->amh 'fr_v[as=smp,vc=cs]
*** disgust_v
->amh Tl'_v[as=smp,vc=cs]
->amh n|gfgf_v[as=smp,vc=tr]
*** dishonour_v
->amh wrd_v[as=rc,vc=tr]
*** dislike_v
->amh r'q_v[as=smp,vc=tr]
->amh Ty_f_v[as=it,vc=tr]
->amh Tl'_v[as=smp,vc=smp]
*** dislike_v greatly
->amh n|gxgx_v[as=smp,vc=ps]
*** dismantle_v
->amh ly_*_v[as=it,vc=smp]
->amh ft'_v[as=it,vc=smp]
->amh wlq_v[as=smp,vc=tr]
*** dismantle_v completely
->amh wlq_v[as=it,vc=tr]
*** dismount_v
->amh ft'_v[as=it,vc=smp]
->amh wrd_v[as=smp,vc=smp]
*** disperse_v
->amh bt_n_v[as=it,vc=tr]
->amh bt_n_v[as=it,vc=ps]
->amh bt_n_v[as=smp,vc=smp]
->amh mnqr_v[as=smp,vc=smp]
*** display_v
->amh 'y*_v[as=smp,vc=cs]
*** displease_v
->amh kf'_v[as=smp,vc=cs]
*** dispossess_v
->amh 'T'_v[as=smp,vc=cs]
->amh nql_v[as=smp,vc=smp]
*** dispute_v
->amh mWg_t_v[as=smp,vc=smp]
->amh CqCq_v[as=rc,vc=ps]
->amh Tl'_v[as=rc,vc=ps]
->amh mWg_t_v[as=rc,vc=ps]
*** disrupt_v
->amh ng'_v[as=rc,vc=tr]
->amh fls_v[as=rc,vc=tr]
->amh qaws_v[as=smp,vc=tr]
->amh ng'_v[as=rc,vc=ps]
*** distinguish_v
->amh ly_*_v[as=smp,vc=smp]
*** distort_v
->amh Tmm_v[as=rc,vc=tr]
->amh zb'_v[as=rc,vc=tr]
->amh Tmm_v[as=rc,vc=ps]
*** distort_v completely
->amh wlagd_v[as=it,vc=tr]
*** distract_v
->amh rs'_v[as=it,vc=tr]
*** distribute_v
->amh kfl_v[as=rc,vc=tr]
->amh kfl_v[as=it,vc=tr]
->amh kfl_v[as=it,vc=smp]
->amh drs_v[as=rc,vc=tr]
->amh 'd_l_v[as=smp,vc=smp]
*** distribute_v land
->amh mr'_v[as=smp,vc=smp]
*** distribute_v sufficiently
->amh bq'_v[as=it,vc=tr]
*** disturb_v
->amh trams_v[as=smp,vc=tr]
->amh rb_x_v[as=smp,vc=smp]
->amh bsaC*_v[as=smp,vc=ps]
->amh dfrs_v[as=smp,vc=tr]
->amh k|lflf_v[as=smp,vc=tr]
->amh bsaC*_v[as=smp,vc=tr]
->amh 'w_k_v[as=smp,vc=smp]
->amh qWrT_v[as=rc,vc=tr]
*** dive_v
->amh Tlq_v[as=smp,vc=smp]
*** divest_v
->amh gff_v[as=smp,vc=smp]
*** divide_v
->amh kfl_v[as=smp,vc=smp]
->amh ly_*_v[as=smp,vc=smp]
->amh kfl_v[as=rc,vc=ps]
->amh kfl_v[as=it,vc=smp]
->amh kfl_v[as=rc,vc=tr]
*** divide_v up
->amh xnxn_v[as=smp,vc=smp]
->amh kfl_v[as=it,vc=smp]
*** divorce_v
->amh ft'_v[as=smp,vc=smp]
->amh ft'_v[as=rc,vc=tr]
*** do_v
->amh drg_v[as=smp,vc=tr]
->amh sr'_v[as=smp,vc=smp]
*** do_v again
->amh dgm_v[as=smp,vc=smp]
*** do_v carpentry
->amh 'nT_v[as=smp,vc=smp]
*** do_v loosely
->amh wx_l_v[as=smp,vc=smp]
*** do_v regularly
->amh zwtr_v[as=smp,vc=cs]
*** do_v slovenly
->amh wx_l_v[as=smp,vc=smp]
*** do_v well
->amh bj_*_v[as=smp,vc=tr]
->amh smr_v[as=smp,vc=tr]
*** do_v wrong
->amh Tf'_v[as=smp,vc=tr]
->amh bd_l_v[as=smp,vc=smp]
*** dominate_v
->amh gz'_v[as=smp,vc=smp]
*** domineer_v
->amh CqW_n_v[as=smp,vc=smp]
*** donate_v
->amh darg_v[as=smp,vc=smp]
->amh rz_q_v[as=smp,vc=smp]
*** double_v
->amh 'Tf_v[as=smp,vc=ps]
->amh 'Tf_v[as=smp,vc=smp]
*** doubt_v
->amh mnt'_v[as=smp,vc=tr]
*** doze_v
->amh xl_b_v[as=smp,vc=cs]
*** draft_v
->amh rqq_v[as=smp,vc=tr]
*** drag_v
->amh gWt_t_v[as=smp,vc=smp]
->amh gWt_t_v[as=smp,vc=ps]
*** drain_v
->amh Tff_v[as=smp,vc=tr]
*** draw_v
->amh s'l_v[as=smp,vc=smp]
*** draw_v back
->amh fgfg_v[as=smp,vc=tr]
*** draw_v close
->amh Tg'_v[as=smp,vc=ps]
*** draw_v out
->amh mzmz_v[as=smp,vc=smp]
*** draw_v tight
->amh xmqq_v[as=smp,vc=smp]
*** draw_v toward
->amh gWt_t_v[as=smp,vc=smp]
*** draw_v up
->amh tlm_v[as=smp,vc=smp]
*** draw_v water
->amh qd'_v[as=smp,vc=smp]
*** dream_v
->amh 'lm_v[as=smp,vc=smp]
*** drench_v
->amh r's_v[as=smp,vc=tr]
*** dress_v
->amh lbs_v[as=smp,vc=smp]
*** dress_v elegantly
->amh kWf_s_v[as=smp,vc=ps]
*** dress_v showily
->amh m|nxnx_v[as=smp,vc=ps]
*** dribble_v
->amh z|rbrb_v[as=smp,vc=ps]
->amh n|TbTb_v[as=rc,vc=tr]
->amh z|rbrb_v[as=smp,vc=tr]
->amh n|TbTb_v[as=rc,vc=ps]
*** drift_v
->amh n|saff_v[as=smp,vc=ps]
*** drill_v
->amh rgT_v[as=smp,vc=cs]
->amh bs'_v[as=smp,vc=ps]
*** drink_v
->amh TT_'_v[as=smp,vc=smp]
*** drink_v down
->amh qndb_v[as=smp,vc=smp]
*** drink_v greedily
->amh mgmg_v[as=smp,vc=smp]
*** drink_v off
->amh qndb_v[as=smp,vc=smp]
*** drink_v up
->amh n|qarr_v[as=smp,vc=tr]
*** drip_v
->amh n|TfTf_v[as=smp,vc=ps]
->amh nTb_v[as=smp,vc=smp]
->amh n|TbTb_v[as=smp,vc=tr]
->amh n|TbTb_v[as=rc,vc=ps]
->amh n|TfTf_v[as=smp,vc=tr]
->amh n|TbTb_v[as=smp,vc=ps]
*** drip_v dry
->amh n|TfTf_v[as=smp,vc=tr]
*** drip_v out
->amh rzrz_v[as=smp,vc=smp]
*** drive_v
->amh n|qsaqs_v[as=smp,vc=tr]
->amh x|krkr_v[as=smp,vc=tr]
->amh nd'_v[as=smp,vc=smp]
*** drive_v away
->amh brr_v[as=rc,vc=tr]
->amh wT'_v[as=smp,vc=cs]
*** drive_v crazy
->amh 'bd_v[as=smp,vc=cs]
*** drive_v downhill
->amh df'_v[as=rc,vc=tr]
*** drizzle_v
->amh k'f'_v[as=smp,vc=tr]
*** drop_v
->amh T'l_v[as=smp,vc=smp]
->amh tw_v[as=smp,vc=smp]
->amh rgf_v[as=smp,vc=smp]
*** drop_v off
->amh qzqz_v[as=smp,vc=smp]
->amh z|rfrf_v[as=smp,vc=ps]
*** dry_v
->amh kc_r_v[as=smp,vc=smp]
->amh ksm_v[as=smp,vc=tr]
->amh ksm_v[as=smp,vc=smp]
*** dry_v out
->amh drq_v[as=smp,vc=smp]
*** dry_v up
->amh nTf_v[as=smp,vc=smp]
->amh 'r_T_v[as=smp,vc=smp]
*** dull_v
->amh Tr_s_v[as=smp,vc=tr]
->amh dd_b_v[as=smp,vc=tr]
->amh dn_z_v[as=smp,vc=tr]
->amh dnqWr_v[as=smp,vc=tr]
*** dump_v
->amh gxr_v[as=smp,vc=smp]
*** dunk_v
->amh Tqs_v[as=smp,vc=tr]
->amh dfq_v[as=smp,vc=smp]
*** dust_v
->amh wr'_v[as=rc,vc=tr]
*** dye_v
->amh qlm_v[as=smp,vc=tr]
*** earn_v
->amh gN*_v[as=smp,vc=tr]
->amh ksb_v[as=smp,vc=smp]
*** ease_v off
->amh l'l'_v[as=smp,vc=tr]
*** eat_v
->amh bl'_v[as=smp,vc=smp]
->amh mg_b_v[as=smp,vc=ps]
*** eat_v up
->amh fj*_v[as=smp,vc=smp]
->amh Cr_s_v[as=smp,vc=smp]
*** eavesdrop_v
->amh lT_f_v[as=smp,vc=ps]
*** echo_v
->amh gb'_v[as=rc,vc=cs]
*** edit_v
->amh qnbr_v[as=it,vc=tr]
*** elaborate_v
->amh br'_v[as=it,vc=ps]
->amh br'_v[as=it,vc=tr]
*** eliminate_v
->amh wg_d_v[as=smp,vc=cs]
*** elope_v
->amh kx_n_v[as=smp,vc=smp]
*** elucidate_v
->amh br'_v[as=it,vc=tr]
*** emasculate_v
->amh kWlax*_v[as=smp,vc=tr]
->amh kWlax*_v[as=smp,vc=ps]
*** embarrass_v
->amh sq_q_v[as=smp,vc=cs]
->amh 'fr_v[as=smp,vc=cs]
*** embellish_v
->amh qb_'_v[as=it,vc=smp]
->amh zy_n_v[as=smp,vc=smp]
*** embezzle_v
->amh C|brbr_v[as=smp,vc=ps]
->amh C|brbr_v[as=smp,vc=tr]
*** embolden_v
->amh dfr_v[as=it,vc=tr]
->amh jgn_v[as=rc,vc=tr]
*** embrace_v
->amh 'qf_v[as=smp,vc=smp]
*** embroider_v
->amh Tlf_v[as=smp,vc=smp]
->amh zmzm_v[as=smp,vc=smp]
*** emphasize_v
->amh Tnkr_v[as=rc,vc=tr]
*** employ_v
->amh qTr_v[as=smp,vc=smp]
->amh glgl_v[as=smp,vc=ps]
*** empty_v
->amh zrgf_v[as=smp,vc=smp]
*** empty_v completely
->amh zkzk_v[as=smp,vc=smp]
*** empty_v out
->amh gWlgWl_v[as=smp,vc=smp]
->amh cl_s_v[as=smp,vc=smp]
*** encircle_v
->amh kbb_v[as=smp,vc=smp]
*** encompass_v
->amh kbb_v[as=smp,vc=smp]
*** encourage_v
->amh dfr_v[as=it,vc=tr]
->amh brt'_v[as=smp,vc=tr]
->amh ns'_v[as=it,vc=tr]
*** end_v
->amh kt_m_v[as=smp,vc=tr]
->amh Cr_s_v[as=smp,vc=smp]
->amh dmdm_v[as=smp,vc=smp]
*** endeavour_v
->amh T'r_v[as=it,vc=ps]
*** endorse_v
->amh fr_m_v[as=smp,vc=smp]
*** endow_v
->amh gWl_t_v[as=smp,vc=smp]
*** enfeeble_v
->amh qWrqWz_v[as=smp,vc=tr]
->amh n|Trawz_v[as=smp,vc=tr]
*** engender_v
->amh wld_v[as=smp,vc=smp]
*** enjoy_v eating
->amh nfnf_v[as=smp,vc=smp]
*** enjoy_v oneself
->amh ds_t_v[as=smp,vc=ps]
*** enlighten_v
->amh rd'_v[as=smp,vc=cs]
*** enliven_v
->amh dmq_v[as=rc,vc=tr]
->amh mwq_v[as=it,vc=tr]
->amh dmq_v[as=smp,vc=tr]
*** enrage_v
->amh ndd_v[as=rc,vc=tr]
->amh qWT'_v[as=smp,vc=cs]
->amh bgn_v[as=smp,vc=tr]
->amh qWT'_v[as=smp,vc=ps]
*** enrich_v
->amh dabr_v[as=smp,vc=tr]
*** entail_v
->amh Ty_q_v[as=smp,vc=smp]
*** entangle_v
->amh qWl_f_v[as=it,vc=tr]
->amh Tlf_v[as=smp,vc=smp]
->amh wnkr_v[as=smp,vc=smp]
->amh wnkr_v[as=rc,vc=tr]
*** enter_v
->amh gb'_v[as=smp,vc=smp]
*** entertain_v
->amh Cawt_v[as=smp,vc=tr]
->amh nagd_v[as=smp,vc=cs]
->amh ds_t_v[as=smp,vc=cs]
->amh zn'_v[as=it,vc=tr]
*** entertain_v royally
->amh qmaTl_v[as=smp,vc=tr]
*** entomb_v
->amh qbr_v[as=smp,vc=smp]
*** entreat_v
->amh lm_T_v[as=it,vc=ps]
*** entwine_v
->amh gm_d_v[as=smp,vc=smp]
*** enumerate_v
->amh zrzr_v[as=smp,vc=smp]
->amh drdr_v[as=smp,vc=smp]
*** equalize_v
->amh 'k_l_v[as=it,vc=tr]
*** eradicate_v
->amh Tf'_v[as=smp,vc=tr]
*** erect_v
->amh qwm_v[as=it,vc=tr]
*** erode_v
->amh xrxr_v[as=smp,vc=smp]
->amh bWrbWr_v[as=smp,vc=smp]
->amh 'Tb_v[as=smp,vc=smp]
*** err_v
->amh s't_v[as=it,vc=ps]
->amh s't_v[as=smp,vc=smp]
*** erupt_v
->amh kWfkWf_v[as=smp,vc=smp]
->amh fkfk_v[as=smp,vc=tr]
->amh fnd'_v[as=smp,vc=smp]
*** escape_v
->amh mlT_v[as=smp,vc=tr]
*** escort_v
->amh 'j_b_v[as=smp,vc=smp]
*** establish_v
->amh msrt_v[as=smp,vc=smp]
->amh qWrqWr_v[as=smp,vc=smp]
->amh qwm_v[as=it,vc=tr]
->amh msrt_v[as=smp,vc=ps]
*** establish_v procedures
->amh dnb'_v[as=smp,vc=smp]
*** estimate_v
->amh gm_t_v[as=smp,vc=smp]
*** evaluate_v
->amh tm_n_v[as=smp,vc=smp]
->amh gm_t_v[as=smp,vc=ps]
->amh gmgm_v[as=smp,vc=smp]
->amh mz_n_v[as=it,vc=tr]
->amh gm_t_v[as=smp,vc=smp]
*** evict_v
->amh nql_v[as=smp,vc=smp]
*** exaggerate_v
->amh ngs_v[as=rc,vc=tr]
->amh dnq_v[as=rc,vc=tr]
->amh gnn_v[as=rc,vc=tr]
*** exalt_v
->amh fnTz_v[as=smp,vc=smp]
*** examine_v
->amh ft_n_v[as=smp,vc=ps]
->amh ft_n_v[as=smp,vc=smp]
->amh mrmr_v[as=smp,vc=smp]
*** exceed_v
->amh blT_v[as=smp,vc=smp]
->amh bz'_v[as=smp,vc=smp]
*** excel_v
->amh l'q_v[as=smp,vc=smp]
*** exchange_v
->amh lw_T_v[as=smp,vc=ps]
->amh lw_T_v[as=it,vc=ps]
->amh lw_T_v[as=smp,vc=smp]
*** exchange_v presents
->amh xl_m_v[as=it,vc=ps]
*** exclude_v
->amh qr*_v[as=smp,vc=cs]
*** excrete_v
->amh 'r'_v[as=smp,vc=smp]
->amh kWs'_v[as=smp,vc=smp]
*** execute_v
->amh fS_m_v[as=smp,vc=cs]
*** exhale_v
->amh tnfs_v[as=smp,vc=smp]
*** exhaust_v
->amh dkm_v[as=rc,vc=tr]
->amh nbz_v[as=smp,vc=smp]
->amh z'l_v[as=smp,vc=cs]
*** exhibit_v
->amh 'y*_v[as=smp,vc=cs]
*** exile_v
->amh g'z_v[as=smp,vc=tr]
*** exist_v
->amh nbr_v[as=smp,vc=smp]
*** expand_v
->amh sf'_v[as=it,vc=ps]
*** expand_v stretched
->amh lT_T_v[as=smp,vc=smp]
*** expect_v
->amh fl_g_v[as=smp,vc=smp]
->amh Tb_q_v[as=it,vc=ps]
*** experiment_v
->amh ft_n_v[as=smp,vc=smp]
*** explain_v
->amh rd'_v[as=smp,vc=cs]
->amh glS_v[as=smp,vc=smp]
->amh br'_v[as=it,vc=tr]
*** explode_v
->amh fnd'_v[as=smp,vc=tr]
->amh nbW_C_v[as=smp,vc=smp]
->amh fnd'_v[as=smp,vc=smp]
*** exploit_v
->amh bzbz_v[as=smp,vc=smp]
->amh mzbr_v[as=smp,vc=smp]
*** expose_v
->amh glS_v[as=it,vc=smp]
->amh glS_v[as=rc,vc=tr]
*** extend_v
->amh zrg'_v[as=smp,vc=smp]
*** exterminate_v
->amh Tf'_v[as=smp,vc=tr]
->amh fj*_v[as=smp,vc=smp]
->amh dmss_v[as=smp,vc=smp]
->amh dmss_v[as=smp,vc=ps]
->amh CfCf_v[as=smp,vc=smp]
->amh Cr_s_v[as=smp,vc=smp]
*** extinguish_v
->amh trkWs_v[as=smp,vc=ps]
->amh Tf'_v[as=smp,vc=tr]
*** extract_v
->amh qsm_v[as=smp,vc=smp]
*** fade_v
->amh dbzz_v[as=smp,vc=smp]
->amh dbzz_v[as=smp,vc=tr]
->amh Twlg_v[as=smp,vc=smp]
->amh ksm_v[as=smp,vc=tr]
->amh ksm_v[as=smp,vc=smp]
*** fail_v
->amh CngWl_v[as=rc,vc=ps]
->amh s'n_v[as=smp,vc=ps]
->amh fWrx_v[as=smp,vc=smp]
->amh Cngf_v[as=rc,vc=ps]
*** faint_v
->amh z|lflf_v[as=smp,vc=ps]
*** fall_v
->amh rgf_v[as=smp,vc=smp]
->amh wdq_v[as=smp,vc=smp]
*** fall_v apart
->amh f|rkrk_v[as=smp,vc=ps]
->amh frs_v[as=smp,vc=smp]
*** fall_v asleep
->amh n|qlaf'_v[as=smp,vc=tr]
*** fall_v down
->amh wdq_v[as=smp,vc=smp]
*** fall_v flat
->amh df'_v[as=smp,vc=ps]
->amh zgrr_v[as=smp,vc=ps]
*** fall_v heavily
->amh dq'_v[as=smp,vc=smp]
*** fall_v short
->amh gWdl_v[as=smp,vc=smp]
*** fall_v unconscious
->amh z|lflf_v[as=smp,vc=ps]
*** falter_v
->amh dnaqf_v[as=smp,vc=ps]
*** fan_v
->amh rgb_v[as=rc,vc=tr]
*** fan_v oneself
->amh r|gbgb_v[as=smp,vc=tr]
*** fart_v
->amh zrT_v[as=smp,vc=cs]
->amh fs'_v[as=smp,vc=smp]
*** fast_v
->amh kfl_v[as=smp,vc=tr]
->amh Swm_v[as=smp,vc=smp]
*** fasten_v
->amh Tbq_v[as=smp,vc=tr]
*** fatigue_v
->amh dkm_v[as=rc,vc=tr]
->amh dkm_v[as=smp,vc=tr]
->amh Twlg_v[as=smp,vc=smp]
->amh dakr_v[as=smp,vc=smp]
->amh lf'_v[as=smp,vc=tr]
*** fatten_v
->amh sb'_v[as=smp,vc=cs]
->amh wd_l_v[as=smp,vc=tr]
->amh dlb_v[as=smp,vc=tr]
->amh wf_r_v[as=smp,vc=tr]
*** fatten_v up
->amh mWk_t_v[as=smp,vc=smp]
->amh mWk_t_v[as=smp,vc=ps]
*** favour_v
->amh blT_v[as=it,vc=tr]
->amh dg_f_v[as=smp,vc=smp]
*** fear_v
->amh fr'_v[as=smp,vc=smp]
*** feed_v
->amh bl'_v[as=smp,vc=cs]
->amh bl'_v[as=smp,vc=tr]
->amh mg_b_v[as=smp,vc=smp]
*** feel_v
->amh dabs_v[as=smp,vc=smp]
*** feel_v anxious
->amh b'b'_v[as=smp,vc=smp]
*** feel_v aroused
->amh xafd_v[as=smp,vc=smp]
*** feel_v better
->amh x'l_v[as=smp,vc=ps]
*** feel_v confident
->amh zng'_v[as=rc,vc=ps]
*** feel_v disgusted
->amh n|gxgx_v[as=smp,vc=ps]
*** feel_v faint
->amh s|lmlm_v[as=smp,vc=ps]
*** feel_v giddy
->amh T|wlwl_v[as=smp,vc=tr]
*** feel_v nauseated
->amh q|lxlx_v[as=smp,vc=tr]
*** feel_v nostalgia
->amh nafq_v[as=smp,vc=smp]
*** feel_v regret
->amh qWC_*_v[as=smp,vc=ps]
*** feel_v remorse
->amh qWC_*_v[as=smp,vc=ps]
*** feel_v sick
->amh q|lxlx_v[as=smp,vc=tr]
*** feel_v uncertain
->amh q'm_v[as=it,vc=ps]
*** feel_v uneasy
->amh sq_q_v[as=smp,vc=smp]
*** fence_v
->amh grgd_v[as=smp,vc=smp]
*** fertilize_v
->amh dabr_v[as=smp,vc=tr]
*** fight_v
->amh wg'_v[as=rc,vc=ps]
->amh gdl_v[as=rc,vc=ps]
*** fight_v with
->amh Tl'_v[as=rc,vc=ps]
*** file_v
->amh mWr_d_v[as=smp,vc=smp]
->amh fy_l_v[as=smp,vc=smp]
*** fill_v out
->amh mWl'_v[as=smp,vc=smp]
*** fill_v up
->amh mWl'_v[as=it,vc=tr]
->amh dfn_v[as=smp,vc=smp]
->amh mWl'_v[as=smp,vc=smp]
*** filter_v
->amh Tr'_v[as=rc,vc=tr]
->amh Tl_l_v[as=smp,vc=tr]
*** find_v
->amh gN*_v[as=smp,vc=tr]
*** find_v fault
->amh nqf_v[as=smp,vc=smp]
*** find_v solace
->amh Sn'_v[as=it,vc=ps]
*** finish_v
->amh 'lq_v[as=smp,vc=smp]
->amh bq'_v[as=smp,vc=tr]
->amh Tnqq_v[as=rc,vc=tr]
->amh dmdm_v[as=smp,vc=smp]
->amh Cr_s_v[as=smp,vc=smp]
*** finish_v completed
->amh Cr_s_v[as=smp,vc=smp]
*** fire_v
->amh snbt_v[as=rc,vc=tr]
->amh tkW_s_v[as=smp,vc=smp]
->amh g'm_v[as=it,vc=tr]
*** fire_v unintentionally
->amh br_q_v[as=rc,vc=tr]
*** fit_v in
->amh gTm_v[as=smp,vc=smp]
*** fit_v together
->amh gTm_v[as=smp,vc=smp]
*** fix_v
->amh gTm_v[as=smp,vc=smp]
->amh Tg_n_v[as=smp,vc=smp]
*** flagellate_v
->amh grf_v[as=smp,vc=smp]
->amh grf_v[as=smp,vc=ps]
*** flake_v off
->amh qrf_v[as=it,vc=ps]
*** flame_v up
->amh f'm_v[as=it,vc=ps]
*** flare_v up
->amh n|bWgbWg_v[as=smp,vc=ps]
->amh n|blbl_v[as=smp,vc=tr]
->amh n|blbl_v[as=smp,vc=ps]
*** flatten_v
->amh lxlx_v[as=smp,vc=smp]
*** flatter_v
->amh dl_l_v[as=smp,vc=smp]
->amh dl_l_v[as=smp,vc=ps]
->amh qWlamT_v[as=smp,vc=tr]
->amh sbk_v[as=smp,vc=ps]
->amh sbk_v[as=smp,vc=smp]
*** flavour_v
->amh TafT_v[as=smp,vc=tr]
*** flick_v
->amh fnTr_v[as=smp,vc=smp]
*** flinch_v
->amh qW|lClC_v[as=smp,vc=tr]
*** flip_v
->amh fnTr_v[as=smp,vc=cs]
*** flip_v back
->amh fnTr_v[as=rc,vc=ps]
*** flirt_v
->amh dr'_v[as=rc,vc=ps]
*** flirt_v with
->amh s'q_v[as=it,vc=cs]
*** float_v
->amh sff_v[as=smp,vc=smp]
->amh n|saff_v[as=smp,vc=ps]
*** flock_v together
->amh n|g'g'_v[as=smp,vc=ps]
*** flood_v
->amh T|lqlq_v[as=smp,vc=tr]
*** flood_v in
->amh zrgf_v[as=smp,vc=ps]
*** flop_v around
->amh n|frafr_v[as=smp,vc=ps]
*** flop_v down
->amh n|zrfT_v[as=smp,vc=ps]
*** flounder_v
->amh f|CrCr_v[as=smp,vc=ps]
*** flourish_v
->amh sf'_v[as=it,vc=ps]
*** flow_v
->amh n|bWrqq_v[as=rc,vc=ps]
->amh n|bWrqq_v[as=smp,vc=ps]
*** flow_v abundantly
->amh n|ZqZq_v[as=smp,vc=ps]
*** flow_v slowly
->amh rzrz_v[as=smp,vc=smp]
*** flush_v
->amh cl_s_v[as=smp,vc=smp]
*** flush_v out
->amh qsqs_v[as=smp,vc=ps]
->amh qsqs_v[as=smp,vc=smp]
*** flutter_v
->amh r|gbgb_v[as=smp,vc=ps]
*** flutter_v about
->amh knf_v[as=smp,vc=smp]
*** fly_v
->amh brr_v[as=smp,vc=smp]
*** fly_v down
->amh n|Zrgg_v[as=smp,vc=ps]
*** fly_v shudderingly
->amh m|zgzg_v[as=smp,vc=tr]
*** foam_v
->amh kWrf_v[as=smp,vc=smp]
*** foil_v
->amh CngWl_v[as=smp,vc=tr]
->amh Cngf_v[as=rc,vc=tr]
*** fold_v
->amh 'Tf_v[as=it,vc=smp]
->amh Tm_r_v[as=rc,vc=tr]
->amh 'Tf_v[as=smp,vc=smp]
*** fold_v up
->amh 'Tf_v[as=it,vc=smp]
*** follow_v
->amh kt_l_v[as=smp,vc=ps]
*** fondle_v
->amh dabs_v[as=it,vc=smp]
*** fool_v
->amh mWN_*_v[as=smp,vc=tr]
->amh laC*_v[as=smp,vc=smp]
->amh 'rd_v[as=it,vc=ps]
*** forbid_v prohibited
->amh klkl_v[as=smp,vc=smp]
*** force_v
->amh gdd_v[as=smp,vc=cs]
*** force_v in
->amh brqs_v[as=smp,vc=smp]
->amh xnqr_v[as=smp,vc=smp]
->amh x'T_v[as=smp,vc=smp]
->amh s'g_v[as=smp,vc=smp]
->amh zrnq_v[as=smp,vc=smp]
->amh zrnq_v[as=smp,vc=ps]
*** force_v into
->amh snqr_v[as=smp,vc=smp]
*** foretell_v disaster
->amh mWart_v[as=smp,vc=tr]
*** forget_v
->amh zng'_v[as=smp,vc=smp]
->amh rs'_v[as=smp,vc=smp]
*** forgive_v
->amh m'r_v[as=smp,vc=smp]
*** forsake_v
->amh k'd_v[as=smp,vc=smp]
*** fortify_v
->amh Tnkr_v[as=smp,vc=tr]
*** foster_v
->amh 'dg_v[as=smp,vc=cs]
*** found_v
->amh msrt_v[as=smp,vc=smp]
*** found_v city
->amh kt_m_v[as=smp,vc=smp]
*** frequent_v
->amh zwtr_v[as=smp,vc=cs]
*** frighten_v
->amh fr'_v[as=smp,vc=cs]
->amh dngT_v[as=smp,vc=cs]
->amh brgg_v[as=smp,vc=cs]
->amh r'd_v[as=smp,vc=tr]
->amh dnbr_v[as=smp,vc=cs]
*** frighten_v extremely
->amh qzn_v[as=smp,vc=cs]
*** frighten_v quivered
->amh n|qTqT_v[as=smp,vc=tr]
*** frown_v
->amh Cfgg_v[as=smp,vc=smp]
->amh kWstr_v[as=rc,vc=ps]
*** frown_v at
->amh kWstr_v[as=rc,vc=ps]
*** fruit_v well
->amh n|drkk_v[as=smp,vc=ps]
*** frustrate_v
->amh nTb_v[as=rc,vc=tr]
*** fry_v
->amh Tbs_v[as=smp,vc=smp]
*** fuel_v
->amh magd_v[as=smp,vc=ps]
->amh magd_v[as=smp,vc=smp]
*** fumigate_v
->amh 'Tn_v[as=smp,vc=smp]
*** fuss_v about
->amh n|qZqZ_v[as=smp,vc=ps]
*** gabble_v
->amh qbajr_v[as=smp,vc=smp]
*** gallop_v furiously
->amh xmTT_v[as=smp,vc=smp]
*** gambol_v
->amh bWr_q_v[as=smp,vc=smp]
*** gash_v
->amh xrkt_v[as=it,vc=smp]
*** gather_v
->amh kmac*_v[as=smp,vc=tr]
->amh lqq_v[as=smp,vc=smp]
->amh kmac*_v[as=it,vc=tr]
->amh kmac*_v[as=smp,vc=ps]
->amh Trqm_v[as=rc,vc=ps]
->amh Trqm_v[as=rc,vc=tr]
->amh sbsb_v[as=smp,vc=smp]
->amh lqm_v[as=smp,vc=smp]
->amh kt_r_v[as=smp,vc=smp]
*** gather_v indiscriminately
->amh gss_v[as=rc,vc=tr]
*** gather_v randomly
->amh sbasb_v[as=smp,vc=smp]
*** gather_v together
->amh Trqm_v[as=it,vc=ps]
->amh mkr_v[as=rc,vc=ps]
*** gaze_v at
->amh tkWr_v[as=smp,vc=tr]
*** generate_v
->amh flq_v[as=smp,vc=tr]
*** genuflect_v
->amh sgd_v[as=smp,vc=smp]
*** germinate_v
->amh gWnqWl_v[as=smp,vc=smp]
->amh bql_v[as=smp,vc=smp]
->amh gWnqWl_v[as=smp,vc=tr]
*** get_v along
->amh sm'_v[as=it,vc=ps]
*** get_v better
->amh x'l_v[as=it,vc=ps]
*** get_v in
->amh gb'_v[as=smp,vc=smp]
*** get_v lost
->amh qabz_v[as=smp,vc=smp]
*** get_v off
->amh wrd_v[as=smp,vc=smp]
*** get_v permission
->amh fqd_v[as=smp,vc=cs]
*** get_v ready
->amh snad'_v[as=it,vc=ps]
*** get_v up
->amh ns'_v[as=smp,vc=ps]
->amh nq'_v[as=smp,vc=smp]
*** gird_v up
->amh 'Tq_v[as=smp,vc=ps]
->amh qn_t_v[as=smp,vc=smp]
*** give_v
->amh Z|gWdgWd_v[as=smp,vc=tr]
->amh Cm_r_v[as=smp,vc=smp]
->amh mTwt_v[as=smp,vc=smp]
->amh naN*_v[as=smp,vc=smp]
->amh sT*_v[as=smp,vc=smp]
*** give_v absolution
->amh ft'_v[as=smp,vc=smp]
*** give_v advice
->amh mkr_v[as=rc,vc=tr]
*** give_v appointment
->amh qTr_v[as=smp,vc=smp]
*** give_v back
->amh ml_s_v[as=smp,vc=smp]
*** give_v birth
->amh glagl_v[as=smp,vc=ps]
*** give_v change
->amh mnzr_v[as=smp,vc=smp]
*** give_v comfort
->amh Sn'_v[as=it,vc=tr]
*** give_v evidence
->amh Ty_q_v[as=smp,vc=tr]
*** give_v ground
->amh fgfg_v[as=smp,vc=tr]
*** give_v in
->amh bg_r_v[as=smp,vc=ps]
*** give_v loan
->amh bd_r_v[as=smp,vc=tr]
*** give_v rank
->amh xwm_v[as=smp,vc=smp]
*** give_v solace
->amh Sn'_v[as=it,vc=tr]
*** give_v uniformity
->amh 'k_l_v[as=it,vc=tr]
*** give_v up
->amh tw_v[as=smp,vc=smp]
*** glare_v
->amh T|brbr_v[as=smp,vc=tr]
->amh n|Sbarq_v[as=smp,vc=tr]
*** glare_v at
->amh glamT_v[as=smp,vc=ps]
->amh glamT_v[as=smp,vc=smp]
*** glean_v
->amh marr_v[as=smp,vc=smp]
->amh qarm_v[as=it,vc=smp]
*** glean_v grain
->amh qarm_v[as=smp,vc=smp]
*** glide_v
->amh n|xratt_v[as=smp,vc=ps]
*** glisten_v
->amh n|Sbarq_v[as=smp,vc=tr]
*** glitter_v
->amh b|lClC_v[as=smp,vc=ps]
->amh n|tgtg_v[as=smp,vc=tr]
->amh n|Sbarq_v[as=smp,vc=tr]
->amh b|rqrq_v[as=smp,vc=ps]
*** glow_v
->amh f'm_v[as=it,vc=ps]
->amh n|drkk_v[as=smp,vc=ps]
*** glow_v incandescently
->amh n|trkk_v[as=smp,vc=ps]
*** glue_v
->amh Tbq_v[as=rc,vc=tr]
*** gnash_v
->amh fC*_v[as=rc,vc=tr]
*** go_v
->amh hyd_v[as=smp,vc=smp]
*** go_v against
->amh qarn_v[as=smp,vc=ps]
*** go_v around
->amh zwr_v[as=smp,vc=smp]
->amh zwr_v[as=it,vc=ps]
*** go_v astray
->amh Tf'_v[as=smp,vc=smp]
->amh qbT_v[as=smp,vc=tr]
*** go_v away
->amh r'q_v[as=smp,vc=smp]
*** go_v behind
->amh lT_q_v[as=smp,vc=smp]
*** go_v blind
->amh 'w_r_v[as=smp,vc=ps]
*** go_v broke
->amh ksr_v[as=smp,vc=smp]
*** go_v cross-eyed
->amh n|xwarr_v[as=smp,vc=ps]
*** go_v disorderly
->amh g|tltl_v[as=smp,vc=ps]
*** go_v down
->amh qWlqWl_v[as=smp,vc=smp]
->amh wrd_v[as=smp,vc=smp]
->amh zq_T_v[as=smp,vc=cs]
*** go_v down-hill
->amh qWlqWl_v[as=smp,vc=tr]
*** go_v downwards
->amh qWlqWl_v[as=smp,vc=tr]
*** go_v dry
->amh nTf_v[as=smp,vc=smp]
*** go_v fast
->amh fTn_v[as=smp,vc=smp]
*** go_v forward
->amh gf'_v[as=smp,vc=ps]
*** go_v in
->amh gb'_v[as=smp,vc=smp]
*** go_v mad
->amh 'bd_v[as=smp,vc=smp]
*** go_v marketing
->amh gby*_v[as=smp,vc=smp]
*** go_v mouldy
->amh xagt_v[as=smp,vc=smp]
*** go_v out
->amh Tf'_v[as=smp,vc=smp]
*** go_v slack
->amh rgb_v[as=smp,vc=smp]
*** go_v through
->amh zlq_v[as=smp,vc=smp]
*** go_v towards
->amh mr'_v[as=smp,vc=tr]
*** go_v up
->amh wT'_v[as=smp,vc=smp]
*** go_v uphill
->amh xq_b_v[as=rc,vc=tr]
*** go_v upwards
->amh xq_b_v[as=rc,vc=tr]
*** go_v wrong
->amh blax*_v[as=smp,vc=ps]
->amh Cngf_v[as=smp,vc=smp]
->amh fls_v[as=rc,vc=ps]
*** gore_v
->amh wg'_v[as=rc,vc=ps]
*** gossip_v
->amh n|xWkaxWk_v[as=smp,vc=tr]
*** gossip_v about
->amh n|xWakk_v[as=smp,vc=tr]
*** gossip_v against
->amh xWkxWk_v[as=smp,vc=cs]
->amh 'm'_v[as=smp,vc=smp]
*** gouge_v out
->amh mnqr_v[as=it,vc=smp]
->amh mnqr_v[as=smp,vc=smp]
*** grab_v
->amh Cb_T_v[as=smp,vc=smp]
->amh qm_'_v[as=smp,vc=smp]
->amh mntf_v[as=smp,vc=smp]
->amh Cmdd_v[as=smp,vc=smp]
->amh mntf_v[as=smp,vc=ps]
->amh mnCq_v[as=smp,vc=smp]
->amh mWClf_v[as=smp,vc=smp]
->amh mnTq_v[as=smp,vc=ps]
->amh CbWd_v[as=smp,vc=smp]
*** graft_v
->amh gr_z_v[as=smp,vc=smp]
*** grasp_v
->amh Cb_T_v[as=smp,vc=smp]
->amh Cb_t_v[as=smp,vc=ps]
->amh y'z_v[as=smp,vc=smp]
*** grate_v
->amh sqTT_v[as=smp,vc=smp]
*** graze_v
->amh g'T_v[as=smp,vc=tr]
->amh g'T_v[as=smp,vc=smp]
->amh lqm_v[as=smp,vc=tr]
->amh xkW_t_v[as=smp,vc=smp]
*** grease_v
->amh 's_s_v[as=smp,vc=smp]
*** greet_v
->amh slm_v[as=smp,vc=smp]
->amh zy_r_v[as=smp,vc=smp]
*** grill_v
->amh Tbs_v[as=smp,vc=smp]
*** grimace_v
->amh qC_m_v[as=smp,vc=smp]
*** grind_v
->amh fC*_v[as=smp,vc=smp]
->amh kk_'_v[as=smp,vc=smp]
->amh qWrTm_v[as=it,vc=smp]
*** grind_v coarsely
->amh xrkt_v[as=smp,vc=smp]
*** grind_v fine
->amh sl_q_v[as=smp,vc=smp]
*** grind_v finely
->amh l'm_v[as=smp,vc=tr]
*** grip_v
->amh sq_z_v[as=smp,vc=smp]
*** groan_v
->amh gWagWr_v[as=smp,vc=smp]
->amh gWr'_v[as=smp,vc=tr]
->amh gWr'_v[as=rc,vc=tr]
->amh qs_t_v[as=rc,vc=tr]
*** grope_v
->amh dnbr_v[as=rc,vc=ps]
->amh dabs_v[as=smp,vc=smp]
*** ground_v
->amh dqW_s_v[as=smp,vc=smp]
*** grow_v
->amh zr'_v[as=smp,vc=smp]
->amh bql_v[as=smp,vc=tr]
->amh gnn_v[as=smp,vc=smp]
*** grow_v dark
->amh TqWr_v[as=smp,vc=smp]
*** grow_v fat
->amh f'f'_v[as=smp,vc=smp]
*** grow_v numb
->amh dnzz_v[as=smp,vc=smp]
*** grow_v old
->amh rj*_v[as=smp,vc=tr]
->amh xmgl_v[as=smp,vc=smp]
->amh grjf_v[as=smp,vc=smp]
*** grow_v precociously
->amh gaxb_v[as=smp,vc=smp]
*** grow_v simple-minded
->amh nhll_v[as=smp,vc=smp]
*** grow_v tall
->amh n|qwall_v[as=smp,vc=ps]
*** grow_v thick
->amh cf_g_v[as=smp,vc=smp]
*** grow_v thin
->amh s's'_v[as=smp,vc=smp]
->amh rqq_v[as=smp,vc=smp]
*** grow_v up
->amh 'dg_v[as=smp,vc=smp]
*** grumble_v
->amh l|gWmgWm_v[as=smp,vc=tr]
->amh n|gWragWr_v[as=smp,vc=tr]
->amh nfnf_v[as=rc,vc=ps]
->amh gW|rmrm_v[as=smp,vc=tr]
*** grunt_v
->amh gW|rmrm_v[as=smp,vc=tr]
*** guarantee_v
->amh 'lf_v[as=smp,vc=smp]
*** guide_v
->amh gWbN*_v[as=smp,vc=cs]
*** gulp_v
->amh w'T_v[as=smp,vc=smp]
->amh gsr_v[as=smp,vc=smp]
->amh w'T_v[as=smp,vc=ps]
*** gulp_v down
->amh drgm_v[as=smp,vc=smp]
*** gun_v down
->amh rx_n_v[as=smp,vc=smp]
*** gush_v
->amh gWrf_v[as=smp,vc=smp]
->amh n|ZqZq_v[as=smp,vc=ps]
->amh n|dWldWl_v[as=smp,vc=ps]
*** gush_v out
->amh flq_v[as=smp,vc=smp]
*** guzzle_v
->amh l'f_v[as=smp,vc=smp]
*** hack_v
->amh gmdl_v[as=smp,vc=smp]
*** halt_v
->amh qwm_v[as=smp,vc=smp]
*** hammer_v
->amh qTqT_v[as=smp,vc=smp]
->amh qWrqWr_v[as=smp,vc=smp]
*** hammer_v in
->amh qrqr_v[as=smp,vc=smp]
->amh qrqr_v[as=smp,vc=ps]
*** hand_v over
->amh rkb_v[as=smp,vc=cs]
->amh rkb_v[as=it,vc=ps]
*** handle_v awkwardly
->amh n|qrff_v[as=smp,vc=tr]
*** handle_v carefully
->amh n|kbkb_v[as=smp,vc=tr]
*** handle_v roughly
->amh n|glat'_v[as=smp,vc=tr]
*** hang_v
->amh sql_v[as=smp,vc=smp]
*** hang_v loosely
->amh n|zrff_v[as=smp,vc=ps]
->amh n|zrff_v[as=smp,vc=tr]
*** hang_v oneself
->amh 'nq_v[as=smp,vc=ps]
*** hang_v up
->amh n|TlTl_v[as=smp,vc=tr]
*** hang_v up-side-down
->amh zqzq_v[as=smp,vc=ps]
*** happen_v
->amh drg_v[as=smp,vc=ps]
->amh hwn_v[as=smp,vc=smp]
->amh drs_v[as=smp,vc=smp]
*** happen_v repeatedly
->amh dgm_v[as=it,vc=ps]
*** harbour_v
->amh xx*_v[as=smp,vc=cs]
->amh Tg'_v[as=smp,vc=cs]
*** harden_v
->amh TT_r_v[as=smp,vc=tr]
->amh Tn'_v[as=smp,vc=tr]
->amh TT_r_v[as=smp,vc=smp]
->amh dd_r_v[as=smp,vc=smp]
*** harm_v
->amh gWd'_v[as=smp,vc=smp]
*** harness_v
->amh kt_r_v[as=smp,vc=smp]
*** harrow_v
->amh ksks_v[as=smp,vc=smp]
*** harvest_v
->amh sbsb_v[as=smp,vc=smp]
->amh mrt_v[as=smp,vc=tr]
*** hasten_v
->amh Tdf_v[as=rc,vc=ps]
->amh Tdf_v[as=rc,vc=tr]
->amh ckW_l_v[as=smp,vc=smp]
->amh fTn_v[as=rc,vc=tr]
*** hatch_v
->amh flfl_v[as=smp,vc=smp]
->amh qfqf_v[as=smp,vc=smp]
*** hate_v
->amh Tl'_v[as=smp,vc=smp]
*** hate_v strongly
->amh mr_z_v[as=smp,vc=smp]
*** haul_v
->amh qd'_v[as=smp,vc=smp]
*** have_v cross-eyes
->amh n|xwarr_v[as=smp,vc=tr]
*** have_v diarrhea
->amh qm_T_v[as=smp,vc=cs]
*** have_v indigestion
->amh q'r_v[as=smp,vc=tr]
*** have_v intercourse
->amh srr_v[as=rc,vc=ps]
*** have_v nightmares
->amh qaZ*_v[as=smp,vc=tr]
*** have_v regrets
->amh 'zn_v[as=smp,vc=smp]
*** have_v splay-feet
->amh xf_f_v[as=smp,vc=smp]
*** head_v for
->amh mr'_v[as=smp,vc=tr]
*** heal_v
->amh fw_s_v[as=smp,vc=smp]
->amh d'n_v[as=smp,vc=tr]
*** heal_v up
->amh Tg_g_v[as=smp,vc=smp]
*** heap_v
->amh qWl_l_v[as=smp,vc=smp]
*** heap_v up
->amh sbasb_v[as=smp,vc=smp]
*** hear_v
->amh sm'_v[as=smp,vc=smp]
*** heat_v
->amh g'l_v[as=smp,vc=tr]
*** heat_v up
->amh g'l_v[as=it,vc=tr]
->amh mwq_v[as=smp,vc=tr]
->amh g'm_v[as=smp,vc=smp]
*** help_v
->amh rd'_v[as=smp,vc=smp]
->amh 'g_z_v[as=smp,vc=smp]
*** help_v bury
->amh qbr_v[as=it,vc=tr]
->amh qbr_v[as=rc,vc=tr]
*** herald_v
->amh bsr_v[as=smp,vc=tr]
->amh lf_f_v[as=smp,vc=smp]
*** hesitate_v
->amh gngn_v[as=smp,vc=smp]
->amh wall_v[as=smp,vc=smp]
->amh wlawl_v[as=smp,vc=smp]
->amh q'm_v[as=it,vc=ps]
*** hide_v
->amh db_q_v[as=smp,vc=smp]
->amh xgW_T_v[as=smp,vc=ps]
->amh xx_g_v[as=smp,vc=smp]
->amh sw_r_v[as=smp,vc=smp]
*** hijack_v
->amh Tlf_v[as=smp,vc=ps]
->amh Tlf_v[as=smp,vc=smp]
*** hinder_v
->amh 'gW_l_v[as=smp,vc=tr]
->amh 'g_d_v[as=smp,vc=smp]
->amh wlakf_v[as=smp,vc=tr]
->amh nTb_v[as=rc,vc=tr]
->amh klkl_v[as=smp,vc=ps]
->amh klkl_v[as=smp,vc=smp]
->amh Cngf_v[as=rc,vc=tr]
->amh snkl_v[as=rc,vc=ps]
->amh CngWl_v[as=smp,vc=tr]
->amh snkl_v[as=rc,vc=tr]
*** hinder_v blocked
->amh 'g_d_v[as=smp,vc=ps]
*** hint_v
->amh 'kk_v[as=smp,vc=tr]
*** hit_v
->amh mt'_v[as=rc,vc=ps]
->amh Zl_T_v[as=smp,vc=smp]
->amh mt'_v[as=smp,vc=smp]
->amh Tl_z_v[as=smp,vc=smp]
->amh ql'_v[as=smp,vc=smp]
*** hit_v forcefully
->amh dbay*_v[as=smp,vc=tr]
*** hit_v hard
->amh Twz_v[as=smp,vc=tr]
*** hit_v served
->amh lg_'_v[as=smp,vc=smp]
*** hit_v severely
->amh dq'_v[as=smp,vc=smp]
*** hit_v strongly
->amh dw_l_v[as=smp,vc=smp]
*** hit_v violently
->amh Tbsq_v[as=smp,vc=smp]
->amh gC*_v[as=rc,vc=tr]
*** hitch_v up
->amh xr_T_v[as=smp,vc=cs]
*** hoard_v up
->amh kmac*_v[as=smp,vc=ps]
*** hobble_v
->amh qy_d_v[as=it,vc=tr]
->amh qy_d_v[as=smp,vc=smp]
->amh xnkf_v[as=smp,vc=smp]
->amh snkl_v[as=smp,vc=smp]
*** hold_v
->amh y'z_v[as=smp,vc=smp]
->amh 'qf_v[as=smp,vc=ps]
*** hollow_v out
->amh f'r_v[as=smp,vc=smp]
->amh gWdgWd_v[as=smp,vc=tr]
->amh flfl_v[as=smp,vc=smp]
*** honour_v
->amh kbr_v[as=smp,vc=tr]
->amh 'fr_v[as=smp,vc=ps]
->amh fr'_v[as=smp,vc=ps]
*** horrify_v
->amh sq_q_v[as=smp,vc=cs]
->amh sq_q_v[as=smp,vc=smp]
*** hound_v
->amh wkb_v[as=rc,vc=ps]
*** hover_v
->amh n|Zabb_v[as=smp,vc=tr]
->amh n|Zabb_v[as=smp,vc=ps]
->amh rbb_v[as=smp,vc=smp]
*** huddle_v
->amh fnfn_v[as=rc,vc=ps]
->amh 'gW_r_v[as=smp,vc=smp]
*** huddle_v together
->amh 'f_g_v[as=it,vc=ps]
*** hum_v
->amh n|gWragWr_v[as=smp,vc=tr]
*** humiliate_v
->amh wrd_v[as=rc,vc=tr]
->amh 'fr_v[as=smp,vc=cs]
*** hunt_v
->amh 'd_n_v[as=smp,vc=smp]
*** hurry_v
->amh fTn_v[as=rc,vc=ps]
->amh Tdf_v[as=rc,vc=ps]
->amh q|lblb_v[as=smp,vc=tr]
->amh gsgs_v[as=smp,vc=smp]
->amh Tdf_v[as=rc,vc=tr]
->amh fTn_v[as=smp,vc=smp]
*** hurt_v
->amh 'mm_v[as=smp,vc=cs]
->amh gWd'_v[as=smp,vc=smp]
->amh gWd'_v[as=smp,vc=ps]
*** hustle_v
->amh k|lflf_v[as=smp,vc=tr]
->amh klb_v[as=smp,vc=smp]
*** identify_v
->amh ly_*_v[as=smp,vc=smp]
*** idle_v about
->amh wslt_v[as=smp,vc=smp]
*** ignite_v
->amh lkW_s_v[as=smp,vc=smp]
*** ignore_v
->amh gx_x_v[as=smp,vc=tr]
->amh n'q_v[as=smp,vc=smp]
*** immigrate_v
->amh fls_v[as=smp,vc=smp]
*** impale_v
->amh sk_'_v[as=smp,vc=smp]
*** impart_v
->amh kfl_v[as=rc,vc=tr]
*** impede_v
->amh klkl_v[as=smp,vc=smp]
*** implicate_v
->amh bk_l_v[as=it,vc=ps]
->amh bk_l_v[as=smp,vc=smp]
*** implore_v
->amh mall_v[as=smp,vc=smp]
->amh lm_n_v[as=smp,vc=smp]
*** importune_v
->amh mnck_v[as=smp,vc=smp]
->amh wtwt_v[as=smp,vc=smp]
*** impound_v
->amh y'z_v[as=smp,vc=cs]
*** impoverish_v
->amh dxy*_v[as=smp,vc=tr]
*** impregnate_v
->amh rgz_v[as=smp,vc=cs]
*** impress_v
->amh grm_v[as=smp,vc=ps]
*** imprison_v
->amh 'sr_v[as=smp,vc=smp]
*** improve_v
->amh x'l_v[as=smp,vc=cs]
->amh x'l_v[as=it,vc=tr]
*** inaugurate_v
->amh mr_q_v[as=smp,vc=smp]
*** incite_v quarrel
->amh bTbT_v[as=rc,vc=tr]
*** incline_v
->amh znbl_v[as=smp,vc=cs]
->amh zmm_v[as=smp,vc=smp]
->amh zmm_v[as=smp,vc=cs]
*** increase_v
->amh bz'_v[as=smp,vc=tr]
->amh f'f'_v[as=smp,vc=cs]
->amh rb'_v[as=rc,vc=ps]
->amh blT_v[as=smp,vc=tr]
*** incriminate_v
->amh wnjl_v[as=smp,vc=smp]
*** indemnify_v
->amh k's_v[as=smp,vc=ps]
->amh k's_v[as=smp,vc=smp]
*** indulge_v
->amh n|dlaqq_v[as=smp,vc=tr]
*** infect_v
->amh mWqmWq_v[as=smp,vc=smp]
*** infest_v
->amh wrr_v[as=smp,vc=smp]
*** infiltrate_v
->amh br_z_v[as=smp,vc=smp]
*** inflate_v
->amh qt_r_v[as=smp,vc=smp]
->amh n'r_v[as=smp,vc=smp]
*** inflate_v slightly
->amh nf'_v[as=it,vc=smp]
*** inflict_v
->amh ktkt_v[as=smp,vc=smp]
*** inflict_v pain
->amh n|gbgb_v[as=smp,vc=tr]
*** inform_v
->amh 'wq_v[as=smp,vc=tr]
->amh wr'_v[as=smp,vc=tr]
->amh 'wq_v[as=smp,vc=cs]
*** inform_v on
->amh TqW_m_v[as=smp,vc=smp]
*** infuriate_v
->amh db_n_v[as=smp,vc=tr]
*** inherit_v
->amh wrs_v[as=smp,vc=smp]
*** initiate_v
->amh ns'_v[as=smp,vc=cs]
*** injure_v
->amh gWd'_v[as=smp,vc=smp]
->amh gWd'_v[as=smp,vc=ps]
*** inquire_v
->amh Ty_q_v[as=smp,vc=smp]
*** insert_v
->amh gb'_v[as=smp,vc=tr]
->amh wx_q_v[as=smp,vc=smp]
->amh zrnq_v[as=smp,vc=smp]
->amh dwl_v[as=smp,vc=smp]
->amh gb'_v[as=smp,vc=cs]
*** insert_v forcefully
->amh zn_q_v[as=smp,vc=smp]
*** inspect_v
->amh gWbN*_v[as=smp,vc=smp]
*** inspect_v searched
->amh ft_x_v[as=smp,vc=smp]
*** inspire_v
->amh xn_T_v[as=smp,vc=smp]
*** instigate_v
->amh g'l_v[as=it,vc=tr]
->amh gf'_v[as=it,vc=smp]
*** institute_v
->amh dngg_v[as=smp,vc=smp]
->amh qwm_v[as=it,vc=ps]
*** institutionalize_v
->amh drj*_v[as=rc,vc=ps]
*** insult_v
->amh sdb_v[as=rc,vc=ps]
->amh sdb_v[as=smp,vc=smp]
*** insult_v tacitly
->amh x|mWaTT_v[as=smp,vc=tr]
*** intercede_v
->amh mald_v[as=smp,vc=smp]
->amh mald_v[as=smp,vc=tr]
*** interchange_v
->amh qy_r_v[as=it,vc=tr]
->amh lw_T_v[as=it,vc=ps]
*** interlock_v
->amh qWl_f_v[as=rc,vc=tr]
->amh sk_'_v[as=rc,vc=tr]
*** intermarry_v
->amh wld_v[as=rc,vc=ps]
*** interpret_v
->amh trgWm_v[as=smp,vc=ps]
->amh trgWm_v[as=smp,vc=smp]
*** interrogate_v
->amh lflf_v[as=smp,vc=cs]
*** interrupt_v
->amh nTb_v[as=rc,vc=ps]
->amh 'gW_l_v[as=smp,vc=tr]
->amh dnaqf_v[as=smp,vc=tr]
->amh qWrT_v[as=rc,vc=tr]
*** intertwine_v
->amh qWl_f_v[as=it,vc=tr]
->amh qWl_f_v[as=rc,vc=tr]
->amh t't'_v[as=smp,vc=smp]
*** intoxicate_v
->amh skr_v[as=smp,vc=cs]
->amh skr_v[as=smp,vc=smp]
*** intrigue_v
->amh dWl_t_v[as=smp,vc=smp]
*** introduce_v
->amh 'wq_v[as=it,vc=tr]
->amh gb'_v[as=smp,vc=cs]
*** invade_v
->amh wrr_v[as=smp,vc=smp]
*** invent_v
->amh fTr_v[as=smp,vc=smp]
*** investigate_v
->amh mrmr_v[as=smp,vc=smp]
*** irrigate_v
->amh TT_'_v[as=smp,vc=tr]
*** itch_v
->amh kWskWs_v[as=smp,vc=smp]
->amh 'kk_v[as=smp,vc=cs]
->amh bl'_v[as=smp,vc=smp]
*** itemize_v
->amh zrzr_v[as=smp,vc=smp]
*** jabber_v
->amh zlabd_v[as=smp,vc=smp]
*** jam_v
->amh Tbb_v[as=rc,vc=tr]
->amh qrqr_v[as=smp,vc=smp]
->amh qrqr_v[as=smp,vc=ps]
*** jam_v in
->amh xnqr_v[as=smp,vc=smp]
*** jerk_v
->amh gWn_T_v[as=smp,vc=smp]
*** jest_v
->amh tr_b_v[as=smp,vc=smp]
*** jingle_v
->amh q|ClCl_v[as=smp,vc=ps]
*** join_v
->amh gTm_v[as=smp,vc=smp]
->amh qlaql_v[as=smp,vc=ps]
->amh gWdaN*_v[as=smp,vc=ps]
->amh Tm_r_v[as=rc,vc=tr]
*** join_v forces
->amh 'br_v[as=it,vc=ps]
*** join_v others
->amh Cm_r_v[as=smp,vc=ps]
->amh Cf_r_v[as=rc,vc=ps]
->amh dblq_v[as=smp,vc=ps]
->amh dblq_v[as=rc,vc=ps]
*** join_v together
->amh gTm_v[as=smp,vc=smp]
->amh y'z_v[as=it,vc=tr]
->amh lT_f_v[as=smp,vc=ps]
*** join_v up
->amh Tmd_v[as=rc,vc=tr]
*** join_v with
->amh dm_r_v[as=smp,vc=ps]
*** joke_v
->amh tr_b_v[as=smp,vc=smp]
->amh fyz_v[as=smp,vc=tr]
*** joke_v gently
->amh ql_d_v[as=it,vc=smp]
*** jolt_v
->amh n|gCagC_v[as=smp,vc=tr]
*** jostle_v
->amh trams_v[as=it,vc=ps]
->amh trams_v[as=smp,vc=ps]
*** journey_v
->amh gW'z_v[as=smp,vc=ps]
*** judge_v
->amh frd_v[as=smp,vc=smp]
->amh daN*_v[as=smp,vc=smp]
*** judge_v accurately
->amh mT_n_v[as=smp,vc=smp]
*** jump_v
->amh dnbr_v[as=smp,vc=smp]
->amh zll_v[as=smp,vc=smp]
*** keep_v aside
->amh qm_T_v[as=smp,vc=cs]
*** keep_v back
->amh qr*_v[as=smp,vc=cs]
->amh qWy_*_v[as=smp,vc=tr]
*** keep_v company
->amh Cawt_v[as=smp,vc=tr]
->amh mx*_v[as=rc,vc=tr]
*** keep_v fit
->amh xnqT_v[as=smp,vc=smp]
*** keep_v hidden
->amh lbs_v[as=it,vc=tr]
*** keep_v late
->amh zgy*_v[as=smp,vc=cs]
*** keep_v nagging
->amh gWtgWt_v[as=smp,vc=smp]
*** keep_v silent
->amh ls_n_v[as=smp,vc=ps]
*** keep_v waiting
->amh qWy_*_v[as=smp,vc=cs]
->amh qWy_*_v[as=smp,vc=tr]
*** keep_v warm
->amh mwq_v[as=smp,vc=tr]
*** kick_v
->amh rgT_v[as=smp,vc=smp]
*** kick_v out
->amh rgT_v[as=rc,vc=ps]
*** kick_v strongly
->amh Tl_z_v[as=smp,vc=smp]
*** kidnap_v
->amh 'f_n_v[as=smp,vc=smp]
->amh Tlf_v[as=smp,vc=smp]
*** kill_v
->amh gdl_v[as=smp,vc=smp]
*** kindle_v
->amh y'z_v[as=it,vc=tr]
*** kiss_v
->amh s'm_v[as=smp,vc=smp]
*** kiss_v repeatedly
->amh CmCm_v[as=smp,vc=smp]
*** kneel_v
->amh n|brkk_v[as=smp,vc=ps]
*** knock_v
->amh gC*_v[as=rc,vc=ps]
*** knock_v against
->amh gC*_v[as=smp,vc=smp]
*** knock_v down
->amh dqW_s_v[as=smp,vc=smp]
->amh zr_r_v[as=smp,vc=smp]
->amh zgrr_v[as=smp,vc=smp]
->amh krbt_v[as=smp,vc=smp]
*** knock_v flat
->amh dqW_s_v[as=smp,vc=smp]
*** knock_v into
->amh dnqr_v[as=smp,vc=smp]
*** knock_v on
->amh qWrqWr_v[as=smp,vc=smp]
*** knock_v out
->amh zr_r_v[as=smp,vc=smp]
*** know_v
->amh 'wq_v[as=smp,vc=smp]
*** lack_v
->amh cg_r_v[as=smp,vc=smp]
*** lack_v breeding
->amh balg_v[as=smp,vc=smp]
*** ladle_v out
->amh Cl_f_v[as=smp,vc=smp]
*** lag_v behind
->amh gWt_t_v[as=rc,vc=ps]
->amh gWt_t_v[as=smp,vc=ps]
*** laminate_v
->amh dr_b_v[as=it,vc=ps]
*** land_v
->amh 'rf_v[as=smp,vc=cs]
->amh 'rf_v[as=smp,vc=smp]
*** languish_v
->amh maqq_v[as=smp,vc=smp]
*** lash_v
->amh xnqWT_v[as=smp,vc=smp]
->amh qWndd_v[as=smp,vc=smp]
->amh grf_v[as=smp,vc=ps]
*** last_v
->amh qWy_*_v[as=smp,vc=smp]
->amh zlq_v[as=smp,vc=smp]
*** last_v long
->amh zlq_v[as=rc,vc=tr]
*** lather_v
->amh gWrf_v[as=smp,vc=smp]
*** laugh_v
->amh s'q_v[as=smp,vc=smp]
*** laugh_v at
->amh xwf_v[as=smp,vc=cs]
->amh sl_q_v[as=rc,vc=ps]
*** laugh_v inanely
->amh mWlfT_v[as=rc,vc=ps]
->amh mWlfT_v[as=smp,vc=smp]
*** launch_v
->amh mTq_v[as=smp,vc=tr]
*** lay_v
->amh rbrb_v[as=smp,vc=smp]
*** lay_v bare
->amh raqWt_v[as=smp,vc=tr]
*** lay_v crosswise
->amh sbaTr_v[as=smp,vc=cs]
*** lay_v down
->amh gdm_v[as=rc,vc=tr]
*** lay_v open
->amh zrkt_v[as=it,vc=ps]
*** lay_v out
->amh nz'_v[as=smp,vc=smp]
*** lead_v
->amh mr'_v[as=smp,vc=smp]
*** leaf_v through
->amh glbT_v[as=rc,vc=tr]
*** leak_v
->amh fss_v[as=smp,vc=tr]
*** lean_v
->amh 'kk_v[as=smp,vc=ps]
*** lean_v on
->amh dg_f_v[as=smp,vc=ps]
*** leap_v
->amh zll_v[as=smp,vc=smp]
->amh wrwr_v[as=smp,vc=ps]
*** lease_v
->amh gz'_v[as=rc,vc=ps]
*** leave_v
->amh tw_v[as=smp,vc=smp]
->amh hyd_v[as=smp,vc=smp]
*** leave_v behind
->amh rs'_v[as=smp,vc=smp]
*** leave_v marker
->amh 'lb_v[as=smp,vc=smp]
*** leave_v off
->amh tw_v[as=smp,vc=smp]
*** lend_v
->amh w's_v[as=smp,vc=tr]
->amh zmm_v[as=smp,vc=smp]
->amh bd_r_v[as=smp,vc=tr]
*** lengthen_v out
->amh rzm_v[as=smp,vc=smp]
*** let_v
->amh kray*_v[as=smp,vc=tr]
*** let_v go
->amh sdd_v[as=smp,vc=smp]
->amh lqq_v[as=smp,vc=smp]
*** let_v in
->amh gb'_v[as=smp,vc=cs]
*** level_v
->amh mdmd_v[as=smp,vc=smp]
*** levy_v
->amh qrT_v[as=smp,vc=smp]
->amh qrT_v[as=smp,vc=ps]
*** lick_v
->amh tnfs_v[as=smp,vc=smp]
->amh l's_v[as=smp,vc=smp]
*** lie_v
->amh qsaft_v[as=smp,vc=smp]
->amh wax*_v[as=smp,vc=smp]
*** lift_v
->amh ns'_v[as=smp,vc=tr]
->amh sqsq_v[as=smp,vc=smp]
*** light_v
->amh br'_v[as=smp,vc=smp]
->amh lkW_s_v[as=smp,vc=smp]
->amh ndd_v[as=smp,vc=tr]
->amh br'_v[as=smp,vc=tr]
*** like_v
->amh wdd_v[as=smp,vc=ps]
->amh fl_g_v[as=smp,vc=smp]
->amh wdd_v[as=smp,vc=smp]
*** limit_v
->amh ws_n_v[as=smp,vc=smp]
*** limp_v
->amh nks_v[as=smp,vc=tr]
*** line_v up
->amh kWlkWl_v[as=smp,vc=smp]
*** linger_v
->amh qWy_*_v[as=smp,vc=smp]
*** lisp_v
->amh gWladf_v[as=smp,vc=ps]
->amh kWlatf_v[as=smp,vc=ps]
*** listen_v
->amh sm'_v[as=smp,vc=smp]
*** listen_v to
->amh dmT_v[as=smp,vc=tr]
->amh dmT_v[as=rc,vc=tr]
*** litter_v
->amh qWx_x_v[as=smp,vc=tr]
*** live_v
->amh nwr_v[as=smp,vc=smp]
*** live_v lavishly
->amh n|dlaqq_v[as=smp,vc=ps]
*** live_v long
->amh qWy_*_v[as=smp,vc=smp]
*** live_v luxuriously
->amh n|flass_v[as=smp,vc=ps]
*** liven_v up
->amh mwq_v[as=it,vc=tr]
*** load_v
->amh gWrs_v[as=smp,vc=tr]
->amh C'n_v[as=smp,vc=smp]
*** loaf_v
->amh zTzT_v[as=smp,vc=cs]
*** loaf_v about
->amh n|glawd_v[as=smp,vc=ps]
*** loathe_v
->amh Sy_f_v[as=smp,vc=ps]
->amh n|gxgx_v[as=smp,vc=tr]
*** lock_v
->amh qWl_f_v[as=smp,vc=smp]
*** lock_v up
->amh xgW_r_v[as=smp,vc=smp]
->amh qWl_f_v[as=it,vc=smp]
*** loiter_v around
->amh dxdx_v[as=smp,vc=tr]
->amh fads_v[as=smp,vc=tr]
->amh n|qwall_v[as=smp,vc=ps]
*** long_v
->amh nafq_v[as=it,vc=ps]
*** long_v for
->amh nafq_v[as=smp,vc=smp]
*** look_v after
->amh nabr_v[as=smp,vc=cs]
*** look_v around
->amh qaN*_v[as=smp,vc=smp]
*** look_v at
->amh mlkt_v[as=smp,vc=ps]
*** look_v down
->amh n|gwall_v[as=smp,vc=tr]
*** look_v drawn
->amh nbz_v[as=smp,vc=smp]
*** look_v for
->amh fl_g_v[as=smp,vc=smp]
*** look_v forward
->amh gW'gW'_v[as=smp,vc=smp]
*** look_v furiously
->amh gW|rTrT_v[as=smp,vc=tr]
*** look_v serious
->amh kWstr_v[as=rc,vc=ps]
*** look_v upwards
->amh n|gaTT_v[as=smp,vc=tr]
*** loosen_v
->amh qrf_v[as=it,vc=smp]
*** loot_v
->amh mzbr_v[as=smp,vc=smp]
*** lop_v
->amh CfCf_v[as=smp,vc=smp]
*** lose_v
->amh T'l_v[as=smp,vc=smp]
->amh rt'_v[as=smp,vc=ps]
*** lose_v air
->amh tnfs_v[as=smp,vc=cs]
*** lose_v hope
->amh tesfa_n qWrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lose_v weight
->amh slsl_v[as=smp,vc=smp]
->amh qll_v[as=smp,vc=smp]
*** love_v
->amh fqr_v[as=smp,vc=tr]
->amh wdd_v[as=smp,vc=smp]
*** lower_v
->amh qn_s_v[as=smp,vc=smp]
*** lower_v oneself
->amh fndd_v[as=smp,vc=tr]
*** lurk_v
->amh dfT_v[as=smp,vc=tr]
->amh db'_v[as=smp,vc=tr]
*** lust_v
->amh ss_n_v[as=smp,vc=smp]
*** madden_v
->amh ndd_v[as=rc,vc=tr]
->amh 'bd_v[as=smp,vc=cs]
->amh ndd_v[as=rc,vc=ps]
*** magnify_v
->amh gWl'_v[as=smp,vc=tr]
*** make_v
->amh sr'_v[as=smp,vc=smp]
*** make_v acute
->amh krr_v[as=smp,vc=tr]
*** make_v ambiguous
->amh d|fnfn_v[as=smp,vc=tr]
->amh d|bsbs_v[as=smp,vc=tr]
*** make_v blunt
->amh dWldWm_v[as=smp,vc=tr]
*** make_v clear
->amh Tr'_v[as=smp,vc=tr]
->amh br'_v[as=it,vc=tr]
->amh ks_t_v[as=smp,vc=smp]
*** make_v coarse
->amh xakr_v[as=smp,vc=cs]
*** make_v difficult
->amh TT_r_v[as=smp,vc=tr]
->amh kbd_v[as=smp,vc=tr]
->amh Tn_n_v[as=smp,vc=tr]
*** make_v difficulties
->amh mWg_d_v[as=smp,vc=smp]
*** make_v dirty
->amh qWx_x_v[as=smp,vc=tr]
->amh 'df_v[as=smp,vc=cs]
*** make_v disordered
->amh qaws_v[as=smp,vc=tr]
*** make_v do
->amh c'l_v[as=it,vc=tr]
*** make_v drunk
->amh skr_v[as=rc,vc=tr]
*** make_v excellent
->amh kx_n_v[as=smp,vc=smp]
*** make_v friction
->amh ft_g_v[as=rc,vc=ps]
*** make_v grave
->amh krr_v[as=smp,vc=tr]
*** make_v happy
->amh ds_t_v[as=smp,vc=cs]
*** make_v hungry
->amh r'b_v[as=smp,vc=cs]
*** make_v idle
->amh bWz_n_v[as=smp,vc=tr]
*** make_v inactive
->amh 'g_d_v[as=smp,vc=smp]
*** make_v insensitive
->amh dnzz_v[as=smp,vc=tr]
*** make_v jealous
->amh qn'_v[as=smp,vc=cs]
*** make_v jokes
->amh bWalt_v[as=smp,vc=tr]
*** make_v lean
->amh kWsmn_v[as=smp,vc=tr]
*** make_v lighter
->amh qll_v[as=smp,vc=tr]
*** make_v listless
->amh fzz_v[as=smp,vc=tr]
*** make_v longer
->amh rzm_v[as=smp,vc=tr]
*** make_v loose
->amh l'l'_v[as=smp,vc=tr]
*** make_v messy
->amh z|rkrk_v[as=smp,vc=tr]
->amh zbarq_v[as=it,vc=smp]
*** make_v mistake
->amh s't_v[as=it,vc=ps]
*** make_v muddy
->amh laxq_v[as=smp,vc=tr]
->amh laqWT_v[as=smp,vc=tr]
*** make_v peaceful
->amh rg'_v[as=it,vc=tr]
*** make_v poor
->amh raqWt_v[as=smp,vc=tr]
*** make_v prosperous
->amh drj*_v[as=rc,vc=tr]
*** make_v ready
->amh Tnqq_v[as=rc,vc=tr]
*** make_v red
->amh ql'_v[as=smp,vc=tr]
*** make_v rich
->amh blTg_v[as=smp,vc=tr]
*** make_v rows
->amh xntr_v[as=smp,vc=smp]
*** make_v serious
->amh kbd_v[as=smp,vc=tr]
*** make_v smaller
->amh 'ns_v[as=smp,vc=cs]
*** make_v soft
->amh l'l'_v[as=smp,vc=tr]
*** make_v strong
->amh Tn'_v[as=smp,vc=tr]
*** make_v successful
->amh sk_'_v[as=rc,vc=tr]
*** make_v tasty
->amh T'm_v[as=smp,vc=tr]
->amh TafT_v[as=smp,vc=tr]
*** make_v tender
->amh lsls_v[as=smp,vc=tr]
*** make_v thin
->amh ks'_v[as=smp,vc=tr]
->amh s's'_v[as=smp,vc=tr]
->amh mnmn_v[as=smp,vc=tr]
*** make_v thirsty
->amh Tm'_v[as=smp,vc=cs]
*** make_v trouble
->amh mWg_d_v[as=smp,vc=smp]
*** make_v wet
->amh r's_v[as=smp,vc=tr]
*** make_v yogurt
->amh rg'_v[as=smp,vc=tr]
*** maltreat_v
->amh Tq'_v[as=smp,vc=ps]
->amh Tq'_v[as=smp,vc=tr]
->amh n|glat'_v[as=smp,vc=tr]
*** manifest_v
->amh ks_t_v[as=smp,vc=smp]
->amh ks_t_v[as=smp,vc=ps]
*** manufacture_v
->amh sr'_v[as=smp,vc=smp]
*** mark_v
->amh 'r_m_v[as=smp,vc=smp]
*** marry_v
->amh gb'_v[as=smp,vc=tr]
->amh d'r_v[as=smp,vc=smp]
*** marry_v off
->amh d'r_v[as=smp,vc=smp]
*** mash_v
->amh d'T_v[as=smp,vc=smp]
*** massacre_v
->amh gdl_v[as=smp,vc=smp]
*** massage_v
->amh 'x*_v[as=smp,vc=smp]
*** massage_v kneaded
->amh 'x*_v[as=smp,vc=ps]
*** match_v
->amh gTm_v[as=smp,vc=smp]
*** mate_v
->amh Tq'_v[as=smp,vc=ps]
->amh Tq'_v[as=smp,vc=tr]
->amh srr_v[as=smp,vc=smp]
->amh srr_v[as=smp,vc=ps]
*** mature_v
->amh gWlms_v[as=smp,vc=smp]
*** maximize_v
->amh gnn_v[as=rc,vc=tr]
*** measure_v
->amh mtr_v[as=smp,vc=smp]
->amh lk_'_v[as=smp,vc=smp]
->amh sfr_v[as=smp,vc=smp]
*** measure_v against
->amh blT_v[as=rc,vc=tr]
*** meet_v
->amh gN*_v[as=smp,vc=tr]
->amh gTm_v[as=rc,vc=ps]
*** melt_v
->amh qlT_v[as=smp,vc=tr]
->amh qlT_v[as=smp,vc=smp]
*** mend_v
->amh bj_*_v[as=it,vc=ps]
->amh Tg_n_v[as=smp,vc=smp]
->amh bj_*_v[as=it,vc=tr]
->amh bj_*_v[as=smp,vc=ps]
*** mend_v repaired
->amh bj_*_v[as=smp,vc=tr]
*** mention_v
->amh ws_'_v[as=smp,vc=tr]
*** mess_v about
->amh n|klaws_v[as=smp,vc=ps]
*** mess_v up
->amh trams_v[as=smp,vc=tr]
->amh mnqr_v[as=it,vc=smp]
*** migrate_v
->amh fls_v[as=smp,vc=smp]
->amh zmt_v[as=smp,vc=smp]
*** milk_v
->amh 'lb_v[as=smp,vc=smp]
*** mill_v flour
->amh fC*_v[as=smp,vc=smp]
*** mince_v
->amh qrTf_v[as=it,vc=smp]
*** mince_v meat
->amh ktf_v[as=smp,vc=smp]
*** misfire_v
->amh kxf_v[as=smp,vc=smp]
*** mishandle_v
->amh gWsqWl_v[as=rc,vc=tr]
*** misled_v
->amh s't_v[as=smp,vc=cs]
->amh wnbd_v[as=rc,vc=tr]
->amh dnbr_v[as=rc,vc=tr]
->amh s't_v[as=it,vc=cs]
*** miss_v
->amh nafq_v[as=smp,vc=smp]
->amh s't_v[as=smp,vc=smp]
->amh nafq_v[as=smp,vc=ps]
*** mistreat_v
->amh gWsqWl_v[as=rc,vc=tr]
->amh gf'_v[as=smp,vc=smp]
->amh bd_l_v[as=smp,vc=smp]
*** misuse_v
->amh gWsqWl_v[as=rc,vc=tr]
*** mix_v
->amh qlaql_v[as=smp,vc=tr]
->amh dblq_v[as=smp,vc=smp]
->amh qlaql_v[as=smp,vc=smp]
->amh dblq_v[as=rc,vc=tr]
->amh qy_T_v[as=it,vc=tr]
->amh qy_T_v[as=smp,vc=smp]
*** mix_v ingredients
->amh qm_m_v[as=smp,vc=ps]
*** mix_v together
->amh bTbT_v[as=smp,vc=smp]
->amh sbaTr_v[as=it,vc=tr]
*** mix_v up
->amh qbaTr_v[as=smp,vc=cs]
->amh dblq_v[as=it,vc=smp]
->amh trams_v[as=it,vc=tr]
*** moan_v
->amh qs_t_v[as=rc,vc=tr]
*** mock_v
->amh fyz_v[as=smp,vc=tr]
->amh lgT_v[as=rc,vc=tr]
->amh ql_d_v[as=smp,vc=smp]
->amh tr_b_v[as=smp,vc=smp]
->amh lm_T_v[as=smp,vc=tr]
->amh Tyq_v[as=smp,vc=tr]
->amh xwf_v[as=smp,vc=cs]
->amh xrdd_v[as=smp,vc=smp]
*** modernize_v
->amh zb_n_v[as=smp,vc=smp]
*** moisten_v
->amh rTb_v[as=smp,vc=tr]
->amh r's_v[as=smp,vc=tr]
*** molest_v
->amh Cnq_v[as=smp,vc=cs]
*** mop_v
->amh Trg_v[as=smp,vc=smp]
*** mop_v up
->amh wlwl_v[as=smp,vc=smp]
*** motivate_v
->amh gf'_v[as=it,vc=ps]
->amh gf'_v[as=it,vc=smp]
*** mould_v
->amh 'r_q_v[as=smp,vc=smp]
*** mourn_v
->amh 'zn_v[as=smp,vc=smp]
*** mourn_v for
->amh lqs_v[as=rc,vc=ps]
*** move_v
->amh n|qsaqs_v[as=smp,vc=tr]
->amh nk'_v[as=smp,vc=ps]
->amh n|qsaqs_v[as=smp,vc=ps]
*** move_v around
->amh zw_r_v[as=it,vc=ps]
*** move_v gracefully
->amh n|gWadd_v[as=smp,vc=ps]
*** move_v rhythmically
->amh rgd_v[as=smp,vc=tr]
*** mow_v
->amh 'Cd_v[as=it,vc=smp]
->amh 'Cd_v[as=smp,vc=smp]
*** mow_v down
->amh lxlx_v[as=smp,vc=smp]
->amh 'nTf_v[as=smp,vc=smp]
->amh rsrs_v[as=smp,vc=smp]
*** muddle_v through
->amh w|trtr_v[as=smp,vc=tr]
->amh n|tlaks_v[as=smp,vc=tr]
*** muffle_v
->amh jbW_n_v[as=smp,vc=smp]
->amh 'f_n_v[as=smp,vc=ps]
*** multiply_v
->amh bz'_v[as=smp,vc=tr]
->amh wld_v[as=rc,vc=ps]
->amh brkt_v[as=rc,vc=ps]
->amh rb'_v[as=rc,vc=ps]
->amh bz'_v[as=rc,vc=tr]
->amh bz'_v[as=smp,vc=smp]
->amh rb'_v[as=smp,vc=smp]
*** munch_v
->amh gWrdm_v[as=smp,vc=smp]
*** murder_v
->amh gdl_v[as=smp,vc=smp]
*** murmur_v
->amh nbnb_v[as=smp,vc=tr]
->amh n|gWragWr_v[as=smp,vc=tr]
->amh gW|tmtm_v[as=smp,vc=tr]
->amh gW|rmrm_v[as=smp,vc=tr]
*** muzzle_v
->amh xb_b_v[as=smp,vc=ps]
->amh xb_b_v[as=smp,vc=smp]
*** nag_v
->amh CqCq_v[as=smp,vc=smp]
->amh ntrk_v[as=smp,vc=smp]
->amh Cnq_v[as=smp,vc=cs]
->amh nznz_v[as=rc,vc=ps]
->amh nznz_v[as=smp,vc=smp]
->amh slc*_v[as=smp,vc=cs]
->amh nfrq_v[as=rc,vc=ps]
->amh nznz_v[as=smp,vc=ps]
*** nail_v
->amh cnkr_v[as=smp,vc=smp]
*** name_v
->amh sy_m_v[as=smp,vc=smp]
*** narrate_v
->amh wr'_v[as=smp,vc=ps]
->amh wg'_v[as=smp,vc=tr]
->amh wr'_v[as=smp,vc=tr]
->amh tr_k_v[as=smp,vc=smp]
*** narrow_v
->amh Tbb_v[as=smp,vc=tr]
*** navigate_v
->amh brr_v[as=smp,vc=tr]
*** negotiate_v
->amh drdr_v[as=rc,vc=ps]
*** nick_v
->amh snbT_v[as=smp,vc=smp]
*** nominate_v
->amh TqW_m_v[as=smp,vc=smp]
*** nose_v about
->amh nfnf_v[as=smp,vc=tr]
*** notify_v
->amh 'wq_v[as=smp,vc=tr]
->amh mlkt_v[as=smp,vc=tr]
*** numb_v
->amh dnzz_v[as=smp,vc=tr]
*** obey_v
->amh 'zz_v[as=smp,vc=ps]
*** object_v
->amh qwm_v[as=rc,vc=ps]
*** observe_v
->amh w'l_v[as=smp,vc=cs]
->amh mlkt_v[as=smp,vc=ps]
->amh 'y*_v[as=smp,vc=smp]
*** obstruct_v
->amh zg'_v[as=smp,vc=smp]
->amh dnaqf_v[as=smp,vc=ps]
->amh dnaqf_v[as=smp,vc=tr]
*** obstruct_v stopped
->amh 'g_d_v[as=smp,vc=smp]
*** occur_v
->amh drg_v[as=smp,vc=ps]
*** offend_v
->amh qy_m_v[as=smp,vc=cs]
*** offer_v
->amh qrb_v[as=smp,vc=tr]
->amh gabz_v[as=smp,vc=smp]
->amh brkt_v[as=smp,vc=tr]
*** omit_v
->amh qr*_v[as=smp,vc=cs]
*** ooze_v
->amh 'Z*_v[as=smp,vc=smp]
*** ooze_v through
->amh wrz'_v[as=smp,vc=smp]
*** open_v
->amh glS_v[as=smp,vc=smp]
->amh kft_v[as=smp,vc=smp]
*** operate_v
->amh n|qsaqs_v[as=smp,vc=tr]
->amh sr'_v[as=smp,vc=smp]
*** oppress_v
->amh CqW_n_v[as=smp,vc=smp]
->amh Tq'_v[as=smp,vc=tr]
->amh qbr_v[as=smp,vc=smp]
->amh C'n_v[as=it,vc=ps]
*** ordain_v
->amh k'n_v[as=smp,vc=smp]
*** ordain_v bishop
->amh PP_s_v[as=smp,vc=tr]
*** order_v
->amh 'zz_v[as=smp,vc=smp]
*** organize_v
->amh qnbr_v[as=it,vc=tr]
->amh qnbr_v[as=rc,vc=tr]
*** originate_v
->amh flq_v[as=smp,vc=smp]
*** overcharge_v
->amh gWd'_v[as=smp,vc=smp]
*** overdo_v
->amh bsbs_v[as=rc,vc=ps]
*** overflow_v
->amh T|lqlq_v[as=smp,vc=tr]
->amh t|rfrf_v[as=smp,vc=ps]
*** overhang_v
->amh dbb_v[as=smp,vc=smp]
*** overpower_v
->amh 'y_l_v[as=smp,vc=smp]
*** overstate_v
->amh gnn_v[as=rc,vc=tr]
*** overtake_v
->amh qdm_v[as=smp,vc=smp]
*** overthrow_v
->amh fngl_v[as=smp,vc=smp]
->amh glbT_v[as=smp,vc=smp]
*** overturn_v
->amh fngl_v[as=smp,vc=smp]
->amh zqzq_v[as=smp,vc=smp]
->amh fngl_v[as=smp,vc=ps]
*** overwhelm_v
->amh T|lqlq_v[as=smp,vc=tr]
*** pace_v slowly
->amh zgm_v[as=it,vc=tr]
*** pacify_v
->amh rg'_v[as=it,vc=tr]
*** pack_v
->amh 'x_g_v[as=smp,vc=smp]
->amh 'k_t_v[as=smp,vc=smp]
*** pack_v closer
->amh xgaxg_v[as=smp,vc=cs]
*** pack_v in
->amh 'gW_r_v[as=smp,vc=smp]
*** pack_v into
->amh ms_g_v[as=smp,vc=smp]
*** pack_v neatly
->amh mc_*_v[as=it,vc=tr]
*** pack_v up
->amh 'x_g_v[as=smp,vc=ps]
*** paint_v
->amh qb_'_v[as=smp,vc=ps]
->amh s'l_v[as=smp,vc=smp]
->amh qb_'_v[as=smp,vc=smp]
*** pander_v
->amh xrmWT_v[as=smp,vc=cs]
*** pant_v
->amh lklk_v[as=smp,vc=tr]
->amh qs_t_v[as=rc,vc=tr]
*** parade_v
->amh sl_f_v[as=smp,vc=ps]
*** partake_v
->amh qms_v[as=rc,vc=ps]
->amh satf_v[as=smp,vc=ps]
*** participate_v
->amh satf_v[as=smp,vc=ps]
->amh kfl_v[as=rc,vc=ps]
*** pass_v
->amh 'lf_v[as=smp,vc=smp]
*** pass_v the day ; ^ pass_v 0
->amh w'l_v[as=smp,vc=smp]
*** pass_v around
->amh qb_l_v[as=it,vc=ps]
*** pass_v by
->amh gdm_v[as=smp,vc=tr]
->amh 'lf_v[as=smp,vc=smp]
*** pass_v judgment
->amh by_n_v[as=smp,vc=smp]
*** pass_v over
->amh xagr_v[as=it,vc=ps]
*** pass_v through
->amh xWlk_v[as=smp,vc=smp]
*** pass_v to
->amh qb_l_v[as=smp,vc=tr]
*** pasture_v
->amh g'T_v[as=smp,vc=tr]
->amh g'T_v[as=smp,vc=smp]
*** pat_v
->amh dabs_v[as=it,vc=smp]
->amh TbTb_v[as=smp,vc=smp]
*** pat_v down
->amh tmtm_v[as=smp,vc=smp]
*** patch_v
->amh dr_t_v[as=smp,vc=smp]
*** patch_v up
->amh T'f_v[as=smp,vc=smp]
->amh Tg_n_v[as=smp,vc=smp]
*** pay_v attention
->amh w'l_v[as=smp,vc=cs]
*** pay_v back
->amh gb'_v[as=smp,vc=tr]
*** pay_v damage
->amh k's_v[as=smp,vc=ps]
*** pay_v damages
->amh k's_v[as=smp,vc=smp]
*** pay_v out
->amh kfl_v[as=smp,vc=smp]
*** pay_v tribute
->amh gb_r_v[as=smp,vc=smp]
*** peck_v at
->amh tktk_v[as=smp,vc=smp]
*** peel_v
->amh glff_v[as=smp,vc=ps]
->amh glff_v[as=smp,vc=smp]
->amh l'T_v[as=smp,vc=smp]
->amh mWxlq_v[as=smp,vc=smp]
*** peel_v off
->amh gxlT_v[as=smp,vc=smp]
->amh mWxlq_v[as=smp,vc=smp]
->amh qrf_v[as=it,vc=ps]
*** peep_v
->amh CnqWr_v[as=smp,vc=tr]
*** peep_v at
->amh xWl_q_v[as=smp,vc=cs]
*** pen_v up
->amh 'gW_r_v[as=smp,vc=smp]
*** penetrate_v
->amh zlq_v[as=smp,vc=smp]
*** perambulate_v
->amh n|gWradd_v[as=smp,vc=ps]
*** perceive_v
->amh gnzb_v[as=smp,vc=ps]
*** perforate_v
->amh ndl_v[as=smp,vc=smp]
*** perplex_v
->amh dnagr_v[as=smp,vc=ps]
->amh dnagr_v[as=smp,vc=tr]
*** persecute_v
->amh sdd_v[as=rc,vc=tr]
*** persevere_v
->amh tg'_v[as=smp,vc=smp]
*** persuade_v
->amh dl_l_v[as=smp,vc=ps]
*** perturb_v
->amh dnagr_v[as=smp,vc=tr]
*** pester_v
->amh CqCq_v[as=smp,vc=smp]
->amh nznz_v[as=rc,vc=ps]
->amh Cnq_v[as=smp,vc=cs]
*** pick_v
->amh lqm_v[as=it,vc=smp]
->amh lqm_v[as=smp,vc=smp]
*** pick_v out
->amh lqm_v[as=it,vc=smp]
*** pick_v up
->amh marr_v[as=smp,vc=smp]
->amh lqm_v[as=smp,vc=smp]
*** pierce_v
->amh wg'_v[as=smp,vc=smp]
*** pile_v on
->amh 'k_l_v[as=smp,vc=smp]
*** pile_v up
->amh k'b_v[as=smp,vc=smp]
*** pillage_v
->amh mzbr_v[as=smp,vc=ps]
->amh mzbr_v[as=smp,vc=smp]
*** pilot_v
->amh brr_v[as=smp,vc=smp]
->amh brr_v[as=smp,vc=tr]
*** pinch_v
->amh qWnTT_v[as=smp,vc=smp]
->amh qWnTT_v[as=rc,vc=ps]
*** place_v
->amh nwr_v[as=smp,vc=tr]
*** plague_v
->amh sqy*_v[as=rc,vc=tr]
*** plait_v
->amh gWngWn_v[as=smp,vc=smp]
->amh qWaC*_v[as=smp,vc=smp]
*** plan_v
->amh qy_s_v[as=smp,vc=smp]
->amh 'q_d_v[as=smp,vc=smp]
->amh qy_s_v[as=smp,vc=ps]
*** plane_v
->amh l'g_v[as=smp,vc=smp]
*** plant_v
->amh tkl_v[as=smp,vc=smp]
*** plaster_v
->amh ls_n_v[as=smp,vc=smp]
->amh mrg_v[as=smp,vc=smp]
*** play_v
->amh Cawt_v[as=smp,vc=ps]
*** play_v against
->amh Tmm_v[as=smp,vc=smp]
*** play_v cheerfully
->amh zll_v[as=rc,vc=ps]
*** play_v stone
->amh xkW_t_v[as=rc,vc=ps]
*** plead_v
->amh lm_n_v[as=smp,vc=smp]
*** plead_v with
->amh lm_n_v[as=it,vc=ps]
*** please_v
->amh ds_t_v[as=smp,vc=cs]
*** plot_v
->amh 'd_m_v[as=smp,vc=smp]
->amh xm_q_v[as=smp,vc=smp]
->amh dWl_t_v[as=smp,vc=smp]
->amh syr_v[as=smp,vc=cs]
*** plough_v
->amh 'rs_v[as=smp,vc=smp]
->amh tlm_v[as=smp,vc=smp]
*** pluck_v
->amh qTf_v[as=smp,vc=smp]
*** pluck_v out
->amh nqWr_v[as=smp,vc=tr]
*** plug_v
->amh wt_f_v[as=smp,vc=smp]
*** plunder_v
->amh zrf_v[as=smp,vc=smp]
->amh zrf_v[as=it,vc=ps]
->amh bzbz_v[as=smp,vc=smp]
*** point_v
->amh dg_n_v[as=smp,vc=smp]
*** point_v at
->amh mlkt_v[as=smp,vc=tr]
->amh qs_r_v[as=smp,vc=smp]
->amh TqW_m_v[as=smp,vc=smp]
*** point_v out
->amh TqW_m_v[as=smp,vc=smp]
*** poison_v
->amh mr_z_v[as=smp,vc=smp]
*** poke_v
->amh qWsqWs_v[as=smp,vc=smp]
->amh gWagWT_v[as=smp,vc=smp]
->amh gWrgWr_v[as=smp,vc=smp]
*** poke_v repeatedly
->amh xqxq_v[as=smp,vc=smp]
*** polish_v
->amh kWl'_v[as=smp,vc=smp]
->amh wlwl_v[as=smp,vc=smp]
*** pollute_v
->amh 'df_v[as=smp,vc=cs]
*** ponder_v
->amh w'l_v[as=smp,vc=cs]
->amh bl'_v[as=it,vc=tr]
->amh slsl_v[as=rc,vc=tr]
->amh Tyn_v[as=smp,vc=tr]
*** ponder_v over
->amh TnTn_v[as=smp,vc=tr]
*** pop_v
->amh fTT_v[as=smp,vc=smp]
*** portion_v out
->amh kfl_v[as=it,vc=tr]
*** possess_v
->amh gnzb_v[as=rc,vc=ps]
*** postpone_v
->amh 'lf_v[as=it,vc=tr]
->amh zgy*_v[as=smp,vc=cs]
*** pounce_v on
->amh qWl_l_v[as=smp,vc=ps]
*** pound_v
->amh dqW_s_v[as=smp,vc=smp]
->amh dqq_v[as=smp,vc=tr]
->amh wqT_v[as=smp,vc=smp]
*** pound_v coarsely
->amh grdf_v[as=smp,vc=smp]
->amh T's_v[as=smp,vc=smp]
*** pour_v
->amh fss_v[as=smp,vc=tr]
*** pour_v abundantly
->amh n|gWdgWd_v[as=smp,vc=tr]
*** pour_v out
->amh fss_v[as=smp,vc=smp]
->amh zrgf_v[as=smp,vc=smp]
->amh mWl'_v[as=it,vc=smp]
*** pout_v
->amh bql_v[as=smp,vc=smp]
*** praise_v
->amh mWg_s_v[as=smp,vc=ps]
->amh msgn_v[as=smp,vc=tr]
->amh mWg_s_v[as=it,vc=ps]
->amh wd_s_v[as=smp,vc=tr]
*** praise_v greatly
->amh dnq_v[as=rc,vc=tr]
*** praise_v sparingly
->amh msgn_v[as=it,vc=tr]
*** praise_v unduly
->amh k'b_v[as=smp,vc=smp]
*** prance_v frolicked
->amh fnC*_v[as=smp,vc=smp]
*** pray_v
->amh Sl_y_v[as=smp,vc=smp]
*** preach_v
->amh sbk_v[as=smp,vc=smp]
*** prefer_v
->amh mrT_v[as=smp,vc=smp]
->amh l'q_v[as=smp,vc=tr]
->amh blT_v[as=smp,vc=tr]
*** prepare_v
->amh snad'_v[as=it,vc=ps]
->amh zgaj*_v[as=smp,vc=cs]
->amh snad'_v[as=smp,vc=cs]
->amh snad'_v[as=smp,vc=ps]
*** prepare_v oneself
->amh zgaj*_v[as=smp,vc=ps]
*** present_v
->amh qrb_v[as=smp,vc=tr]
->amh 'y*_v[as=smp,vc=cs]
*** preserve_v
->amh qWy_*_v[as=smp,vc=tr]
*** preside_v over
->amh c'l_v[as=smp,vc=cs]
*** press_v
->amh C'n_v[as=smp,vc=ps]
->amh gf'_v[as=rc,vc=ps]
*** press_v against
->amh fgfg_v[as=rc,vc=ps]
*** press_v down
->amh TqTq_v[as=smp,vc=smp]
*** press_v strongly
->amh gf'_v[as=it,vc=smp]
*** presume_v
->amh gm_t_v[as=smp,vc=smp]
*** pretend_v
->amh g|drdr_v[as=smp,vc=ps]
->amh q'T'_v[as=smp,vc=smp]
->amh msl_v[as=smp,vc=cs]
*** prevaricate_v
->amh qsaft_v[as=smp,vc=smp]
->amh wslt_v[as=smp,vc=smp]
*** prevent_v
->amh ns'_v[as=smp,vc=smp]
->amh klkl_v[as=smp,vc=smp]
*** prick_v
->amh wg'_v[as=smp,vc=smp]
->amh garT_v[as=smp,vc=smp]
*** print_v
->amh 't_m_v[as=smp,vc=ps]
->amh 't_m_v[as=smp,vc=smp]
*** prise_v apart
->amh blqT_v[as=smp,vc=smp]
*** prise_v open
->amh blqT_v[as=smp,vc=smp]
->amh blTT_v[as=smp,vc=smp]
*** produce_v
->amh gN*_v[as=smp,vc=cs]
->amh flq_v[as=smp,vc=tr]
->amh mrt_v[as=smp,vc=tr]
*** produce_v bulb
->amh kWrt_v[as=smp,vc=tr]
*** produce_v diarrhea
->amh qzn_v[as=smp,vc=smp]
*** produce_v feces
->amh qzn_v[as=smp,vc=smp]
*** produce_v fruit
->amh fr'_v[as=smp,vc=tr]
*** produce_v stool
->amh qzn_v[as=smp,vc=smp]
*** profane_v
->amh rks_v[as=smp,vc=tr]
*** profit_v
->amh ksb_v[as=smp,vc=smp]
*** progress_v
->amh ramd_v[as=smp,vc=ps]
*** project_v
->amh fnTr_v[as=smp,vc=cs]
->amh fnTq_v[as=smp,vc=smp]
->amh 'q_d_v[as=smp,vc=smp]
->amh fnTr_v[as=rc,vc=tr]
*** prolong_v
->amh rzm_v[as=smp,vc=tr]
*** promote_v
->amh xwm_v[as=smp,vc=smp]
->amh 'dg_v[as=smp,vc=cs]
*** pronounce_v sentence
->amh frd_v[as=smp,vc=smp]
*** propagate_v
->amh sraC*_v[as=smp,vc=cs]
*** prosper_v
->amh drj*_v[as=smp,vc=smp]
*** prostitute_v
->amh xrmWT_v[as=smp,vc=smp]
*** prostrate_v
->amh sgd_v[as=smp,vc=smp]
*** prove_v
->amh Ty_q_v[as=smp,vc=tr]
*** provoke_v slightly
->amh nk'_v[as=it,vc=smp]
*** prune_v
->amh gr_z_v[as=smp,vc=smp]
*** publicize_v
->amh sraC*_v[as=smp,vc=cs]
*** puff_v
->amh qs_t_v[as=rc,vc=tr]
*** puff_v up
->amh wT_r_v[as=smp,vc=ps]
*** pull_v
->amh gWt_t_v[as=smp,vc=smp]
->amh s'b_v[as=smp,vc=smp]
*** pull_v back
->amh sqTT_v[as=smp,vc=smp]
*** pull_v out
->amh xr_f_v[as=smp,vc=smp]
->amh fnql_v[as=smp,vc=smp]
->amh xr_f_v[as=smp,vc=ps]
->amh wlq_v[as=smp,vc=tr]
*** pull_v tight
->amh gt_r_v[as=smp,vc=smp]
*** pulverize_v
->amh dqW_s_v[as=smp,vc=smp]
*** punish_v
->amh qWnTT_v[as=smp,vc=smp]
->amh qT'_v[as=smp,vc=smp]
*** purchase_v
->amh gz'_v[as=smp,vc=smp]
*** purify_v
->amh Tr'_v[as=smp,vc=tr]
->amh Tr'_v[as=rc,vc=ps]
->amh Tl_l_v[as=smp,vc=tr]
*** purify_v distilled
->amh Tr'_v[as=rc,vc=tr]
*** purr_v
->amh kW|rfrf_v[as=smp,vc=ps]
*** pursue_v
->amh kt_l_v[as=it,vc=ps]
*** push_v
->amh gf'_v[as=smp,vc=smp]
*** push_v at
->amh gftr_v[as=rc,vc=ps]
*** push_v in
->amh sgsg_v[as=smp,vc=ps]
*** push_v into
->amh brqs_v[as=it,vc=smp]
*** push_v violently
->amh gftr_v[as=smp,vc=smp]
*** put_v
->amh Cm_r_v[as=smp,vc=smp]
->amh ktt_v[as=smp,vc=smp]
*** put_v aside
->amh qm_T_v[as=smp,vc=cs]
->amh wz_f_v[as=smp,vc=smp]
*** put_v down
->amh qm_T_v[as=smp,vc=cs]
->amh nwr_v[as=smp,vc=tr]
*** put_v emphasis
->amh Tbq_v[as=smp,vc=tr]
*** put_v into
->amh gb'_v[as=smp,vc=tr]
*** put_v on
->amh Tlq_v[as=smp,vc=tr]
*** putrefy_v
->amh Tnb'_v[as=smp,vc=tr]
->amh bxqT_v[as=smp,vc=smp]
*** puzzle_v
->amh dnagr_v[as=smp,vc=tr]
*** quaff_v off
->amh n|qarr_v[as=smp,vc=tr]
*** question_v
->amh Ty_q_v[as=smp,vc=smp]
*** quicken_v
->amh fTn_v[as=rc,vc=tr]
*** quote_v
->amh Tqs_v[as=smp,vc=smp]
*** rage_v
->amh f'm_v[as=it,vc=ps]
*** rain_v
->amh blg_v[as=smp,vc=smp]
->amh znb_v[as=smp,vc=smp]
*** rain_v constantly
->amh nznz_v[as=smp,vc=smp]
*** raise_v
->amh bql_v[as=smp,vc=tr]
->amh wT'_v[as=rc,vc=tr]
->amh Cm_r_v[as=smp,vc=smp]
*** rake_v
->amh n|gWall_v[as=smp,vc=tr]
*** rake_v together
->amh kfkf_v[as=smp,vc=smp]
->amh kmkm_v[as=smp,vc=smp]
*** ramble_v on
->amh zbarq_v[as=smp,vc=smp]
*** ransack_v
->amh zrf_v[as=smp,vc=smp]
->amh zrf_v[as=smp,vc=ps]
*** ransom_v
->amh bj_*_v[as=smp,vc=ps]
->amh waj*_v[as=smp,vc=smp]
*** rape_v
->amh df'_v[as=smp,vc=smp]
*** rate_v
->amh gm_t_v[as=smp,vc=smp]
*** ratify_v
->amh fr_m_v[as=it,vc=ps]
->amh Sdq_v[as=smp,vc=cs]
->amh Sn'_v[as=smp,vc=cs]
*** rattle_v
->amh n|gCagC_v[as=smp,vc=tr]
*** ravish_v
->amh mWClf_v[as=smp,vc=smp]
*** reach_v
->amh drs_v[as=smp,vc=smp]
*** reach_v adolescence
->amh gWrms_v[as=smp,vc=smp]
*** reach_v halfway
->amh gms_v[as=rc,vc=tr]
*** reach_v maturity
->amh bsl_v[as=smp,vc=smp]
*** reach_v out
->amh n|Trar'_v[as=smp,vc=ps]
->amh snzr_v[as=smp,vc=smp]
*** read_v
->amh nb_b_v[as=smp,vc=tr]
*** read_v fluently
->amh n|blbl_v[as=smp,vc=tr]
*** realize_v
->amh 'wq_v[as=smp,vc=smp]
->amh gnzb_v[as=smp,vc=ps]
*** reap_v
->amh lqm_v[as=smp,vc=smp]
*** reassemble_v
->amh gTm_v[as=it,vc=smp]
*** rebel_v
->amh xf_t_v[as=smp,vc=smp]
->amh 'mT_v[as=smp,vc=smp]
*** rebound_v
->amh gW'n_v[as=smp,vc=smp]
->amh gW'n_v[as=smp,vc=tr]
*** rebuke_v
->amh zlf_v[as=rc,vc=ps]
->amh zlf_v[as=smp,vc=smp]
->amh qWT'_v[as=smp,vc=ps]
*** recede_v
->amh fngT_v[as=smp,vc=tr]
*** receive_v
->amh rkb_v[as=smp,vc=ps]
->amh qb_l_v[as=smp,vc=ps]
*** recite_v
->amh dgm_v[as=smp,vc=smp]
*** recite_v prayers
->amh Sl_y_v[as=smp,vc=smp]
*** recite_v quickly
->amh nbnb_v[as=smp,vc=tr]
*** recognize_v
->amh ly_*_v[as=smp,vc=smp]
*** recoil_v
->amh rgT_v[as=rc,vc=ps]
*** recommend_v
->amh 'C*_v[as=smp,vc=smp]
*** reconcile_v
->amh 'r_q_v[as=smp,vc=tr]
->amh qrb_v[as=it,vc=tr]
->amh qrb_v[as=rc,vc=tr]
->amh sm'_v[as=it,vc=tr]
*** record_v
->amh wrs_v[as=it,vc=tr]
->amh zgb_v[as=smp,vc=smp]
*** recover_v
->amh d'n_v[as=smp,vc=smp]
->amh x'l_v[as=smp,vc=ps]
*** rectify_v
->amh 'k_l_v[as=it,vc=tr]
*** recuperate_v
->amh Tnkr_v[as=rc,vc=ps]
*** recur_v
->amh qsqs_v[as=smp,vc=ps]
*** redden_v
->amh ql'_v[as=smp,vc=tr]
*** redeem_v
->amh d'n_v[as=smp,vc=tr]
*** reduce_v
->amh nqs_v[as=smp,vc=smp]
->amh 'ns_v[as=smp,vc=cs]
->amh qn_s_v[as=smp,vc=smp]
->amh 'ns_v[as=smp,vc=smp]
*** refer_v to
->amh Tqs_v[as=smp,vc=smp]
*** refine_v
->amh nTr_v[as=smp,vc=smp]
->amh Tr'_v[as=rc,vc=ps]
->amh nTr_v[as=smp,vc=tr]
->amh ngWr_v[as=smp,vc=tr]
*** reflect_v
->amh n|Sbarq_v[as=smp,vc=tr]
*** refrain_v
->amh qWT_b_v[as=smp,vc=ps]
*** refuse_v
->amh Tmm_v[as=smp,vc=smp]
*** register_v
->amh mzgb_v[as=smp,vc=smp]
*** regret_v
->amh Tt_t_v[as=smp,vc=ps]
->amh qWC_*_v[as=smp,vc=smp]
->amh SS_t_v[as=smp,vc=ps]
*** regurgitate_v
->amh qrx*_v[as=smp,vc=tr]
*** rehearse_v
->amh lz_b_v[as=smp,vc=tr]
*** reign_v
->amh ngs_v[as=smp,vc=smp]
*** reimburse_v
->amh tk_'_v[as=smp,vc=smp]
*** reinforce_v
->amh Tnkr_v[as=rc,vc=tr]
->amh Tnkr_v[as=smp,vc=tr]
*** reject_v
->amh 'bl_v[as=it,vc=tr]
*** relapse_v
->amh grx*_v[as=smp,vc=tr]
*** relax_v
->amh zn'_v[as=smp,vc=smp]
->amh l'l'_v[as=smp,vc=smp]
->amh l'l'_v[as=smp,vc=tr]
*** release_v
->amh ft'_v[as=smp,vc=smp]
->amh lqq_v[as=smp,vc=ps]
->amh lqq_v[as=smp,vc=smp]
*** relieve_v
->amh qy_r_v[as=smp,vc=smp]
*** relish_v
->amh kWmkWm_v[as=smp,vc=smp]
*** rely_v on
->amh mk'_v[as=smp,vc=ps]
*** remain_v
->amh qWy_*_v[as=smp,vc=smp]
->amh qr*_v[as=smp,vc=smp]
->amh trf_v[as=smp,vc=smp]
*** remain_v fruitless
->amh 'fr_v[as=smp,vc=smp]
*** remember_v
->amh 'ws_v[as=smp,vc=tr]
*** remind_v
->amh 's_b_v[as=smp,vc=cs]
*** remove_v
->amh r'q_v[as=smp,vc=tr]
->amh qrf_v[as=smp,vc=smp]
*** rend_v out
->amh kray*_v[as=smp,vc=tr]
*** render_v judgment
->amh frd_v[as=smp,vc=smp]
*** render_v service
->amh glgl_v[as=smp,vc=tr]
->amh Tqm_v[as=smp,vc=smp]
*** render_v verdant
->amh lmlm_v[as=smp,vc=tr]
*** renew_v
->amh 'd_s_v[as=smp,vc=smp]
*** renew_v slightly
->amh 'd_s_v[as=it,vc=smp]
*** renounce_v
->amh k'd_v[as=smp,vc=smp]
->amh k'd_v[as=smp,vc=ps]
*** repair_v
->amh gTm_v[as=smp,vc=smp]
->amh Tg_n_v[as=smp,vc=smp]
->amh bj_*_v[as=it,vc=tr]
*** repeat_v
->amh dgm_v[as=smp,vc=smp]
*** repent_v
->amh Tt_t_v[as=smp,vc=ps]
->amh SS_t_v[as=smp,vc=ps]
*** report_v
->amh wg'_v[as=smp,vc=tr]
*** repose_v
->amh 'rf_v[as=smp,vc=smp]
*** represent_v
->amh wk_l_v[as=smp,vc=smp]
*** repress_v
->amh gt'_v[as=smp,vc=ps]
->amh gt'_v[as=smp,vc=smp]
*** reprimand_v
->amh zlf_v[as=rc,vc=ps]
->amh wqs_v[as=smp,vc=smp]
->amh zlf_v[as=smp,vc=smp]
*** reproach_v
->amh zlf_v[as=rc,vc=ps]
->amh wqs_v[as=smp,vc=smp]
->amh wqs_v[as=it,vc=ps]
->amh zlf_v[as=smp,vc=smp]
*** repudiate_v
->amh k'd_v[as=smp,vc=smp]
->amh k'd_v[as=smp,vc=ps]
*** rescue_v
->amh d'n_v[as=smp,vc=tr]
*** research_v into
->amh mrmr_v[as=rc,vc=ps]
*** resemble_v
->amh msl_v[as=smp,vc=smp]
*** resent_v
->amh xm_q_v[as=smp,vc=smp]
*** resign_v
->amh snbt_v[as=rc,vc=ps]
*** resist_v
->amh qwm_v[as=it,vc=ps]
*** resonate_v
->amh nb_b_v[as=smp,vc=smp]
*** respect_v
->amh fr'_v[as=smp,vc=ps]
*** rest_v
->amh 'rf_v[as=smp,vc=smp]
->amh dg_f_v[as=smp,vc=cs]
*** rest_v again
->amh 'kk_v[as=smp,vc=ps]
*** result_v from
->amh kt_l_v[as=smp,vc=ps]
*** result_v in
->amh gN*_v[as=smp,vc=cs]
*** retail_v
->amh xq_T_v[as=smp,vc=smp]
->amh crcr_v[as=smp,vc=smp]
*** retard_v
->amh qWy_*_v[as=smp,vc=tr]
*** retreat_v
->amh fgfg_v[as=smp,vc=tr]
->amh fngT_v[as=smp,vc=tr]
*** return_v
->amh ml_s_v[as=smp,vc=ps]
*** return_v back
->amh ml_s_v[as=smp,vc=smp]
*** reveal_v
->amh ks_t_v[as=smp,vc=smp]
->amh ks_t_v[as=smp,vc=ps]
*** reverberate_v
->amh gb'_v[as=rc,vc=cs]
*** revere_v
->amh kbr_v[as=smp,vc=smp]
->amh 'fr_v[as=smp,vc=ps]
*** review_v
->amh gWbN*_v[as=smp,vc=smp]
*** revive_v
->amh nq'_v[as=it,vc=smp]
*** revolt_v
->amh 'mT_v[as=smp,vc=smp]
*** revolve_v
->amh zwr_v[as=smp,vc=smp]
*** rhyme_v
->amh gTm_v[as=smp,vc=smp]
->amh sn_N_v[as=smp,vc=smp]
*** riddle_v
->amh bs'_v[as=smp,vc=ps]
*** ride_v pillion
->amh fnaTT_v[as=smp,vc=ps]
*** ridicule_v
->amh jyl_v[as=it,vc=tr]
->amh sl_q_v[as=rc,vc=ps]
*** ring_v
->amh dw_l_v[as=smp,vc=smp]
->amh qaCl_v[as=smp,vc=tr]
*** rinse_v
->amh gW|mTmT_v[as=smp,vc=ps]
->amh lqlq_v[as=smp,vc=tr]
*** rinse_v off
->amh lqlq_v[as=rc,vc=ps]
*** rinse_v out
->amh gW|mTmT_v[as=smp,vc=ps]
*** rip_v
->amh bWC_q_v[as=smp,vc=smp]
->amh qWnSl_v[as=smp,vc=smp]
->amh xrkt_v[as=smp,vc=smp]
->amh qdd_v[as=smp,vc=smp]
*** rip_v out
->amh fnql_v[as=smp,vc=smp]
*** rise_v
->amh n|kWaff_v[as=smp,vc=ps]
->amh 'dg_v[as=smp,vc=smp]
*** roam_v
->amh watt_v[as=smp,vc=smp]
->amh w|dldl_v[as=smp,vc=tr]
->amh n|kwatt_v[as=smp,vc=ps]
->amh n|kratt_v[as=smp,vc=ps]
*** roar_v
->amh gs'_v[as=smp,vc=tr]
*** roast_v
->amh Tbs_v[as=smp,vc=smp]
->amh qWl'_v[as=smp,vc=smp]
*** roast_v beans
->amh nkWt_v[as=smp,vc=ps]
*** rob_v
->amh nTq_v[as=it,vc=smp]
*** robe_v oneself
->amh Tf'_v[as=rc,vc=tr]
*** roll_v
->amh dfTT_v[as=smp,vc=smp]
->amh mlml_v[as=smp,vc=tr]
->amh n|dball_v[as=smp,vc=ps]
->amh n|kball_v[as=smp,vc=tr]
->amh d|bWlbWl_v[as=smp,vc=tr]
->amh n|kball_v[as=smp,vc=ps]
*** roll_v away
->amh x|blbl_v[as=smp,vc=tr]
->amh x|blbl_v[as=smp,vc=ps]
*** roll_v down
->amh n|dball_v[as=smp,vc=tr]
*** roll_v over
->amh d'T_v[as=smp,vc=smp]
*** roll_v up
->amh xbll_v[as=smp,vc=smp]
->amh 'Tf_v[as=it,vc=smp]
*** room_v with
->amh db_l_v[as=rc,vc=ps]
*** rot_v
->amh gm'_v[as=smp,vc=tr]
->amh bsbs_v[as=smp,vc=smp]
*** rotate_v
->amh zwr_v[as=smp,vc=smp]
*** round_v
->amh d|bWlbWl_v[as=smp,vc=tr]
*** round_v out
->amh d|blbl_v[as=smp,vc=ps]
*** rove_v
->amh n|kratt_v[as=smp,vc=ps]
*** row_v
->amh qzf_v[as=smp,vc=smp]
*** rub_v
->amh ft_g_v[as=smp,vc=smp]
->amh 'x*_v[as=smp,vc=smp]
->amh fgfg_v[as=smp,vc=smp]
->amh f'q_v[as=smp,vc=smp]
*** rub_v lightly
->amh 'x*_v[as=it,vc=smp]
*** ruffle_v
->amh qfrr_v[as=smp,vc=ps]
*** ruin_v
->amh frs_v[as=it,vc=tr]
*** rule_v
->amh smr_v[as=smp,vc=tr]
*** rule_v over
->amh gz'_v[as=smp,vc=smp]
->amh sfn_v[as=smp,vc=smp]
*** run_v
->amh rwT_v[as=smp,vc=smp]
*** run_v about
->amh rwT_v[as=it,vc=ps]
*** run_v away
->amh xx*_v[as=smp,vc=smp]
->amh frTT_v[as=smp,vc=smp]
*** run_v off
->amh ftlk_v[as=smp,vc=ps]
*** run_v over
->amh d'C_v[as=smp,vc=smp]
->amh d'T_v[as=smp,vc=smp]
*** run_v way
->amh kx_n_v[as=smp,vc=smp]
*** rush_v
->amh Tdf_v[as=rc,vc=ps]
->amh Tdf_v[as=rc,vc=tr]
->amh q|lblb_v[as=smp,vc=tr]
->amh xkxk_v[as=smp,vc=smp]
*** rush_v in
->amh rbrb_v[as=rc,vc=ps]
*** rust_v
->amh z'g_v[as=smp,vc=cs]
->amh z'g_v[as=smp,vc=smp]
*** sack_v
->amh snbt_v[as=rc,vc=tr]
*** sacrifice_v
->amh sw_'_v[as=smp,vc=smp]
*** sadden_v
->amh tk_z_v[as=smp,vc=cs]
*** sag_v
->amh rgb_v[as=smp,vc=smp]
*** sanctify_v
->amh bark_v[as=smp,vc=ps]
->amh bark_v[as=smp,vc=smp]
->amh qd_s_v[as=smp,vc=smp]
*** satiate_v
->amh Tgb_v[as=smp,vc=tr]
*** satisfy_v
->amh x'r_v[as=smp,vc=cs]
->amh rk'_v[as=smp,vc=tr]
*** save_v
->amh bj_*_v[as=smp,vc=ps]
->amh Trqm_v[as=rc,vc=tr]
->amh trf_v[as=smp,vc=smp]
->amh d'n_v[as=smp,vc=tr]
*** save_v economized
->amh qWT_b_v[as=smp,vc=smp]
*** saw_v
->amh krkr_v[as=smp,vc=smp]
*** say_v
->amh ngr_v[as=rc,vc=ps]
->amh b'l_v[as=smp,vc=smp]
*** scale_v
->amh f'q_v[as=smp,vc=smp]
*** scare_v
->amh fr'_v[as=smp,vc=cs]
->amh fr'_v[as=it,vc=cs]
*** scatter_v
->amh n|TbTb_v[as=rc,vc=tr]
->amh bt_n_v[as=smp,vc=smp]
->amh naN*_v[as=smp,vc=smp]
->amh nT_l_v[as=it,vc=smp]
->amh mnqr_v[as=smp,vc=smp]
*** scheme_v
->amh Cwl_v[as=smp,vc=smp]
*** scoff_v at
->amh wr_f_v[as=smp,vc=smp]
*** scoop_v
->amh 'fs_v[as=smp,vc=smp]
*** scoop_v up
->amh tmtm_v[as=smp,vc=tr]
->amh z'q_v[as=smp,vc=smp]
*** scorch_v
->amh lblb_v[as=smp,vc=smp]
->amh n|gbgb_v[as=smp,vc=tr]
->amh lblb_v[as=smp,vc=ps]
*** score_v
->amh gb'_v[as=smp,vc=tr]
*** scorn_v
->amh n|qWaxx_v[as=smp,vc=tr]
*** scour_v
->amh fqfq_v[as=smp,vc=smp]
*** scramble_v for
->amh xam'_v[as=smp,vc=ps]
*** scramble_v over
->amh bWC_q_v[as=rc,vc=ps]
*** scrape_v
->amh f'q_v[as=smp,vc=smp]
->amh C'r_v[as=smp,vc=smp]
->amh fgfg_v[as=smp,vc=smp]
->amh fgfg_v[as=smp,vc=ps]
->amh qff_v[as=smp,vc=smp]
->amh 'f_f_v[as=smp,vc=smp]
*** scratch_v
->amh C'r_v[as=smp,vc=smp]
->amh fWk_t_v[as=smp,vc=smp]
->amh bWaCr_v[as=smp,vc=smp]
*** scratch_v slightly
->amh 'kk_v[as=it,vc=smp]
->amh mWaCr_v[as=it,vc=smp]
*** scrawl_v
->amh C'r_v[as=it,vc=smp]
*** scream_v
->amh gWr'_v[as=smp,vc=tr]
->amh Cwh_v[as=smp,vc=smp]
*** screech_v
->amh sqTT_v[as=smp,vc=smp]
*** screen_v
->amh gard_v[as=smp,vc=ps]
->amh gard_v[as=smp,vc=smp]
->amh kl_l_v[as=smp,vc=smp]
*** scribble_v
->amh C'r_v[as=it,vc=smp]
->amh C'r_v[as=smp,vc=smp]
->amh mWaCr_v[as=it,vc=smp]
*** scrounge_v
->amh n|sWlsWl_v[as=smp,vc=ps]
*** scrub_v
->amh fqfq_v[as=smp,vc=smp]
->amh ft_g_v[as=smp,vc=smp]
*** scrutinize_v
->amh glbT_v[as=rc,vc=tr]
*** scuff_v
->amh xkW_t_v[as=smp,vc=smp]
*** sculpt_v engraved
->amh qrT_v[as=smp,vc=smp]
*** sculpture_v
->amh qrS_v[as=smp,vc=ps]
*** seal_v
->amh 'x_g_v[as=smp,vc=smp]
*** search_v
->amh gWrgWr_v[as=smp,vc=smp]
*** search_v about
->amh qabz_v[as=smp,vc=smp]
*** search_v around
->amh brbr_v[as=smp,vc=smp]
*** search_v for
->amh fl_g_v[as=smp,vc=smp]
*** secede_v
->amh gnTl_v[as=smp,vc=ps]
*** secure_v
->amh qrqb_v[as=smp,vc=smp]
->amh qrqb_v[as=smp,vc=ps]
*** see_v
->amh 'y*_v[as=smp,vc=smp]
*** seek_v
->amh fl_g_v[as=smp,vc=smp]
*** seek_v advice
->amh mkr_v[as=it,vc=ps]
*** seek_v information
->amh Ty_q_v[as=it,vc=ps]
*** seek_v protection
->amh Tg'_v[as=smp,vc=ps]
*** seek_v refuge
->amh Tl_l_v[as=smp,vc=ps]
*** seethe_v
->amh n|fqfq_v[as=smp,vc=ps]
*** seize_v
->amh bWC_q_v[as=smp,vc=smp]
->amh y'z_v[as=smp,vc=smp]
*** select_v
->amh mrT_v[as=smp,vc=ps]
->amh mrT_v[as=smp,vc=smp]
*** sell_v
->amh xyT_v[as=smp,vc=smp]
*** sell_v grain
->amh qn'_v[as=smp,vc=tr]
*** sell_v out
->amh xaxT_v[as=smp,vc=smp]
->amh Tr'_v[as=rc,vc=tr]
*** sell_v quickly
->amh xaxT_v[as=smp,vc=smp]
*** send_v
->amh l'k_v[as=smp,vc=smp]
->amh sdd_v[as=smp,vc=smp]
*** separate_v
->amh ly_*_v[as=smp,vc=smp]
->amh ly_*_v[as=it,vc=smp]
*** separate_v up
->amh nT_l_v[as=it,vc=smp]
*** serve_v
->amh glgl_v[as=smp,vc=tr]
->amh qrb_v[as=smp,vc=tr]
->amh sf'_v[as=smp,vc=smp]
->amh kadm_v[as=smp,vc=smp]
*** set_v
->amh rbrb_v[as=smp,vc=smp]
->amh 'k_l_v[as=it,vc=tr]
*** set_v ablaze
->amh n|bWgbWg_v[as=smp,vc=tr]
*** set_v rules
->amh wT'_v[as=smp,vc=tr]
*** set_v up
->amh qwm_v[as=it,vc=ps]
*** settle_v
->amh sk_n_v[as=smp,vc=smp]
->amh rg'_v[as=it,vc=ps]
*** sew_v finely
->amh qmqm_v[as=smp,vc=smp]
*** sew_v up
->amh sf'_v[as=smp,vc=smp]
*** shake_v
->amh r'd_v[as=smp,vc=smp]
->amh nqnq_v[as=rc,vc=tr]
->amh ng'_v[as=rc,vc=tr]
->amh nqnq_v[as=smp,vc=smp]
->amh wzwz_v[as=smp,vc=smp]
->amh wzwz_v[as=rc,vc=tr]
*** shake_v out
->amh rgf_v[as=rc,vc=tr]
->amh rgf_v[as=it,vc=tr]
*** share_v
->amh gr'_v[as=rc,vc=ps]
->amh gr'_v[as=rc,vc=tr]
*** share_v out
->amh md_b_v[as=smp,vc=smp]
*** sharpen_v
->amh qrS_v[as=smp,vc=smp]
->amh fC*_v[as=rc,vc=tr]
->amh xwl_v[as=smp,vc=cs]
*** shave_v
->amh laC*_v[as=smp,vc=smp]
*** shave_v off
->amh laC*_v[as=smp,vc=smp]
*** shear_v
->amh xl_t_v[as=smp,vc=smp]
*** shell_v
->amh flfl_v[as=smp,vc=smp]
*** shelter_v
->amh db_q_v[as=smp,vc=smp]
->amh Tg'_v[as=smp,vc=cs]
->amh Tl_l_v[as=smp,vc=cs]
*** shift_v
->amh lw_T_v[as=smp,vc=smp]
*** shimmer_v
->amh b|rqrq_v[as=smp,vc=ps]
*** shine_v
->amh b|rqrq_v[as=smp,vc=tr]
*** shit_v
->amh 'r'_v[as=smp,vc=smp]
*** shiver_v
->amh r|btbt_v[as=smp,vc=ps]
*** shock_v
->amh dngT_v[as=smp,vc=smp]
->amh dngT_v[as=smp,vc=cs]
->amh sq_q_v[as=smp,vc=smp]
->amh dngT_v[as=rc,vc=ps]
*** shop_v
->amh gby*_v[as=smp,vc=smp]
*** shorten_v
->amh krkm_v[as=smp,vc=smp]
->amh 'Tr_v[as=smp,vc=cs]
*** shout_v
->amh wk'_v[as=smp,vc=tr]
*** shove_v
->amh gf'_v[as=smp,vc=smp]
->amh gftr_v[as=smp,vc=smp]
*** shovel_v
->amh z'q_v[as=smp,vc=smp]
*** show_v
->amh 'y*_v[as=smp,vc=cs]
*** show_v around
->amh gWbN*_v[as=smp,vc=cs]
*** show_v concern
->amh Cnq_v[as=smp,vc=ps]
*** show_v favour
->amh dl'_v[as=smp,vc=tr]
->amh dl'_v[as=rc,vc=tr]
*** show_v off
->amh kWr'_v[as=smp,vc=smp]
->amh kWr'_v[as=it,vc=ps]
*** show_v out
->amh xN_*_v[as=smp,vc=smp]
*** show_v pity
->amh kWn_n_v[as=smp,vc=cs]
*** shower_v
->amh znb_v[as=smp,vc=cs]
*** shrink_v
->amh kW|rfrf_v[as=smp,vc=ps]
->amh 'Tr_v[as=smp,vc=smp]
*** shrivel_v
->amh kWramt_v[as=smp,vc=tr]
->amh T|mlml_v[as=smp,vc=ps]
*** shrivel_v up
->amh qWrmd_v[as=smp,vc=smp]
*** shroud_v
->amh gnz_v[as=smp,vc=smp]
*** shudder_v
->amh sqTT_v[as=smp,vc=smp]
*** shuffle_v
->amh bw_z_v[as=smp,vc=smp]
->amh 'm_s_v[as=smp,vc=smp]
*** shut_v
->amh Cf_n_v[as=smp,vc=smp]
*** shut_v off
->amh zg'_v[as=smp,vc=smp]
*** shy_v
->amh brgg_v[as=smp,vc=smp]
->amh dnbr_v[as=smp,vc=smp]
*** sift_v
->amh Tnff_v[as=smp,vc=tr]
*** sign_v
->amh fr_m_v[as=smp,vc=smp]
->amh l'f_v[as=smp,vc=smp]
*** signify_v
->amh mlkt_v[as=smp,vc=tr]
*** simmer_v
->amh n|fqfq_v[as=smp,vc=ps]
->amh n|tktk_v[as=smp,vc=ps]
*** simplify_v
->amh qll_v[as=smp,vc=tr]
*** sing_v
->amh zym_v[as=smp,vc=cs]
->amh zm_r_v[as=smp,vc=smp]
->amh zfn_v[as=smp,vc=smp]
*** singe_v
->amh tntg_v[as=smp,vc=smp]
->amh lblb_v[as=smp,vc=smp]
->amh l'f_v[as=smp,vc=ps]
*** sink_v
->amh zq_T_v[as=smp,vc=smp]
->amh Tlq_v[as=smp,vc=smp]
->amh sTm_v[as=smp,vc=smp]
->amh smT_v[as=smp,vc=smp]
*** sink_v in
->amh gWdgWd_v[as=smp,vc=smp]
*** sip_v
->amh qsm_v[as=it,vc=smp]
->amh gWnC*_v[as=smp,vc=ps]
->amh n|dqdq_v[as=smp,vc=tr]
->amh qsm_v[as=smp,vc=smp]
->amh m'g_v[as=smp,vc=smp]
*** sip_v loudly
->amh m'g_v[as=smp,vc=tr]
*** sit_v comfortably
->amh dldl_v[as=rc,vc=ps]
->amh mc_*_v[as=it,vc=ps]
*** sit_v down
->amh qm_T_v[as=smp,vc=ps]
*** sit_v idle
->amh gxr_v[as=smp,vc=ps]
*** sit_v idly
->amh gWl_t_v[as=smp,vc=ps]
->amh wz_f_v[as=smp,vc=ps]
->amh zrfT_v[as=smp,vc=ps]
*** sizzle_v
->amh css_v[as=smp,vc=smp]
*** skim_v
->amh gff_v[as=smp,vc=smp]
*** skin_v over
->amh Tg_g_v[as=smp,vc=smp]
*** slacken_v
->amh gWt_t_v[as=rc,vc=ps]
*** slam_v
->amh Trqm_v[as=smp,vc=smp]
->amh drgm_v[as=smp,vc=ps]
->amh drgm_v[as=smp,vc=smp]
*** slander_v
->amh g'T_v[as=smp,vc=smp]
->amh sdb_v[as=it,vc=ps]
*** slant_v
->amh znbl_v[as=smp,vc=cs]
->amh znn_v[as=smp,vc=smp]
->amh dn_n_v[as=smp,vc=smp]
*** slap_v
->amh g'g'_v[as=smp,vc=smp]
*** slaughter_v
->amh 'rd_v[as=smp,vc=smp]
*** sleep_v
->amh tN_'_v[as=smp,vc=smp]
*** slice_v across
->amh qrdd_v[as=smp,vc=smp]
*** slide_v
->amh dalT_v[as=smp,vc=tr]
->amh n|xratt_v[as=smp,vc=ps]
->amh dalT_v[as=smp,vc=smp]
*** sling_v
->amh wnCf_v[as=smp,vc=smp]
*** slip_v
->amh n|xatt_v[as=smp,vc=ps]
->amh n|xratt_v[as=smp,vc=ps]
->amh mWl_C_v[as=smp,vc=tr]
->amh dalT_v[as=smp,vc=smp]
->amh dalT_v[as=smp,vc=tr]
->amh n|xatt_v[as=smp,vc=tr]
*** slip_v away
->amh ftlk_v[as=smp,vc=tr]
*** slip_v out
->amh ftlk_v[as=smp,vc=tr]
*** slit_v
->amh snbT_v[as=smp,vc=smp]
*** slit_v open
->amh trtr_v[as=smp,vc=smp]
*** slither_v
->amh s|lklk_v[as=smp,vc=ps]
*** slope_v downward
->amh zbT_v[as=smp,vc=smp]
*** slow_v down
->amh lm_T_v[as=smp,vc=tr]
*** smart_v
->amh qWTqWT_v[as=smp,vc=smp]
->amh TzTz_v[as=smp,vc=smp]
*** smash_v
->amh nkt_v[as=smp,vc=smp]
*** smash_v down
->amh Trms_v[as=smp,vc=smp]
*** smash_v up
->amh nkWt_v[as=it,vc=tr]
*** smear_v
->amh lqlq_v[as=rc,vc=ps]
->amh qb_'_v[as=smp,vc=ps]
->amh lqlq_v[as=smp,vc=smp]
->amh qb_'_v[as=smp,vc=smp]
*** smile_v
->amh fk'_v[as=smp,vc=smp]
->amh fgg_v[as=smp,vc=smp]
*** smirk_v
->amh glfT_v[as=smp,vc=smp]
*** smoke_v
->amh Tys_v[as=smp,vc=tr]
->amh Tys_v[as=smp,vc=smp]
->amh TT_'_v[as=smp,vc=smp]
*** smooth_v
->amh lsls_v[as=smp,vc=tr]
->amh lmss_v[as=smp,vc=smp]
->amh lz_b_v[as=smp,vc=tr]
*** smudge_v
->amh Cmalq_v[as=smp,vc=tr]
*** smuggle_v out
->amh xWlk_v[as=smp,vc=cs]
*** snap_v
->amh bT_s_v[as=it,vc=smp]
->amh bT_s_v[as=smp,vc=smp]
->amh n|T'T'_v[as=smp,vc=ps]
*** snap_v completely
->amh qlTm_v[as=it,vc=ps]
*** snatch_v
->amh qm_'_v[as=smp,vc=smp]
->amh mntf_v[as=smp,vc=smp]
->amh mnCq_v[as=smp,vc=smp]
->amh ktlb_v[as=smp,vc=smp]
->amh nTq_v[as=smp,vc=smp]
->amh mWClf_v[as=smp,vc=ps]
->amh qm_'_v[as=smp,vc=ps]
*** sneeze_v
->amh 'nTs_v[as=smp,vc=smp]
*** sniff_v
->amh nfnf_v[as=smp,vc=tr]
*** sniff_v around
->amh l|kfkf_v[as=smp,vc=ps]
->amh l|ksks_v[as=smp,vc=ps]
*** snore_v
->amh kWrf_v[as=smp,vc=tr]
*** snuff_v
->amh trkWs_v[as=smp,vc=smp]
->amh kWstr_v[as=smp,vc=smp]
*** soak_v
->amh r's_v[as=smp,vc=tr]
->amh 'j_l_v[as=smp,vc=smp]
->amh r's_v[as=smp,vc=smp]
->amh zf_q_v[as=smp,vc=ps]
->amh bxqT_v[as=smp,vc=tr]
->amh Tmq_v[as=smp,vc=smp]
->amh nkr_v[as=smp,vc=smp]
*** sob_v
->amh n|sqsq_v[as=smp,vc=ps]
*** sob_v bitterly
->amh nfrq_v[as=smp,vc=smp]
->amh n|sqsq_v[as=smp,vc=ps]
*** soften_v
->amh lsls_v[as=smp,vc=tr]
->amh lax*_v[as=smp,vc=tr]
*** solidify_v
->amh TT_r_v[as=smp,vc=tr]
->amh TT_r_v[as=smp,vc=smp]
->amh dd_r_v[as=smp,vc=smp]
*** solve_v
->amh ft'_v[as=smp,vc=smp]
->amh qrf_v[as=smp,vc=smp]
*** soothe_v
->amh rg'_v[as=it,vc=tr]
*** sow_v
->amh zr'_v[as=smp,vc=smp]
*** spare_v
->amh qWy_*_v[as=smp,vc=tr]
*** spark_v
->amh b|rqrq_v[as=smp,vc=tr]
*** sparkle_v
->amh b|lClC_v[as=smp,vc=ps]
->amh n|Sbarq_v[as=smp,vc=tr]
*** speak_v convincingly
->amh msl_v[as=smp,vc=cs]
*** speak_v well
->amh mWg_s_v[as=smp,vc=tr]
*** speak_v
->amh ngr_v[as=rc,vc=ps]
*** speak_v to $n
->amh $n[cs=acc] ngr_v[as=rc,vc=tr,ob=[+expl,-p1,-p2]] ; || 1, -1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax ; 0=1 plr:ob|plr
*** speed_v
->amh fTn_v[as=rc,vc=tr]
*** speed_v up
->amh fTn_v[as=smp,vc=smp]
*** spend_v
->amh mWx_r_v[as=smp,vc=ps]
*** spend_v the day ; ^ spend_v 0
->amh w'l_v[as=smp,vc=smp]
*** spice_v
->amh T'm_v[as=smp,vc=tr]
->amh qm_m_v[as=smp,vc=smp]
*** spill_v
->amh fss_v[as=smp,vc=tr]
->amh df'_v[as=smp,vc=smp]
->amh klbs_v[as=smp,vc=smp]
*** spill_v over
->amh fss_v[as=smp,vc=smp]
*** spit_v
->amh tf'_v[as=smp,vc=smp]
*** spit_v playfully
->amh tf'_v[as=rc,vc=ps]
*** splash_v
->amh n|bWatr_v[as=smp,vc=tr]
*** splash_v about
->amh rC*_v[as=rc,vc=ps]
*** split_v
->amh kfl_v[as=rc,vc=ps]
->amh flT_v[as=smp,vc=smp]
*** split_v finely
->amh snTr_v[as=smp,vc=smp]
*** split_v splintered
->amh snTq_v[as=smp,vc=smp]
*** split_v up
->amh nT_l_v[as=it,vc=ps]
->amh nT_l_v[as=it,vc=smp]
->amh r'q_v[as=it,vc=ps]
*** spoil_v
->amh bxqT_v[as=rc,vc=tr]
->amh n|dlaqq_v[as=smp,vc=tr]
->amh blax*_v[as=smp,vc=tr]
->amh mWlaqq_v[as=smp,vc=tr]
->amh n|qbarr_v[as=smp,vc=tr]
->amh nfrq_v[as=rc,vc=tr]
*** sponge_v
->amh qlawT_v[as=smp,vc=smp]
*** spread_v
->amh zmt_v[as=rc,vc=tr]
->amh nz'_v[as=smp,vc=smp]
->amh n|Tall_v[as=smp,vc=ps]
->amh sf'_v[as=it,vc=ps]
->amh zmt_v[as=rc,vc=ps]
*** spread_v about
->amh nsns_v[as=smp,vc=ps]
->amh nsns_v[as=smp,vc=smp]
*** spread_v carpet
->amh 'nTf_v[as=smp,vc=smp]
*** spread_v out
->amh zrg'_v[as=smp,vc=smp]
*** spring_v out
->amh mnC*_v[as=smp,vc=smp]
*** sprinkle_v
->amh nsans_v[as=smp,vc=smp]
->amh rC*_v[as=smp,vc=smp]
->amh r|kfkf_v[as=smp,vc=tr]
->amh nsns_v[as=smp,vc=smp]
*** sprout_v
->amh qWTqWT_v[as=smp,vc=tr]
->amh qWngWl_v[as=smp,vc=smp]
->amh qWngWl_v[as=smp,vc=tr]
*** spur_v
->amh kWrkWr_v[as=smp,vc=smp]
->amh kWlkWl_v[as=smp,vc=smp]
*** spurn_v
->amh Tl'_v[as=it,vc=tr]
*** squander_v
->amh bakn_v[as=smp,vc=tr]
*** squander_v money
->amh mnzr_v[as=smp,vc=smp]
*** squash_v
->amh Cflq_v[as=smp,vc=ps]
->amh fTfT_v[as=smp,vc=smp]
->amh Cflq_v[as=smp,vc=smp]
->amh lfaCq_v[as=smp,vc=tr]
*** squash_v flat
->amh dfTT_v[as=smp,vc=smp]
*** squat_v
->amh kWrtm_v[as=smp,vc=ps]
*** squat_v down
->amh kWrtm_v[as=it,vc=ps]
*** squeak_v
->amh sqTT_v[as=smp,vc=smp]
*** squeeze_v
->amh Cb_T_v[as=smp,vc=smp]
->amh frT_v[as=smp,vc=tr]
->amh Cmq_v[as=smp,vc=smp]
->amh lTlT_v[as=smp,vc=ps]
*** squeeze_v out
->amh mgl_v[as=smp,vc=tr]
->amh lfaCq_v[as=smp,vc=tr]
*** squeeze_v together
->amh kWrtm_v[as=it,vc=smp]
*** stab_v
->amh wg'_v[as=smp,vc=smp]
*** stabilize_v
->amh drj*_v[as=rc,vc=tr]
*** stack_v
->amh rbrb_v[as=smp,vc=smp]
*** stagger_v
->amh dnaqf_v[as=smp,vc=ps]
->amh g|trtr_v[as=smp,vc=ps]
->amh n|gdgd_v[as=rc,vc=tr]
->amh w|trtr_v[as=smp,vc=ps]
*** stain_v
->amh bk_l_v[as=smp,vc=smp]
*** stalk_v out
->amh kl_l_v[as=smp,vc=smp]
*** stammer_v
->amh n|tbatb_v[as=smp,vc=ps]
*** stamp_v
->amh dqdq_v[as=smp,vc=smp]
->amh 't_m_v[as=smp,vc=smp]
*** stamp_v out
->amh d's_v[as=smp,vc=smp]
->amh dmss_v[as=smp,vc=smp]
->amh dmss_v[as=smp,vc=ps]
*** stand_v out
->amh gWl'_v[as=smp,vc=smp]
->amh nT_l_v[as=smp,vc=ps]
*** stand_v up
->amh qwm_v[as=smp,vc=smp]
->amh ns'_v[as=smp,vc=ps]
*** stare_v
->amh fzz_v[as=smp,vc=smp]
*** stare_v fiercely
->amh glamT_v[as=smp,vc=ps]
->amh glamT_v[as=smp,vc=smp]
*** stare_v fixedly
->amh tkWr_v[as=smp,vc=tr]
*** start_v
->amh jm_r_v[as=smp,vc=smp]
->amh wT_n_v[as=smp,vc=smp]
->amh kft_v[as=smp,vc=ps]
->amh b't_v[as=smp,vc=smp]
->amh ks_t_v[as=smp,vc=ps]
*** start_v draining
->amh Tff_v[as=smp,vc=smp]
*** start_v flaying
->amh kWbkWb_v[as=smp,vc=tr]
*** start_v ripening
->amh gWmr'_v[as=smp,vc=smp]
*** start_v trouble
->amh qWsqWs_v[as=smp,vc=smp]
*** startle_v
->amh dngT_v[as=smp,vc=smp]
->amh dngT_v[as=smp,vc=cs]
->amh dngT_v[as=rc,vc=ps]
*** steal_v
->amh srq_v[as=smp,vc=smp]
*** stick_v
->amh C'r_v[as=smp,vc=smp]
*** stick_v around
->amh gt_r_v[as=smp,vc=ps]
*** stick_v onto
->amh lakk_v[as=smp,vc=smp]
->amh lakk_v[as=smp,vc=ps]
*** stick_v together
->amh lT_f_v[as=it,vc=ps]
->amh lT_f_v[as=smp,vc=smp]
->amh Tbq_v[as=rc,vc=tr]
*** stimulate_v
->amh qsqs_v[as=smp,vc=smp]
*** sting_v
->amh ndf_v[as=smp,vc=smp]
*** stink_v
->amh krf'_v[as=smp,vc=smp]
->amh Tnb'_v[as=smp,vc=smp]
->amh qrn'_v[as=smp,vc=smp]
->amh qWn_s_v[as=smp,vc=smp]
->amh gm'_v[as=smp,vc=smp]
->amh xtt_v[as=smp,vc=smp]
*** stir_v
->amh msl_v[as=rc,vc=tr]
->amh 'm_s_v[as=smp,vc=smp]
->amh ns'_v[as=it,vc=ps]
*** stir_v up
->amh qWl'_v[as=it,vc=tr]
->amh dfrs_v[as=smp,vc=tr]
->amh qsqs_v[as=smp,vc=ps]
*** stitch_v
->amh sf'_v[as=smp,vc=smp]
*** stoke_v up
->amh magd_v[as=smp,vc=smp]
*** stone_v
->amh wgr_v[as=smp,vc=smp]
*** stoop_v
->amh fndd_v[as=smp,vc=tr]
->amh znbl_v[as=smp,vc=cs]
->amh gWnbs_v[as=smp,vc=tr]
->amh zl_s_v[as=smp,vc=smp]
->amh ql_s_v[as=smp,vc=smp]
*** stop_v
->amh qwm_v[as=smp,vc=smp]
->amh nTb_v[as=rc,vc=ps]
->amh tw_v[as=smp,vc=smp]
->amh 'g_d_v[as=smp,vc=ps]
*** stop_v growing
->amh C'C'_v[as=smp,vc=smp]
*** stow_v away
->amh qWaTr_v[as=smp,vc=smp]
*** straighten_v
->amh qn'_v[as=smp,vc=tr]
->amh qn'_v[as=rc,vc=tr]
*** straighten_v out
->amh 'r_q_v[as=smp,vc=smp]
*** strain_v
->amh Tl_l_v[as=smp,vc=tr]
*** strangle_v
->amh 'nq_v[as=smp,vc=ps]
->amh 'nq_v[as=smp,vc=smp]
*** stream_v
->amh n|TfTf_v[as=smp,vc=ps]
->amh mWCmWC_v[as=smp,vc=smp]
*** strengthen_v
->amh brt'_v[as=smp,vc=tr]
*** stretch_v
->amh n|Trar'_v[as=smp,vc=tr]
->amh wT_r_v[as=smp,vc=smp]
*** stretch_v out
->amh zrg'_v[as=smp,vc=smp]
->amh zr_r_v[as=smp,vc=smp]
*** stretch_v tight
->amh gt_r_v[as=smp,vc=smp]
*** strike_v
->amh dw_l_v[as=smp,vc=smp]
->amh mt'_v[as=rc,vc=ps]
->amh br_q_v[as=smp,vc=smp]
->amh qWndd_v[as=smp,vc=smp]
->amh mt'_v[as=smp,vc=ps]
->amh mt'_v[as=smp,vc=smp]
*** strike_v gently
->amh lkW_f_v[as=smp,vc=smp]
*** strike_v repeatedly
->amh qTqT_v[as=smp,vc=smp]
->amh qTqT_v[as=smp,vc=ps]
*** strike_v suddenly
->amh ds_m_v[as=smp,vc=smp]
*** strip_v
->amh glff_v[as=smp,vc=smp]
*** strip_v leaves
->amh lmlm_v[as=smp,vc=smp]
*** strip_v off
->amh glb_v[as=smp,vc=smp]
->amh jrgg_v[as=smp,vc=smp]
->amh gff_v[as=smp,vc=smp]
->amh Zrgg_v[as=smp,vc=smp]
*** strive_v
->amh dkm_v[as=smp,vc=smp]
*** strive_v for
->amh T'r_v[as=it,vc=ps]
*** struggle_v
->amh tagl_v[as=smp,vc=smp]
*** struggle_v over
->amh nTq_v[as=it,vc=ps]
->amh nTq_v[as=rc,vc=ps]
*** stub_v out
->amh trkWs_v[as=smp,vc=smp]
*** study_v
->amh Tn'_v[as=smp,vc=tr]
*** study_v deeply
->amh mrmr_v[as=rc,vc=ps]
*** stuff_v
->amh sn_g_v[as=smp,vc=smp]
->amh 'C_q_v[as=smp,vc=smp]
->amh TqTq_v[as=smp,vc=smp]
->amh 'gW_r_v[as=smp,vc=ps]
->amh 'gW_r_v[as=smp,vc=smp]
->amh wT_q_v[as=smp,vc=smp]
->amh sksk_v[as=smp,vc=smp]
->amh 'm_q_v[as=smp,vc=smp]
->amh gWs_r_v[as=smp,vc=smp]
->amh gWsgWs_v[as=smp,vc=smp]
->amh wx_q_v[as=smp,vc=smp]
*** stuff_v in
->amh sgsg_v[as=smp,vc=smp]
->amh zrnq_v[as=smp,vc=smp]
*** stuff_v into
->amh gWsgWs_v[as=smp,vc=smp]
->amh gWs_r_v[as=smp,vc=smp]
*** stumble_v
->amh wlakf_v[as=smp,vc=ps]
->amh dnaqf_v[as=smp,vc=ps]
*** stutter_v
->amh wlakf_v[as=smp,vc=ps]
->amh kWlatf_v[as=smp,vc=ps]
*** subdue_v
->amh gWnbs_v[as=smp,vc=cs]
*** submerge_v
->amh Tlq_v[as=smp,vc=smp]
*** subside_v
->amh gWdl_v[as=smp,vc=smp]
*** subsidize_v
->amh dgW_m_v[as=smp,vc=smp]
*** substitute_v
->amh tk_'_v[as=smp,vc=smp]
*** subtract_v
->amh qn_s_v[as=smp,vc=smp]
->amh qn_s_v[as=rc,vc=tr]
->amh qn_s_v[as=smp,vc=ps]
*** suck_v
->amh mTT_v[as=smp,vc=smp]
->amh mzmz_v[as=smp,vc=smp]
->amh mTmT_v[as=smp,vc=smp]
->amh Tb'_v[as=smp,vc=smp]
*** suck_v up
->amh m'g_v[as=smp,vc=tr]
*** suck_v vigorously
->amh mgmg_v[as=smp,vc=smp]
*** suckle_v
->amh mTmT_v[as=smp,vc=smp]
->amh Tb'_v[as=smp,vc=smp]
*** sue_v
->amh kss_v[as=smp,vc=smp]
*** suffer_v
->amh n|glat'_v[as=smp,vc=ps]
->amh n|gbgb_v[as=smp,vc=ps]
->amh gWd'_v[as=smp,vc=ps]
*** suffer_v greatly
->amh gWsqWl_v[as=rc,vc=ps]
*** suffocate_v
->amh 'f_n_v[as=smp,vc=smp]
->amh 'f_n_v[as=smp,vc=ps]
->amh 'nq_v[as=smp,vc=smp]
*** sulk_v
->amh n|Trbb_v[as=smp,vc=ps]
*** sum_v up
->amh dm_r_v[as=smp,vc=ps]
->amh dm_r_v[as=smp,vc=smp]
*** summon_v
->amh Tr'_v[as=smp,vc=cs]
*** superimpose_v
->amh nbr_v[as=it,vc=tr]
*** superintend_v
->amh qWTr_v[as=it,vc=ps]
*** supervise_v
->amh qWTr_v[as=it,vc=ps]
*** supply_v plentifully
->amh Tgb_v[as=rc,vc=tr]
*** support_v
->amh dg_f_v[as=it,vc=ps]
->amh mrkWz_v[as=smp,vc=ps]
->amh dg_f_v[as=smp,vc=smp]
*** suppress_v
->amh C'n_v[as=smp,vc=ps]
*** suppurate_v
->amh mrqz_v[as=smp,vc=smp]
->amh nfrq_v[as=smp,vc=smp]
->amh f|rqrq_v[as=smp,vc=ps]
->amh mrqz_v[as=smp,vc=tr]
*** surpass_v
->amh blT_v[as=smp,vc=smp]
->amh mz_n_v[as=smp,vc=tr]
*** surprise_v
->amh dnq_v[as=smp,vc=smp]
->amh dngT_v[as=rc,vc=tr]
->amh dnq_v[as=smp,vc=cs]
*** surprise_v amazed
->amh grm_v[as=smp,vc=ps]
*** surround_v
->amh kbb_v[as=smp,vc=smp]
->amh kbb_v[as=rc,vc=tr]
*** survey_v
->amh qy_s_v[as=smp,vc=smp]
->amh Tn'_v[as=smp,vc=tr]
->amh qaN*_v[as=smp,vc=smp]
->amh qy_s_v[as=smp,vc=ps]
*** suspend_v
->amh n|TlTl_v[as=smp,vc=tr]
*** swallow_v
->amh w'T_v[as=smp,vc=smp]
*** swallow_v whole
->amh slqT_v[as=smp,vc=smp]
*** swarm_v
->amh fl'_v[as=smp,vc=smp]
->amh f|lklk_v[as=smp,vc=ps]
*** sway_v
->amh xbxb_v[as=smp,vc=cs]
->amh wzwz_v[as=rc,vc=ps]
->amh rgd_v[as=smp,vc=tr]
*** sway_v rhythmically
->amh rgrg_v[as=smp,vc=tr]
*** swear_v
->amh gz_t_v[as=smp,vc=ps]
*** sweep_v
->amh mnTr_v[as=smp,vc=smp]
->amh 's_s_v[as=smp,vc=smp]
->amh Trg_v[as=smp,vc=smp]
*** sweeten_v
->amh TafT_v[as=smp,vc=tr]
*** swim_v
->amh waN*_v[as=smp,vc=smp]
*** swindle_v
->amh C|brbr_v[as=smp,vc=tr]
*** swing_v
->amh n|TlTl_v[as=smp,vc=ps]
*** swish_v
->amh nsns_v[as=smp,vc=smp]
*** swoon_v
->amh z|lflf_v[as=smp,vc=ps]
*** synthesize_v
->amh qnbr_v[as=rc,vc=tr]
*** tag_v on
->amh gWt_t_v[as=smp,vc=smp]
*** take_v
->amh wsd_v[as=smp,vc=smp]
*** take_v aback
->amh dngT_v[as=rc,vc=tr]
*** take_v aim
->amh zgb_v[as=smp,vc=smp]
*** take_v apart
->amh ly_*_v[as=it,vc=tr]
*** take_v attention
->amh ms_T_v[as=smp,vc=smp]
*** take_v breakfast
->amh qWrs_v[as=smp,vc=smp]
*** take_v burnt
->amh fj*_v[as=smp,vc=smp]
*** take_v captive
->amh mark_v[as=smp,vc=smp]
*** take_v care
->amh Tnqq_v[as=smp,vc=ps]
->amh Tnqq_v[as=smp,vc=smp]
*** take_v counsel
->amh mkr_v[as=it,vc=ps]
*** take_v courage
->amh dfr_v[as=it,vc=ps]
*** take_v cover
->amh Tl_l_v[as=smp,vc=ps]
*** take_v off
->amh wlq_v[as=smp,vc=tr]
*** take_v offense
->amh qy_m_v[as=smp,vc=ps]
*** take_v precautions
->amh Tnqq_v[as=smp,vc=ps]
*** take_v refuge
->amh bq_t_v[as=smp,vc=smp]
*** take_v shelter
->amh Tg'_v[as=smp,vc=ps]
->amh Tl_l_v[as=smp,vc=ps]
*** take_v up
->amh ns'_v[as=smp,vc=tr]
*** talk_v
->amh ngr_v[as=rc,vc=ps]
*** talk_v nonsense
->amh qbaTr_v[as=smp,vc=smp]
->amh zbarq_v[as=smp,vc=smp]
->amh qbajr_v[as=smp,vc=smp]
*** talk_v to $n
->amh $n[cs=acc] ngr_v[as=rc,vc=tr,ob=[+expl,-p1,-p2]] ; || 1, -1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg
*** tame_v
->amh gr'_v[as=smp,vc=smp]
*** tamp_v down
->amh tmtm_v[as=smp,vc=smp]
*** tan_v
->amh 'r_b_v[as=smp,vc=smp]
->amh lf'_v[as=smp,vc=tr]
->amh f'q_v[as=smp,vc=smp]
*** tantalize_v
->amh qWamT_v[as=smp,vc=tr]
*** tap_v
->amh qWrqWr_v[as=smp,vc=smp]
->amh lkW_f_v[as=smp,vc=smp]
*** tap_v gently
->amh mt'_v[as=it,vc=smp]
*** taper_v
->amh xWTT_v[as=smp,vc=smp]
->amh xwl_v[as=smp,vc=smp]
*** tarnish_v
->amh bl_z_v[as=smp,vc=smp]
->amh dbzz_v[as=smp,vc=smp]
*** taste_v
->amh T'm_v[as=it,vc=tr]
->amh qms_v[as=smp,vc=smp]
*** taste_v pleasant
->amh T'm_v[as=smp,vc=smp]
*** taste_v sour
->amh gWmzz_v[as=smp,vc=smp]
->amh gWmzz_v[as=rc,vc=ps]
*** tattoo_v
->amh wqr_v[as=smp,vc=smp]
*** taunt_v
->amh wr_f_v[as=smp,vc=smp]
*** tax_v
->amh qrT_v[as=smp,vc=smp]
*** teach_v
->amh m'r_v[as=smp,vc=cs]
*** tear_v
->amh qWnSl_v[as=smp,vc=smp]
->amh qdd_v[as=smp,vc=smp]
*** tear_v apart
->amh xrkt_v[as=smp,vc=smp]
*** tear_v away
->amh zrkt_v[as=smp,vc=smp]
*** tear_v off
->amh bT_s_v[as=smp,vc=smp]
*** tease_v
->amh nk'_v[as=it,vc=smp]
->amh ql_d_v[as=it,vc=ps]
->amh ql_d_v[as=rc,vc=ps]
*** tease_v cotton
->amh ndf_v[as=smp,vc=smp]
*** tell_v
->amh wr'_v[as=smp,vc=tr]
->amh ngr_v[as=smp,vc=smp]
*** tell_v lies
->amh wxkt_v[as=smp,vc=smp]
->amh wax*_v[as=smp,vc=smp]
->amh 'bl_v[as=smp,vc=smp]
->amh qdd_v[as=smp,vc=ps]
*** tell_v stories
->amh wg'_v[as=smp,vc=tr]
*** tell_v tales
->amh waxk_v[as=smp,vc=tr]
->amh tr_t_v[as=smp,vc=smp]
*** temper_v
->amh tb'_v[as=smp,vc=smp]
*** tempt_v
->amh ft_n_v[as=it,vc=ps]
->amh gWmj*_v[as=smp,vc=cs]
*** terminate_v
->amh 'lq_v[as=smp,vc=smp]
->amh bq'_v[as=smp,vc=tr]
->amh Cr_s_v[as=smp,vc=smp]
->amh dmdm_v[as=smp,vc=smp]
*** terrify_v
->amh fr'_v[as=smp,vc=cs]
->amh dngT_v[as=smp,vc=cs]
->amh b|rkrk_v[as=smp,vc=tr]
->amh fr'_v[as=it,vc=cs]
*** terrorize_v
->amh r|btbt_v[as=smp,vc=tr]
->amh xb_r_v[as=smp,vc=cs]
*** test_v
->amh ft_n_v[as=smp,vc=smp]
->amh mWk_r_v[as=smp,vc=smp]
*** testify_v
->amh mskr_v[as=smp,vc=smp]
*** thank_v
->amh msgn_v[as=it,vc=tr]
*** thatch_v
->amh kdn_v[as=smp,vc=ps]
*** thicken_v
->amh wf_r_v[as=smp,vc=tr]
*** thin_v
->amh qTn_v[as=smp,vc=tr]
->amh sl_s_v[as=smp,vc=smp]
*** thin_v out
->amh s's'_v[as=smp,vc=tr]
*** think_v
->amh 's_b_v[as=smp,vc=smp]
*** think_v deeply
->amh sl'_v[as=smp,vc=cs]
->amh Tyn_v[as=smp,vc=tr]
*** thrash_v
->amh qms_v[as=smp,vc=tr]
*** thrash_v soundly
->amh fsfs_v[as=smp,vc=smp]
*** threaten_v
->amh fr'_v[as=it,vc=cs]
->amh z't_v[as=smp,vc=smp]
*** thresh_v
->amh wq'_v[as=smp,vc=smp]
->amh mrt_v[as=smp,vc=tr]
*** thrive_v
->amh dabr_v[as=smp,vc=smp]
->amh sf'_v[as=it,vc=ps]
->amh f'f'_v[as=smp,vc=smp]
*** throng_v
->amh 'f_n_v[as=it,vc=ps]
*** throw_v
->amh wrwr_v[as=smp,vc=smp]
*** throw_v away
->amh T'l_v[as=smp,vc=smp]
*** throw_v down
->amh lg_'_v[as=rc,vc=tr]
->amh n|dball_v[as=smp,vc=tr]
->amh T'l_v[as=smp,vc=smp]
->amh dbll_v[as=smp,vc=smp]
*** throw_v open
->amh fnkt_v[as=smp,vc=smp]
->amh kft_v[as=it,vc=smp]
*** throw_v out
->amh T'l_v[as=smp,vc=smp]
*** thrust_v aside
->amh x|qnTr_v[as=smp,vc=tr]
*** thunder_v off
->amh ngWd_v[as=smp,vc=smp]
*** thwart_v
->amh nTb_v[as=rc,vc=tr]
->amh CngWl_v[as=smp,vc=tr]
->amh Cngf_v[as=rc,vc=tr]
->amh dnaqf_v[as=smp,vc=tr]
*** tickle_v
->amh knkn_v[as=smp,vc=smp]
->amh kWrkWr_v[as=smp,vc=smp]
->amh kWlkWl_v[as=smp,vc=smp]
*** tie_v
->amh qWraN*_v[as=smp,vc=tr]
->amh qrqb_v[as=smp,vc=smp]
->amh 'sr_v[as=smp,vc=smp]
*** tie_v fast
->amh kntr_v[as=smp,vc=smp]
*** tie_v firmly
->amh Trnq_v[as=smp,vc=smp]
*** tie_v tightly
->amh Ts_q_v[as=smp,vc=smp]
*** tie_v up
->amh 'sr_v[as=smp,vc=smp]
*** tighten_v
->amh wT_r_v[as=it,vc=ps]
->amh Tbq_v[as=smp,vc=tr]
->amh wT_r_v[as=smp,vc=ps]
->amh wT_r_v[as=smp,vc=smp]
->amh Tbb_v[as=smp,vc=tr]
*** time_v
->amh 'k_l_v[as=it,vc=tr]
->amh qlm_v[as=smp,vc=tr]
*** tingle_v
->amh nzr_v[as=smp,vc=smp]
*** tinkle_v
->amh n|kW'kW'_v[as=smp,vc=ps]
*** tint_v
->amh qlm_v[as=smp,vc=smp]
*** tip_v
->amh gWrs_v[as=smp,vc=tr]
*** tip_v out
->amh zrgf_v[as=smp,vc=smp]
*** tip_v up
->amh knbl_v[as=smp,vc=smp]
*** tire_v
->amh dkm_v[as=smp,vc=tr]
->amh l|fsfs_v[as=smp,vc=ps]
->amh lf'_v[as=smp,vc=tr]
*** tire_v out
->amh z|lflf_v[as=smp,vc=ps]
->amh lf'_v[as=smp,vc=tr]
*** toast_v
->amh Tbs_v[as=smp,vc=smp]
*** toil_v
->amh T'r_v[as=smp,vc=smp]
->amh g'r_v[as=smp,vc=smp]
->amh xq_l_v[as=smp,vc=smp]
->amh lf'_v[as=smp,vc=smp]
*** torture_v
->amh n|grgb_v[as=smp,vc=tr]
->amh sqy*_v[as=rc,vc=tr]
*** toss_v out
->amh klbs_v[as=smp,vc=smp]
*** totter_v
->amh w|trtr_v[as=smp,vc=ps]
*** touch_v
->amh nk'_v[as=smp,vc=smp]
->amh dass_v[as=smp,vc=smp]
*** touch_v lightly
->amh nk'_v[as=it,vc=smp]
->amh dabs_v[as=smp,vc=smp]
*** touch_v slightly
->amh Cr_f_v[as=smp,vc=smp]
*** tour_v
->amh gWbN*_v[as=smp,vc=smp]
*** tower_v
->amh gWbb_v[as=smp,vc=smp]
*** trade_v
->amh ngd_v[as=it,vc=ps]
*** train_v
->amh lmd_v[as=smp,vc=tr]
->amh 'r_q_v[as=smp,vc=smp]
->amh gr'_v[as=smp,vc=ps]
->amh slTn_v[as=smp,vc=tr]
*** train_v himself
->amh lmd_v[as=it,vc=ps]
*** tramp_v upon
->amh d's_v[as=smp,vc=smp]
*** trample_v
->amh Tmss_v[as=smp,vc=smp]
*** trample_v down
->amh Tass_v[as=smp,vc=smp]
*** trample_v on
->amh rgT_v[as=it,vc=smp]
*** transact_v
->amh gz'_v[as=it,vc=ps]
->amh gby*_v[as=it,vc=ps]
*** translate_v
->amh trgWm_v[as=smp,vc=smp]
->amh ml_s_v[as=smp,vc=smp]
*** transpire_v
->amh wz'_v[as=smp,vc=smp]
*** transport_v
->amh g'z_v[as=smp,vc=tr]
->amh gW'z_v[as=it,vc=tr]
*** tread_v
->amh rgT_v[as=smp,vc=smp]
*** treat_v
->amh nagd_v[as=smp,vc=cs]
->amh 'k_m_v[as=smp,vc=smp]
*** treat_v badly
->amh mnCq_v[as=rc,vc=tr]
->amh bxqT_v[as=rc,vc=tr]
*** treat_v ill
->amh bd_l_v[as=smp,vc=smp]
*** treat_v lavishly
->amh zbann_v[as=smp,vc=cs]
->amh fnTz_v[as=smp,vc=cs]
*** treat_v lightly
->amh l|ksks_v[as=smp,vc=tr]
*** treat_v rudely
->amh mnqr_v[as=rc,vc=tr]
*** treat_v subtly
->amh wz'_v[as=rc,vc=tr]
*** treat_v sumptuously
->amh n|dlaqq_v[as=smp,vc=tr]
*** treat_v to
->amh gabz_v[as=smp,vc=smp]
*** treat_v well
->amh n|kbkb_v[as=rc,vc=ps]
*** tremble_v
->amh r'd_v[as=smp,vc=smp]
->amh n|qTqT_v[as=smp,vc=ps]
->amh n|zfzf_v[as=smp,vc=ps]
*** trespass_v
->amh 'lf_v[as=it,vc=ps]
->amh T's_v[as=smp,vc=smp]
*** trespass_v upon
->amh dfr_v[as=smp,vc=ps]
*** trickle_v
->amh n|TfTf_v[as=smp,vc=ps]
->amh n|TbTb_v[as=rc,vc=ps]
->amh CWrr_v[as=smp,vc=smp]
*** trim_v
->amh krkm_v[as=smp,vc=smp]
->amh 'f_f_v[as=smp,vc=smp]
->amh kWstr_v[as=smp,vc=smp]
*** trim_v perfectly
->amh 'x_m_v[as=smp,vc=smp]
*** trip_v
->amh Tlf_v[as=smp,vc=smp]
->amh wlakf_v[as=smp,vc=tr]
*** triumph_v over
->amh xnf_v[as=smp,vc=cs]
*** trot_v
->amh sgr_v[as=smp,vc=smp]
*** trouble_v
->amh 'w_k_v[as=smp,vc=smp]
*** trust_v
->amh 'mn_v[as=smp,vc=smp]
*** try_v
->amh mWk_r_v[as=smp,vc=smp]
->amh qms_v[as=it,vc=smp]
*** try_v hard
->amh T'r_v[as=smp,vc=smp]
->amh T'r_v[as=it,vc=ps]
*** tuck_v in
->amh sgsg_v[as=smp,vc=ps]
*** tuck_v into
->amh xgW_T_v[as=smp,vc=smp]
*** tumble_v down
->amh fg_m_v[as=smp,vc=smp]
*** tumble_v over
->amh x|blbl_v[as=smp,vc=tr]
*** tune_v up
->amh qaN*_v[as=smp,vc=smp]
*** turn_v around
->amh zwr_v[as=smp,vc=smp]
*** turn_v black
->amh TqWr_v[as=smp,vc=smp]
*** turn_v off
->amh Tf'_v[as=smp,vc=tr]
*** turn_v over
->amh glbT_v[as=it,vc=ps]
->amh glbT_v[as=smp,vc=smp]
*** turn_v sour
->amh mrqz_v[as=smp,vc=tr]
->amh mrqz_v[as=smp,vc=smp]
->amh hWmTT_v[as=smp,vc=smp]
->amh gWmzz_v[as=smp,vc=tr]
*** turn_v upside-down
->amh glbT_v[as=smp,vc=smp]
*** tutor_v
->amh Tn'_v[as=smp,vc=cs]
*** twist_v
->amh T|mzmz_v[as=smp,vc=ps]
->amh T|mzmz_v[as=smp,vc=tr]
->amh Tmzz_v[as=smp,vc=ps]
->amh Tmm_v[as=smp,vc=smp]
->amh Tmzz_v[as=smp,vc=smp]
->amh n|gadd_v[as=smp,vc=tr]
->amh wlagd_v[as=it,vc=tr]
->amh qWaC*_v[as=smp,vc=smp]
->amh wlagd_v[as=smp,vc=tr]
->amh Tmm_v[as=rc,vc=tr]
*** twist_v tightly
->amh krr_v[as=smp,vc=tr]
*** twist_v together
->amh ftl_v[as=smp,vc=smp]
*** uncover_v
->amh glS_v[as=smp,vc=ps]
->amh glS_v[as=smp,vc=smp]
->amh ks_t_v[as=smp,vc=smp]
*** understand_v
->amh sm'_v[as=smp,vc=smp]
*** undo_v
->amh ft'_v[as=smp,vc=smp]
*** undulate_v
->amh gWnazl_v[as=smp,vc=ps]
*** unify_v
->amh zamd_v[as=smp,vc=cs]
*** unite_v
->amh y'z_v[as=it,vc=tr]
*** unload_v
->amh rgf_v[as=rc,vc=tr]
*** unlock_v
->amh kft_v[as=smp,vc=smp]
*** unroll_v
->amh zrg'_v[as=smp,vc=smp]
*** unsheathe_v
->amh l'T_v[as=smp,vc=smp]
*** untie_v unfastened
->amh ft'_v[as=smp,vc=smp]
*** unveil_v
->amh glS_v[as=smp,vc=smp]
*** unzip_v
->amh trtr_v[as=smp,vc=smp]
*** uproot_v
->amh fls_v[as=smp,vc=tr]
*** uproot_v completely
->amh mnTr_v[as=smp,vc=smp]
->amh mnTr_v[as=it,vc=smp]
*** urinate_v
->amh xn'_v[as=smp,vc=smp]
*** use_v
->amh Tqm_v[as=smp,vc=ps]
->amh lmd_v[as=smp,vc=ps]
*** use_v economically
->amh bq'_v[as=it,vc=tr]
*** use_v up
->amh Cr_s_v[as=smp,vc=smp]
*** use_v with
->amh grm_v[as=smp,vc=smp]
*** usher_v
->amh gafr_v[as=smp,vc=tr]
*** utter_v
->amh sm'_v[as=smp,vc=cs]
*** vaccinate_v
->amh ktb_v[as=smp,vc=smp]
*** vacillate_v
->amh wall_v[as=smp,vc=smp]
*** value_v
->amh gm_t_v[as=smp,vc=smp]
*** vanish_v
->amh Tf'_v[as=smp,vc=smp]
*** vary_v
->amh blT_v[as=it,vc=ps]
*** veil_v
->amh gard_v[as=smp,vc=smp]
->amh xf_n_v[as=smp,vc=smp]
*** venerate_v
->amh kbr_v[as=smp,vc=tr]
->amh sm'_v[as=smp,vc=ps]
*** ventilate_v
->amh nfs_v[as=rc,vc=tr]
*** verify_v
->amh gnzb_v[as=rc,vc=ps]
->amh Tr'_v[as=rc,vc=tr]
*** vex_v
->amh knkn_v[as=smp,vc=smp]
->amh ndd_v[as=rc,vc=tr]
*** vibrate_v
->amh nzr_v[as=smp,vc=smp]
*** violate_v
->amh dfr_v[as=smp,vc=smp]
->amh gss_v[as=smp,vc=smp]
->amh T's_v[as=smp,vc=smp]
*** visit_v
->amh lqs_v[as=rc,vc=tr]
->amh gWbN*_v[as=smp,vc=smp]
*** voice_v
->amh sm'_v[as=smp,vc=cs]
*** vomit_v
->amh gWagWT_v[as=smp,vc=smp]
->amh tf'_v[as=smp,vc=smp]
->amh ml_s_v[as=smp,vc=cs]
*** vote_v for
->amh mrT_v[as=smp,vc=smp]
*** wait_v
->amh qWy_*_v[as=smp,vc=smp]
*** wake_v
->amh ns'_v[as=smp,vc=cs]
*** wake_v up
->amh nq'_v[as=smp,vc=tr]
->amh nq'_v[as=smp,vc=smp]
->amh qsqs_v[as=smp,vc=smp]
*** walk_v
->amh ramd_v[as=smp,vc=ps]
*** walk_v aimlessly
->amh n|qwall_v[as=smp,vc=ps]
*** walk_v awkwardly
->amh x|mdmd_v[as=smp,vc=ps]
*** walk_v disdainfully
->amh qWn_n_v[as=smp,vc=ps]
*** walk_v fast
->amh gsgs_v[as=smp,vc=smp]
*** walk_v feebly
->amh n|Trawz_v[as=smp,vc=ps]
*** walk_v gracefully
->amh gWmall_v[as=smp,vc=ps]
->amh gWlamm_v[as=smp,vc=ps]
*** walk_v off
->amh mnTq_v[as=smp,vc=ps]
*** walk_v over
->amh ramd_v[as=it,vc=ps]
*** walk_v rapidly
->amh gsgs_v[as=smp,vc=smp]
*** walk_v slowly
->amh zgm_v[as=it,vc=tr]
->amh n|qfdd_v[as=smp,vc=ps]
*** walk_v unsteadily
->amh Tnabs_v[as=smp,vc=ps]
*** walk_v untidily
->amh w|trtr_v[as=smp,vc=ps]
*** wander_v
->amh dzdz_v[as=smp,vc=tr]
->amh fads_v[as=smp,vc=tr]
->amh watt_v[as=smp,vc=smp]
->amh n|kwatt_v[as=smp,vc=ps]
*** wander_v around
->amh n|kratt_v[as=smp,vc=ps]
->amh nawz_v[as=smp,vc=smp]
*** want_v
->amh fl_g_v[as=smp,vc=smp]
->amh fl_g_v[as=smp,vc=ps]
->amh x'_v[as=smp,vc=smp]
*** warm_v
->amh mwq_v[as=smp,vc=tr]
*** warm_v up
->amh mwq_v[as=smp,vc=tr]
*** warn_v
->amh Tnqq_v[as=smp,vc=cs]
->amh ngr_v[as=it,vc=smp]
*** warp_v
->amh zb'_v[as=smp,vc=smp]
*** wash_v
->amh 'Tb_v[as=smp,vc=smp]
*** wash_v oneself
->amh 'Tb_v[as=it,vc=ps]
*** wash_v slightly
->amh 'Tb_v[as=it,vc=smp]
*** waste_v
->amh nbz_v[as=smp,vc=smp]
->amh bakn_v[as=smp,vc=tr]
*** waste_v away
->amh mWg_g_v[as=smp,vc=smp]
->amh qC_C_v[as=smp,vc=smp]
->amh qWrqWz_v[as=smp,vc=smp]
*** waste_v journey
->amh bazq_v[as=smp,vc=smp]
*** watch_v out
->amh Tnqq_v[as=smp,vc=ps]
*** water_v
->amh r|kfkf_v[as=smp,vc=tr]
->amh TT_'_v[as=smp,vc=tr]
->amh r|kfkf_v[as=smp,vc=ps]
*** wave_v
->amh w|lblb_v[as=smp,vc=ps]
->amh r|gbgb_v[as=smp,vc=tr]
->amh w|lblb_v[as=smp,vc=tr]
->amh wzwz_v[as=rc,vc=ps]
->amh wzwz_v[as=smp,vc=smp]
->amh wzwz_v[as=rc,vc=tr]
*** waver_v
->amh wall_v[as=smp,vc=smp]
->amh mnt'_v[as=smp,vc=tr]
*** weaken_v
->amh dqq_v[as=smp,vc=tr]
->amh lax*_v[as=smp,vc=tr]
->amh l|fsfs_v[as=smp,vc=ps]
->amh gzgz_v[as=smp,vc=smp]
->amh n|Trawz_v[as=smp,vc=tr]
*** wear_v
->amh lbs_v[as=smp,vc=smp]
->amh m'l_v[as=smp,vc=smp]
->amh Tlq_v[as=smp,vc=tr]
*** wear_v make-up
->amh kW'l_v[as=it,vc=ps]
*** wear_v over-large
->amh n|bWrqq_v[as=rc,vc=ps]
->amh n|bWrqq_v[as=smp,vc=ps]
*** weary_v
->amh Twlg_v[as=smp,vc=smp]
->amh z'l_v[as=smp,vc=smp]
*** wedge_v in
->amh dnqr_v[as=smp,vc=smp]
*** weed_v
->amh 'r_m_v[as=smp,vc=smp]
->amh xlxl_v[as=smp,vc=smp]
*** weep_v
->amh lqs_v[as=smp,vc=tr]
->amh nb'_v[as=smp,vc=tr]
->amh nb'_v[as=smp,vc=smp]
*** weep_v bitterly
->amh n|sqsq_v[as=smp,vc=ps]
*** weep_v constantly
->amh nfrq_v[as=rc,vc=ps]
*** weigh_v
->amh mz_n_v[as=smp,vc=smp]
*** weigh_v up
->amh mz_n_v[as=it,vc=tr]
*** weld_v
->amh by_d_v[as=smp,vc=smp]
*** wet_v
->amh rTb_v[as=smp,vc=tr]
*** wheedle_v out
->amh lm_T_v[as=it,vc=ps]
*** whip_v
->amh xnqWT_v[as=smp,vc=smp]
*** whip_v lashed
->amh grf_v[as=smp,vc=smp]
*** whistle_v
->amh fWaC*_v[as=smp,vc=tr]
*** whiten_v
->amh nT'_v[as=it,vc=tr]
->amh nT'_v[as=smp,vc=tr]
*** wilt_v
->amh Twlg_v[as=smp,vc=smp]
*** win_v
->amh rt'_v[as=smp,vc=smp]
->amh bl'_v[as=smp,vc=smp]
->amh xnf_v[as=smp,vc=cs]
*** wince_v
->amh sq_q_v[as=smp,vc=ps]
*** wind_v
->amh Tmzz_v[as=rc,vc=ps]
->amh TmTm_v[as=smp,vc=smp]
->amh mWl'_v[as=smp,vc=smp]
*** wink_v at
->amh Tqs_v[as=smp,vc=smp]
*** wipe_v
->amh 'bs_v[as=smp,vc=smp]
->amh Trg_v[as=smp,vc=smp]
->amh wlwl_v[as=smp,vc=smp]
*** wipe_v round
->amh 's_s_v[as=smp,vc=smp]
*** wish_v
->amh fl_g_v[as=smp,vc=smp]
->amh mN*_v[as=smp,vc=cs]
->amh mN*_v[as=smp,vc=ps]
->amh x'_v[as=smp,vc=smp]
*** wish_v strongly
->amh gW'gW'_v[as=smp,vc=smp]
*** wish_v well
->amh mr_q_v[as=smp,vc=smp]
*** withdraw_v
->amh fgfg_v[as=smp,vc=tr]
->amh fngT_v[as=smp,vc=tr]
->amh ns'_v[as=smp,vc=tr]
*** wither_v
->amh Twlg_v[as=smp,vc=smp]
->amh ksm_v[as=smp,vc=tr]
->amh ksm_v[as=smp,vc=smp]
*** withhold_v
->amh qr*_v[as=smp,vc=cs]
*** wobble_v
->amh b|rkrk_v[as=smp,vc=ps]
*** wonder_v
->amh dnq_v[as=smp,vc=tr]
->amh dnq_v[as=smp,vc=ps]
*** work_v
->amh sr'_v[as=smp,vc=smp]
*** work_v feebly
->amh l|fsfs_v[as=smp,vc=tr]
*** work_v haphazardly
->amh l|kWskWs_v[as=smp,vc=tr]
*** work_v hard
->amh dakr_v[as=smp,vc=smp]
*** work_v slowly
->amh lgW_m_v[as=smp,vc=tr]
*** worry_v
->amh xaql_v[as=smp,vc=smp]
*** worsen_v
->amh b's_v[as=smp,vc=smp]
->amh kf'_v[as=smp,vc=tr]
*** worship_v
->amh sgd_v[as=smp,vc=smp]
->amh mlk_v[as=smp,vc=tr]
*** wound_v
->amh qWsl_v[as=smp,vc=tr]
->amh gT_b_v[as=smp,vc=smp]
*** wrap_v
->amh TmTm_v[as=smp,vc=smp]
->amh Tqll_v[as=smp,vc=smp]
->amh xf_n_v[as=smp,vc=ps]
->amh n|xaff_v[as=smp,vc=tr]
*** wrap_v oneself
->amh xf_n_v[as=it,vc=ps]
*** wrap_v up
->amh Tqll_v[as=smp,vc=smp]
*** wreck_v
->amh frs_v[as=it,vc=tr]
*** wrestle_v with
->amh tagl_v[as=smp,vc=smp]
*** wriggle_v
->amh n|fragT_v[as=smp,vc=ps]
->amh s|lklk_v[as=smp,vc=ps]
*** wriggle_v about
->amh r|msms_v[as=smp,vc=ps]
*** wriggle_v out
->amh xW|lklk_v[as=smp,vc=ps]
*** wrinkle_v
->amh Cmdd_v[as=rc,vc=tr]
->amh Cmatr_v[as=smp,vc=tr]
->amh Cb_T_v[as=it,vc=tr]
->amh kWmatr_v[as=smp,vc=tr]
->amh gWrb_v[as=smp,vc=smp]
->amh kWmatr_v[as=it,vc=tr]
->amh Cmdd_v[as=rc,vc=ps]
->amh xbxb_v[as=smp,vc=smp]
->amh Cb_T_v[as=it,vc=ps]
*** wrinkle_v up
->amh wCamd_v[as=smp,vc=ps]
*** write_v
->amh S'f_v[as=smp,vc=smp]
*** write_v off
->amh f'q_v[as=smp,vc=smp]
*** writhe_v
->amh n|frafr_v[as=smp,vc=ps]
->amh T|mlml_v[as=smp,vc=ps]
->amh n|zfzf_v[as=smp,vc=ps]
->amh n|dfadf_v[as=smp,vc=ps]
*** yawn_v
->amh faxg_v[as=smp,vc=tr]
->amh zg'_v[as=rc,vc=tr]
*** yearn_v
->amh gW'gW'_v[as=smp,vc=smp]
*** yearn_v for
->amh nafq_v[as=smp,vc=smp]
*** yell_v
->amh Cwh_v[as=smp,vc=smp]
*** yield_v
->amh mrt_v[as=smp,vc=smp]
->amh bg_r_v[as=smp,vc=ps]
*** yoke_v
->amh Tmd_v[as=smp,vc=smp]
*** zoom_v
->amh w|zgzg_v[as=smp,vc=ps]
*** be_v abducted ; ^ abducted 1
->amh Tlf_v[as=smp,vc=ps]
*** be_v abject ; ^ abject 1
->amh kWn_n_v[as=smp,vc=cs]
*** be_v able ; ^ able 1
->amh c'l_v[as=smp,vc=smp]
*** be_v abortive ; ^ abortive 1
->amh kxf_v[as=smp,vc=smp]
*** be_v abrogated ; ^ abrogated 1
->amh frs_v[as=smp,vc=smp]
*** be_v absent ; ^ absent 1
->amh 'T'_v[as=smp,vc=ps]
*** be_v absent-minded ; ^ absent-minded 1
->amh zng'_v[as=smp,vc=smp]
*** be_v abundant ; ^ abundant 1
->amh brkt_v[as=smp,vc=smp]
->amh brkt_v[as=rc,vc=ps]
->amh n|bxbx_v[as=smp,vc=ps]
->amh t|rfrf_v[as=smp,vc=ps]
*** be_v accomplished ; ^ accomplished 1
->amh sk_'_v[as=rc,vc=ps]
->amh knawn_v[as=smp,vc=ps]
*** be_v acid ; ^ acid 1
->amh hWmTT_v[as=smp,vc=smp]
*** be_v acrid ; ^ acrid 1
->amh krkr_v[as=smp,vc=smp]
*** be_v added ; ^ added 1
->amh Cm_r_v[as=smp,vc=ps]
->amh dm_r_v[as=smp,vc=ps]
*** be_v adjourned ; ^ adjourned 1
->amh bq'_v[as=smp,vc=tr]
*** be_v administered ; ^ administered 1
->amh 'dr_v[as=it,vc=ps]
*** be_v advised ; ^ advised 1
->amh mkr_v[as=smp,vc=ps]
*** be_v afraid ; ^ afraid 1
->amh fr'_v[as=smp,vc=smp]
*** be_v aggravated ; ^ aggravated 1
->amh b's_v[as=smp,vc=smp]
->amh krr_v[as=rc,vc=ps]
*** be_v aggregated ; ^ aggregated 1
->amh Tqll_v[as=rc,vc=ps]
*** be_v ajar ; ^ ajar 1
->amh n|grbb_v[as=smp,vc=ps]
*** be_v alarmed ; ^ alarmed 1
->amh dngT_v[as=smp,vc=smp]
->amh xb_r_v[as=smp,vc=ps]
->amh dngT_v[as=rc,vc=ps]
*** be_v alight ; ^ alight 1
->amh fk'_v[as=smp,vc=smp]
*** be_v allotted ; ^ allotted 1
->amh md_b_v[as=smp,vc=ps]
*** be_v ambiguous ; ^ ambiguous 1
->amh d|bsbs_v[as=smp,vc=ps]
*** be_v analyzed ; ^ analyzed 1
->amh tntn_v[as=smp,vc=ps]
*** be_v angry ; ^ angry 1
->amh qWT'_v[as=smp,vc=ps]
*** be_v annealed ; ^ annealed 1
->amh tb'_v[as=smp,vc=smp]
*** be_v announced ; ^ announced 1
->amh lf_f_v[as=smp,vc=ps]
*** be_v annoyed ; ^ annoyed 1
->amh bsaC*_v[as=smp,vc=ps]
*** be_v anointed ; ^ anointed 1
->amh qb_'_v[as=smp,vc=ps]
*** be_v antagonistic ; ^ antagonistic 1
->amh Trr_v[as=rc,vc=ps]
*** be_v anxious ; ^ anxious 1
->amh gW'gW'_v[as=smp,vc=smp]
->amh sg'_v[as=smp,vc=smp]
*** be_v appointed ; ^ appointed 1
->amh xwm_v[as=smp,vc=ps]
*** be_v approachable ; ^ approachable 1
->amh mald_v[as=smp,vc=ps]
*** be_v approved ; ^ approved 1
->amh Sdq_v[as=smp,vc=smp]
*** be_v arbitrated ; ^ arbitrated 1
->amh glagl_v[as=smp,vc=ps]
*** be_v arched ; ^ arched 1
->amh qs_t_v[as=smp,vc=ps]
*** be_v armed ; ^ armed 1
->amh 'Tq_v[as=smp,vc=ps]
*** be_v around ; ^ around 1
->amh nbr_v[as=smp,vc=smp]
*** be_v aroused ; ^ aroused 1
->amh 'l_l_v[as=smp,vc=smp]
*** be_v arranged ; ^ arranged 1
->amh zgaj*_v[as=it,vc=ps]
->amh snad'_v[as=smp,vc=ps]
->amh snad'_v[as=it,vc=ps]
*** be_v arrested ; ^ arrested 1
->amh y'z_v[as=smp,vc=ps]
*** be_v arrogant ; ^ arrogant 1
->amh Cmalq_v[as=smp,vc=ps]
->amh Tgb_v[as=smp,vc=smp]
->amh Cmalq_v[as=it,vc=ps]
*** be_v ashamed ; ^ ashamed 1
->amh 'fr_v[as=smp,vc=smp]
*** be_v asked ; ^ asked 1
->amh Ty_q_v[as=smp,vc=ps]
*** be_v assembled ; ^ assembled 1
->amh kmac*_v[as=smp,vc=ps]
*** be_v assigned ; ^ assigned 1
->amh mr'_v[as=smp,vc=ps]
*** be_v astonished ; ^ astonished 1
->amh grm_v[as=smp,vc=ps]
->amh dm_m_v[as=smp,vc=ps]
->amh dnq_v[as=smp,vc=ps]
*** be_v attentive ; ^ attentive 1
->amh w'l_v[as=smp,vc=cs]
*** be_v attenuated ; ^ attenuated 1
->amh mll_v[as=smp,vc=smp]
*** be_v attractive ; ^ attractive 1
->amh m'r_v[as=smp,vc=tr]
*** be_v authenticated ; ^ authenticated 1
->amh gnzb_v[as=rc,vc=ps]
*** be_v aware ; ^ aware 1
->amh gnzb_v[as=smp,vc=ps]
*** be_v awkward ; ^ awkward 1
->amh n|glajj_v[as=smp,vc=ps]
*** be_v bad ; ^ bad 1
->amh kf'_v[as=smp,vc=smp] ; 0==0 sb:sb,neg:neg
*** be_v baked ; ^ baked 1
->amh gagr_v[as=smp,vc=ps]
*** be_v banged ; ^ banged 1
->amh qrqr_v[as=smp,vc=ps]
*** be_v banished ; ^ banished 1
->amh g'z_v[as=smp,vc=ps]
*** be_v bankrupt ; ^ bankrupt 1
->amh ksr_v[as=smp,vc=smp]
*** be_v barren ; ^ barren 1
->amh raqWt_v[as=smp,vc=ps]
->amh ms_n_v[as=smp,vc=smp]
*** be_v beaten ; ^ beaten 1
->amh wq'_v[as=smp,vc=ps]
->amh dbdb_v[as=smp,vc=ps]
*** be_v beautiful ; ^ beautiful 1
->amh qWnj*_v[as=smp,vc=smp]
->amh w'b_v[as=smp,vc=ps]
->amh m'r_v[as=smp,vc=tr]
*** be_v become_v ; ^ become_v 1
->amh hwn_v[as=smp,vc=smp]
*** be_v bedraggled ; ^ bedraggled 1
->amh Cmalq_v[as=smp,vc=ps]
*** be_v befriended ; ^ befriended 1
->amh wdaj*_v[as=smp,vc=ps]
*** be_v begged ; ^ begged 1
->amh lm_n_v[as=smp,vc=ps]
*** be_v beheaded ; ^ beheaded 1
->amh sy_f_v[as=smp,vc=ps]
*** be_v believed ; ^ believed 1
->amh 'mn_v[as=smp,vc=ps]
*** be_v belittled ; ^ belittled 1
->amh n|gwall_v[as=smp,vc=ps]
*** be_v beneficial ; ^ beneficial 1
->amh Tqm_v[as=smp,vc=smp]
*** be_v bent ; ^ bent 1
->amh zb'_v[as=smp,vc=smp]
->amh lb_q_v[as=smp,vc=ps]
->amh gWbT_v[as=smp,vc=smp]
->amh n|gaTT_v[as=smp,vc=ps]
*** be_v besmeared ; ^ besmeared 1
->amh Cmalq_v[as=it,vc=ps]
*** be_v better ; ^ better 1
->amh x'l_v[as=smp,vc=ps]
*** be_v biased ; ^ biased 1
->amh dl'_v[as=smp,vc=tr]
*** be_v big ; ^ big 1
->amh tl_q_v[as=smp,vc=smp]
*** be_v big-bellied ; ^ big-bellied 1
->amh n|gfTT_v[as=smp,vc=ps]
*** be_v bismirched ; ^ bismirched 1
->amh Cmalq_v[as=it,vc=ps]
*** be_v bitten ; ^ bitten 1
->amh 'nks_v[as=smp,vc=ps]
*** be_v bitter ; ^ bitter 1
->amh mrr_v[as=smp,vc=smp]
*** be_v blamed ; ^ blamed 1
->amh nqf_v[as=smp,vc=ps]
*** be_v blessed ; ^ blessed 1
->amh bark_v[as=smp,vc=ps]
*** be_v blotted ; ^ blotted 1
->amh nqWT_v[as=smp,vc=smp]
*** be_v blown-out ; ^ blown-out 1
->amh nf'_v[as=it,vc=ps]
*** be_v blunt ; ^ blunt 1
->amh n|TraTs_v[as=smp,vc=ps]
->amh TrTs_v[as=smp,vc=smp]
->amh Tr_s_v[as=smp,vc=smp]
->amh dn_z_v[as=smp,vc=smp]
->amh dWldWm_v[as=smp,vc=smp]
*** be_v boastful ; ^ boastful 1
->amh kWr'_v[as=it,vc=ps]
*** be_v boiled ; ^ boiled 1
->amh fl'_v[as=smp,vc=ps]
*** be_v bold ; ^ bold 1
->amh dfr_v[as=smp,vc=smp]
->amh dfr_v[as=it,vc=ps]
*** be_v bolted ; ^ bolted 1
->amh xgW_r_v[as=smp,vc=ps]
->amh qrqr_v[as=smp,vc=ps]
*** be_v bone-dry ; ^ bone-dry 1
->amh kn_n_v[as=smp,vc=smp]
*** be_v bored ; ^ bored 1
->amh slc*_v[as=smp,vc=smp]
->amh bs'_v[as=smp,vc=ps]
->amh srsr_v[as=smp,vc=ps]
->amh bWrbWr_v[as=smp,vc=ps]
*** be_v boring ; ^ boring 1
->amh cyk_v[as=smp,vc=smp]
*** be_v born ; ^ born 1
->amh wld_v[as=smp,vc=ps]
*** be_v bought ; ^ bought 1
->amh xm_t_v[as=smp,vc=ps]
->amh gz'_v[as=smp,vc=ps]
*** be_v branded ; ^ branded 1
->amh tkW_s_v[as=smp,vc=ps]
*** be_v brave ; ^ brave 1
->amh gWb_z_v[as=smp,vc=smp]
*** be_v brewed ; ^ brewed 1
->amh Tmq_v[as=smp,vc=ps]
*** be_v bridled ; ^ bridled 1
->amh lgW_m_v[as=smp,vc=ps]
*** be_v brief ; ^ brief 1
->amh 'Tr_v[as=smp,vc=smp]
*** be_v brightened ; ^ brightened 1
->amh dmq_v[as=smp,vc=smp]
*** be_v brighter ; ^ brighter 1
->amh kft_v[as=smp,vc=smp]
*** be_v broadcast ; ^ broadcast 1
->amh sraC*_v[as=smp,vc=ps]
*** be_v broken ; ^ broken 1
->amh nkt_v[as=smp,vc=smp]
->amh sbr_v[as=smp,vc=ps]
->amh qlTm_v[as=smp,vc=ps]
*** be_v built ; ^ built 1
->amh 'nT_v[as=smp,vc=ps]
*** be_v buried ; ^ buried 1
->amh qbr_v[as=smp,vc=ps]
*** be_v burned ; ^ burned 1
->amh lmTT_v[as=smp,vc=ps]
*** be_v burnt ; ^ burnt 1
->amh qT_l_v[as=rc,vc=ps]
*** be_v burst ; ^ burst 1
->amh brgd_v[as=it,vc=ps]
*** be_v bushy ; ^ bushy 1
->amh cf_g_v[as=smp,vc=ps]
*** be_v busy ; ^ busy 1
->amh y'z_v[as=smp,vc=ps]
*** be_v cajoled ; ^ cajoled 1
->amh dl_l_v[as=smp,vc=ps]
*** be_v calm ; ^ calm 1
->amh rg'_v[as=smp,vc=smp]
*** be_v canceled ; ^ canceled 1
->amh sr_z_v[as=smp,vc=ps]
*** be_v capsized ; ^ capsized 1
->amh glbT_v[as=smp,vc=ps]
*** be_v careful ; ^ careful 1
->amh Tnqq_v[as=smp,vc=ps]
*** be_v careless ; ^ careless 1
->amh n|zlazl_v[as=smp,vc=ps]
*** be_v castrated ; ^ castrated 1
->amh wqT_v[as=smp,vc=ps]
->amh kWlax*_v[as=smp,vc=ps]
->amh slb_v[as=smp,vc=ps]
*** be_v casuistic ; ^ casuistic 1
->amh rqq_v[as=rc,vc=ps]
*** be_v caught ; ^ caught 1
->amh ql_b_v[as=smp,vc=ps]
->amh y'z_v[as=smp,vc=ps]
*** be_v celebrated ; ^ celebrated 1
->amh kbr_v[as=smp,vc=smp]
->amh kbr_v[as=smp,vc=ps]
*** be_v changed ; ^ changed 1
->amh mnzr_v[as=smp,vc=ps]
->amh lw_T_v[as=smp,vc=ps]
->amh zrzr_v[as=smp,vc=ps]
*** be_v chapped ; ^ chapped 1
->amh qWrfd_v[as=smp,vc=smp]
*** be_v charcoal ; ^ charcoal 1
->amh ksl_v[as=smp,vc=smp]
*** be_v charged ; ^ charged 1
->amh kss_v[as=smp,vc=ps]
*** be_v charitable ; ^ charitable 1
->amh lg_s_v[as=smp,vc=smp]
*** be_v chastized ; ^ chastized 1
->amh qsf_v[as=smp,vc=ps]
*** be_v cheap ; ^ cheap 1
->amh rks_v[as=smp,vc=smp]
*** be_v cheated ; ^ cheated 1
->amh C|brbr_v[as=smp,vc=ps]
*** be_v checked ; ^ checked 1
->amh ft_x_v[as=smp,vc=ps]
*** be_v chewed ; ^ chewed 1
->amh 'N_k_v[as=smp,vc=ps]
->amh qWrTm_v[as=smp,vc=ps]
->amh lm_T_v[as=rc,vc=ps]
*** be_v chic ; ^ chic 1
->amh zn_T_v[as=smp,vc=smp]
*** be_v chilly ; ^ chilly 1
->amh qzqz_v[as=rc,vc=ps]
*** be_v chipped ; ^ chipped 1
->amh xr_f_v[as=it,vc=ps]
*** be_v choked ; ^ choked 1
->amh 'nq_v[as=smp,vc=ps]
->amh dfn_v[as=rc,vc=ps]
->amh 'f_n_v[as=smp,vc=ps]
*** be_v chopped ; ^ chopped 1
->amh ktkt_v[as=smp,vc=ps]
->amh flT_v[as=smp,vc=ps]
->amh qrTf_v[as=smp,vc=ps]
*** be_v chosen ; ^ chosen 1
->amh mrT_v[as=smp,vc=ps]
*** be_v churned ; ^ churned 1
->amh n'T_v[as=smp,vc=ps]
*** be_v circulated ; ^ circulated 1
->amh sraC*_v[as=smp,vc=ps]
*** be_v circumcised ; ^ circumcised 1
->amh gr_z_v[as=smp,vc=ps]
*** be_v clarified ; ^ clarified 1
->amh br'_v[as=it,vc=ps]
->amh ngWr_v[as=smp,vc=smp]
*** be_v clawed ; ^ clawed 1
->amh bWC_q_v[as=smp,vc=ps]
->amh bWaTT_v[as=smp,vc=ps]
*** be_v clean ; ^ clean 1
->amh nT'_v[as=smp,vc=smp]
->amh nS'_v[as=smp,vc=smp]
->amh Td'_v[as=smp,vc=smp]
*** be_v cleaned ; ^ cleaned 1
->amh Sd'_v[as=smp,vc=smp]
*** be_v clear ; ^ clear 1
->amh qrr_v[as=smp,vc=smp]
->amh Tr'_v[as=smp,vc=smp]
->amh gWl'_v[as=smp,vc=smp]
->amh ks_t_v[as=smp,vc=ps]
*** be_v closed ; ^ closed 1
->amh dfn_v[as=smp,vc=ps]
->amh zg'_v[as=smp,vc=ps]
*** be_v cloudy ; ^ cloudy 1
->amh damn_v[as=smp,vc=smp]
*** be_v coagulated ; ^ coagulated 1
->amh rg'_v[as=smp,vc=smp]
*** be_v coarse ; ^ coarse 1
->amh krdd_v[as=smp,vc=smp]
->amh xakr_v[as=smp,vc=smp]
*** be_v coherent ; ^ coherent 1
->amh y'z_v[as=it,vc=ps]
*** be_v coiled ; ^ coiled 1
->amh TnTn_v[as=smp,vc=ps]
*** be_v cold ; ^ cold 1
->amh brd_v[as=smp,vc=smp]
*** be_v collected ; ^ collected 1
->amh Trqm_v[as=rc,vc=ps]
*** be_v coloured ; ^ coloured 1
->amh qlm_v[as=smp,vc=smp]
*** be_v combed ; ^ combed 1
->amh bT_r_v[as=smp,vc=ps]
*** be_v combined ; ^ combined 1
->amh Tm_r_v[as=rc,vc=ps]
*** be_v comfortable ; ^ comfortable 1
->amh mc_*_v[as=smp,vc=tr]
->amh mc_*_v[as=smp,vc=ps]
->amh dl'_v[as=smp,vc=smp]
*** be_v comforted ; ^ comforted 1
->amh Sn'_v[as=it,vc=ps]
*** be_v commemorated ; ^ commemorated 1
->amh 's_b_v[as=smp,vc=ps]
*** be_v comparable ; ^ comparable 1
->amh mz_n_v[as=it,vc=ps]
->amh mT_n_v[as=it,vc=ps]
*** be_v compared ; ^ compared 1
->amh nSr_v[as=it,vc=ps]
->amh wd_r_v[as=it,vc=ps]
*** be_v compatible ; ^ compatible 1
->amh gN*_v[as=it,vc=ps]
*** be_v compelled ; ^ compelled 1
->amh gdd_v[as=smp,vc=ps]
*** be_v compensated ; ^ compensated 1
->amh k's_v[as=smp,vc=ps]
*** be_v competent ; ^ competent 1
->amh bq'_v[as=smp,vc=smp]
*** be_v complete ; ^ complete 1
->amh mWl'_v[as=rc,vc=ps]
*** be_v completed ; ^ completed 1
->amh zlq_v[as=smp,vc=ps]
->amh Tnqq_v[as=rc,vc=ps]
->amh Cr_s_v[as=smp,vc=ps]
->amh fS_m_v[as=smp,vc=ps]
*** be_v composed ; ^ composed 1
->amh drs_v[as=smp,vc=ps]
*** be_v compressed ; ^ compressed 1
->amh lTlT_v[as=smp,vc=ps]
*** be_v concealed ; ^ concealed 1
->amh sw_r_v[as=smp,vc=ps]
*** be_v conceited ; ^ conceited 1
->amh gzf_v[as=smp,vc=tr]
->amh dndn_v[as=smp,vc=smp]
->amh Tgb_v[as=smp,vc=smp]
->amh gxr_v[as=smp,vc=ps]
->amh wT_r_v[as=smp,vc=ps]
*** be_v concluded ; ^ concluded 1
->amh dmdm_v[as=smp,vc=ps]
->amh Tqll_v[as=rc,vc=ps]
*** be_v condemned ; ^ condemned 1
->amh kWn_n_v[as=smp,vc=ps]
*** be_v confiscated ; ^ confiscated 1
->amh wrs_v[as=smp,vc=ps]
*** be_v confused ; ^ confused 1
->amh zbarq_v[as=smp,vc=ps]
->amh mt'_v[as=rc,vc=ps]
->amh mt'_v[as=it,vc=ps]
->amh skr_v[as=rc,vc=ps]
*** be_v congested ; ^ congested 1
->amh Cnq_v[as=it,vc=ps]
->amh Cf_q_v[as=it,vc=ps]
*** be_v connected ; ^ connected 1
->amh y'z_v[as=it,vc=ps]
*** be_v considered ; ^ considered 1
->amh Tn'_v[as=smp,vc=ps]
*** be_v consoled ; ^ consoled 1
->amh Sn'_v[as=it,vc=ps]
*** be_v constrained ; ^ constrained 1
->amh gt'_v[as=smp,vc=ps]
*** be_v consumed ; ^ consumed 1
->amh 'lq_v[as=smp,vc=smp]
->amh Cr_s_v[as=smp,vc=ps]
->amh fj*_v[as=smp,vc=ps]
*** be_v contented ; ^ contented 1
->amh wrd_v[as=smp,vc=ps]
*** be_v contigious ; ^ contigious 1
->amh Tg'_v[as=it,vc=ps]
*** be_v contributed ; ^ contributed 1
->amh wT'_v[as=it,vc=ps]
*** be_v convenient ; ^ convenient 1
->amh mc_*_v[as=smp,vc=ps]
*** be_v cooked ; ^ cooked 1
->amh qq_l_v[as=smp,vc=ps]
*** be_v cool ; ^ cool 1
->amh qzqz_v[as=smp,vc=smp]
->amh qzqz_v[as=rc,vc=ps]
*** be_v copied ; ^ copied 1
->amh glbT_v[as=smp,vc=ps]
*** be_v copious ; ^ copious 1
->amh t|rfrf_v[as=smp,vc=ps]
*** be_v corrected ; ^ corrected 1
->amh kWr_j_v[as=smp,vc=ps]
->amh 'r_m_v[as=smp,vc=ps]
*** be_v corroded ; ^ corroded 1
->amh bl'_v[as=smp,vc=ps]
*** be_v counted ; ^ counted 1
->amh qWTr_v[as=smp,vc=ps]
*** be_v courageous ; ^ courageous 1
->amh dfr_v[as=smp,vc=smp]
->amh gWb_z_v[as=smp,vc=smp]
->amh jgn_v[as=smp,vc=smp]
*** be_v covered ; ^ covered 1
->amh Tqll_v[as=rc,vc=ps]
->amh kdn_v[as=smp,vc=ps]
->amh xf_n_v[as=smp,vc=ps]
*** be_v cracked ; ^ cracked 1
->amh frks_v[as=smp,vc=ps]
*** be_v crafty ; ^ crafty 1
->amh Cwl_v[as=smp,vc=smp]
*** be_v cramped ; ^ cramped 1
->amh 'f_g_v[as=smp,vc=ps]
*** be_v crazy ; ^ crazy 1
->amh 'bd_v[as=smp,vc=smp]
*** be_v created ; ^ created 1
->amh fTr_v[as=smp,vc=ps]
*** be_v crippled ; ^ crippled 1
->amh kWramt_v[as=smp,vc=tr]
->amh snkl_v[as=smp,vc=ps]
*** be_v criticised ; ^ criticised 1
->amh nqf_v[as=smp,vc=ps]
*** be_v criticized ; ^ criticized 1
->amh tc_*_v[as=smp,vc=ps]
*** be_v crooked ; ^ crooked 1
->amh Tmm_v[as=smp,vc=smp]
->amh Tmm_v[as=rc,vc=ps]
*** be_v cross-eyed ; ^ cross-eyed 1
->amh xndr_v[as=smp,vc=smp]
*** be_v crossbred ; ^ crossbred 1
->amh dq_l_v[as=rc,vc=ps]
*** be_v crowded ; ^ crowded 1
->amh Cnq_v[as=it,vc=ps]
->amh Tbb_v[as=rc,vc=ps]
*** be_v crowned ; ^ crowned 1
->amh qdaj*_v[as=smp,vc=ps]
*** be_v crucified ; ^ crucified 1
->amh sql_v[as=smp,vc=ps]
*** be_v cruel ; ^ cruel 1
->amh Ck_n_v[as=smp,vc=smp]
*** be_v crumbled ; ^ crumbled 1
->amh qWrs_v[as=it,vc=ps]
*** be_v crushed ; ^ crushed 1
->amh damT_v[as=smp,vc=ps]
->amh Cflq_v[as=smp,vc=ps]
*** be_v crusty ; ^ crusty 1
->amh qnbr_v[as=smp,vc=smp]
*** be_v cured ; ^ cured 1
->amh d'n_v[as=smp,vc=smp]
->amh x'r_v[as=smp,vc=smp]
*** be_v cursed ; ^ cursed 1
->amh rgm_v[as=smp,vc=ps]
*** be_v curved ; ^ curved 1
->amh gWbT_v[as=smp,vc=smp]
*** be_v customary ; ^ customary 1
->amh lmd_v[as=smp,vc=ps]
*** be_v cut ; ^ cut 1
->amh krkm_v[as=smp,vc=ps]
->amh qWr_'_v[as=smp,vc=ps]
->amh qWrT_v[as=smp,vc=ps]
*** be_v damp ; ^ damp 1
->amh rTb_v[as=smp,vc=smp]
*** be_v dark ; ^ dark 1
->amh mx*_v[as=smp,vc=smp]
->amh Cl_m_v[as=smp,vc=smp]
->amh dngz_v[as=smp,vc=smp]
*** be_v daubed ; ^ daubed 1
->amh lqlq_v[as=smp,vc=ps]
*** be_v de-husked ; ^ de-husked 1
->amh xkxk_v[as=smp,vc=ps]
->amh xlqq_v[as=smp,vc=ps]
*** be_v deaf ; ^ deaf 1
->amh dnqWr_v[as=smp,vc=smp]
*** be_v deceived ; ^ deceived 1
->amh tall_v[as=smp,vc=ps]
->amh wnbd_v[as=rc,vc=ps]
*** be_v decided ; ^ decided 1
->amh ws_n_v[as=smp,vc=ps]
->amh qWrT_v[as=smp,vc=ps]
*** be_v declared ; ^ declared 1
->amh glS_v[as=smp,vc=ps]
*** be_v decorated ; ^ decorated 1
->amh gyT_v[as=smp,vc=tr]
->amh xl_m_v[as=smp,vc=ps]
*** be_v decreased ; ^ decreased 1
->amh qn_s_v[as=smp,vc=ps]
*** be_v deep ; ^ deep 1
->amh Tlq_v[as=smp,vc=smp]
*** be_v defiled ; ^ defiled 1
->amh rks_v[as=smp,vc=smp]
*** be_v deformed ; ^ deformed 1
->amh Cramt_v[as=smp,vc=ps]
->amh Cramd_v[as=smp,vc=ps]
->amh Cramm_v[as=smp,vc=ps]
*** be_v delayed ; ^ delayed 1
->amh zgy*_v[as=smp,vc=smp]
*** be_v delegated ; ^ delegated 1
->amh wk_l_v[as=smp,vc=ps]
*** be_v delicious ; ^ delicious 1
->amh TafT_v[as=smp,vc=smp]
*** be_v deloused ; ^ deloused 1
->amh qml_v[as=smp,vc=ps]
*** be_v denied ; ^ denied 1
->amh 'bl_v[as=smp,vc=ps]
->amh k'd_v[as=smp,vc=ps]
*** be_v deprived ; ^ deprived 1
->amh nfg_v[as=smp,vc=ps]
*** be_v destroyed ; ^ destroyed 1
->amh Tf'_v[as=smp,vc=smp]
->amh dmss_v[as=smp,vc=ps]
->amh frs_v[as=smp,vc=smp]
*** be_v developed ; ^ developed 1
->amh lm'_v[as=smp,vc=smp]
*** be_v difficult ; ^ difficult 1
->amh Tn_n_v[as=smp,vc=smp]
->amh dagt_v[as=smp,vc=tr]
->amh Snn_v[as=smp,vc=smp]
->amh kbd_v[as=smp,vc=smp]
->amh q't_v[as=smp,vc=tr]
->amh 'w_k_v[as=smp,vc=smp]
*** be_v digested ; ^ digested 1
->amh bl'_v[as=it,vc=ps]
*** be_v diked ; ^ diked 1
->amh kt_r_v[as=smp,vc=ps]
*** be_v diligent ; ^ diligent 1
->amh tg'_v[as=smp,vc=smp]
*** be_v diluted ; ^ diluted 1
->amh kl_s_v[as=smp,vc=ps]
->amh qTn_v[as=smp,vc=smp]
*** be_v dim ; ^ dim 1
->amh dbzz_v[as=smp,vc=smp]
*** be_v dipped ; ^ dipped 1
->amh dfq_v[as=smp,vc=ps]
*** be_v dirtied ; ^ dirtied 1
->amh r|mTmT_v[as=smp,vc=ps]
*** be_v dirty ; ^ dirty 1
->amh qWx_x_v[as=smp,vc=smp]
->amh 'df_v[as=smp,vc=smp]
*** be_v disappointed ; ^ disappointed 1
->amh 'z_b_v[as=it,vc=ps]
*** be_v disclosed ; ^ disclosed 1
->amh glS_v[as=smp,vc=ps]
->amh ks_t_v[as=smp,vc=ps]
*** be_v discoloured ; ^ discoloured 1
->amh dnbz_v[as=smp,vc=smp]
*** be_v discontinued ; ^ discontinued 1
->amh qWrT_v[as=rc,vc=ps]
*** be_v disentangled ; ^ disentangled 1
->amh ft'_v[as=it,vc=ps]
*** be_v disgusted ; ^ disgusted 1
->amh zgnn_v[as=smp,vc=smp]
*** be_v disgusting ; ^ disgusting 1
->amh gWfnn_v[as=smp,vc=smp]
*** be_v disinfected ; ^ disinfected 1
->amh Sd'_v[as=smp,vc=smp]
*** be_v disjointed ; ^ disjointed 1
->amh wlq_v[as=smp,vc=smp]
*** be_v disorganized ; ^ disorganized 1
->amh dblq_v[as=it,vc=ps]
*** be_v displayed ; ^ displayed 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v disputable ; ^ disputable 1
->amh CqCq_v[as=rc,vc=tr]
*** be_v disrespectful ; ^ disrespectful 1
->amh dfr_v[as=smp,vc=smp]
*** be_v disrupted ; ^ disrupted 1
->amh qaws_v[as=smp,vc=ps]
->amh fls_v[as=rc,vc=ps]
*** be_v distorted ; ^ distorted 1
->amh zb'_v[as=rc,vc=ps]
*** be_v distressed ; ^ distressed 1
->amh nk'_v[as=smp,vc=ps]
*** be_v distributed ; ^ distributed 1
->amh 'd_l_v[as=smp,vc=ps]
->amh drs_v[as=rc,vc=ps]
*** be_v disturbed ; ^ disturbed 1
->amh 'w_k_v[as=smp,vc=ps]
->amh wk'_v[as=smp,vc=tr]
->amh bTbT_v[as=smp,vc=ps]
->amh bTbT_v[as=rc,vc=ps]
->amh qWrqWr_v[as=smp,vc=ps]
*** be_v divested ; ^ divested 1
->amh gff_v[as=smp,vc=ps]
*** be_v divided ; ^ divided 1
->amh kfl_v[as=it,vc=ps]
->amh gms_v[as=smp,vc=ps]
->amh kfl_v[as=smp,vc=ps]
*** be_v donated ; ^ donated 1
->amh darg_v[as=smp,vc=ps]
*** be_v done ; ^ done 1
->amh drg_v[as=smp,vc=ps]
->amh dgm_v[as=it,vc=ps]
*** be_v drafted ; ^ drafted 1
->amh rqq_v[as=smp,vc=smp]
*** be_v drawn ; ^ drawn 1
->amh s'l_v[as=smp,vc=ps]
*** be_v drilled ; ^ drilled 1
->amh bs'_v[as=smp,vc=ps]
*** be_v dropped ; ^ dropped 1
->amh tw_v[as=smp,vc=ps]
*** be_v drowned ; ^ drowned 1
->amh smT_v[as=smp,vc=smp]
*** be_v drunk ; ^ drunk 1
->amh skr_v[as=smp,vc=smp]
*** be_v dry ; ^ dry 1
->amh drq_v[as=smp,vc=smp]
->amh kc_c_v[as=smp,vc=smp]
*** be_v dug ; ^ dug 1
->amh qWf_r_v[as=smp,vc=ps]
*** be_v dull ; ^ dull 1
->amh dWldWm_v[as=smp,vc=smp]
->amh dn_z_v[as=smp,vc=smp]
->amh fzz_v[as=smp,vc=smp]
->amh kc_c_v[as=smp,vc=smp]
->amh dd_b_v[as=smp,vc=smp]
->amh dnzz_v[as=smp,vc=smp]
*** be_v ejected ; ^ ejected 1
->amh s|fnTr_v[as=smp,vc=ps]
*** be_v eliminated ; ^ eliminated 1
->amh wg_d_v[as=smp,vc=ps]
*** be_v eloquent ; ^ eloquent 1
->amh sl'_v[as=smp,vc=smp]
*** be_v elucidated ; ^ elucidated 1
->amh br'_v[as=it,vc=ps]
*** be_v emaciated ; ^ emaciated 1
->amh C'C'_v[as=smp,vc=smp]
->amh mWg_g_v[as=smp,vc=smp]
->amh mnmn_v[as=smp,vc=smp]
->amh kWsmn_v[as=smp,vc=smp]
->amh slsl_v[as=smp,vc=smp]
*** be_v embarrassed ; ^ embarrassed 1
->amh sq_q_v[as=smp,vc=ps]
->amh Cnq_v[as=smp,vc=ps]
->amh 'fr_v[as=smp,vc=smp]
*** be_v embroidered ; ^ embroidered 1
->amh zmzm_v[as=smp,vc=ps]
*** be_v emphasized ; ^ emphasized 1
->amh Tnkr_v[as=rc,vc=ps]
*** be_v employed ; ^ employed 1
->amh qTr_v[as=smp,vc=ps]
*** be_v emptied ; ^ emptied 1
->amh zrgf_v[as=smp,vc=ps]
*** be_v encircled ; ^ encircled 1
->amh kbb_v[as=smp,vc=ps]
*** be_v engaged ; ^ engaged 1
->amh 'C*_v[as=smp,vc=smp]
->amh fT_m_v[as=it,vc=ps]
*** be_v enough ; ^ enough 1
->amh bq'_v[as=smp,vc=smp]
*** be_v enraged ; ^ enraged 1
->amh bgn_v[as=smp,vc=smp]
*** be_v enriched ; ^ enriched 1
->amh dabr_v[as=smp,vc=smp]
*** be_v enrolled ; ^ enrolled 1
->amh ktb_v[as=smp,vc=ps]
*** be_v entangled ; ^ entangled 1
->amh w|tbtb_v[as=smp,vc=ps]
->amh 'sr_v[as=it,vc=ps]
*** be_v enterprising ; ^ enterprising 1
->amh wT'_v[as=rc,vc=tr]
*** be_v enthusiastic ; ^ enthusiastic 1
->amh nx_T_v[as=smp,vc=smp]
*** be_v entwined ; ^ entwined 1
->amh TmTm_v[as=smp,vc=ps]
*** be_v enumerated ; ^ enumerated 1
->amh zrzr_v[as=smp,vc=ps]
*** be_v envigorated ; ^ envigorated 1
->amh Tnkr_v[as=rc,vc=ps]
*** be_v envious ; ^ envious 1
->amh qn'_v[as=smp,vc=smp]
*** be_v equalized ; ^ equalized 1
->amh 'k_l_v[as=it,vc=ps]
*** be_v eradicated ; ^ eradicated 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v erected ; ^ erected 1
->amh wqr_v[as=rc,vc=ps]
*** be_v eroded ; ^ eroded 1
->amh xrxr_v[as=smp,vc=ps]
->amh xntr_v[as=smp,vc=ps]
->amh bWrbWr_v[as=smp,vc=ps]
->amh 'Tb_v[as=smp,vc=ps]
*** be_v escorted ; ^ escorted 1
->amh 'j_b_v[as=smp,vc=ps]
*** be_v established ; ^ established 1
->amh qwm_v[as=it,vc=ps]
->amh qWrqWr_v[as=smp,vc=ps]
*** be_v estimated ; ^ estimated 1
->amh gm_t_v[as=smp,vc=ps]
*** be_v evaluated ; ^ evaluated 1
->amh gmgm_v[as=smp,vc=ps]
->amh frd_v[as=smp,vc=ps]
*** be_v evening ; ^ evening 1
->amh mx*_v[as=smp,vc=smp]
*** be_v evicted ; ^ evicted 1
->amh nql_v[as=smp,vc=ps]
*** be_v exaggerated ; ^ exaggerated 1
->amh ngs_v[as=rc,vc=ps]
->amh gnn_v[as=rc,vc=ps]
->amh dnq_v[as=rc,vc=ps]
*** be_v excellent ; ^ excellent 1
->amh n'q_v[as=smp,vc=cs]
*** be_v excluded ; ^ excluded 1
->amh gll_v[as=smp,vc=ps]
*** be_v exhausted ; ^ exhausted 1
->amh z|lflf_v[as=smp,vc=ps]
->amh z'l_v[as=smp,vc=smp]
->amh dkm_v[as=rc,vc=ps]
*** be_v exiled ; ^ exiled 1
->amh sdd_v[as=smp,vc=ps]
*** be_v expected ; ^ expected 1
->amh Tb_q_v[as=smp,vc=ps]
*** be_v expensive ; ^ expensive 1
->amh wdd_v[as=smp,vc=ps]
*** be_v explained ; ^ explained 1
->amh glS_v[as=smp,vc=ps]
*** be_v exploited ; ^ exploited 1
->amh mzbr_v[as=smp,vc=ps]
->amh bzbz_v[as=smp,vc=ps]
*** be_v exposed ; ^ exposed 1
->amh glS_v[as=rc,vc=ps]
*** be_v extended ; ^ extended 1
->amh zrg'_v[as=smp,vc=ps]
->amh rzm_v[as=smp,vc=smp]
*** be_v exterminated ; ^ exterminated 1
->amh CfCf_v[as=smp,vc=ps]
*** be_v extinguished ; ^ extinguished 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v famous ; ^ famous 1
->amh 'wq_v[as=smp,vc=ps]
->amh gnn_v[as=smp,vc=smp]
*** be_v fast ; ^ fast 1
->amh fTn_v[as=smp,vc=smp]
*** be_v fastened ; ^ fastened 1
->amh Tbq_v[as=smp,vc=smp]
*** be_v fat ; ^ fat 1
->amh gzf_v[as=smp,vc=smp]
->amh Tbdl_v[as=smp,vc=smp]
->amh dlb_v[as=smp,vc=smp]
->amh dWfdWf_v[as=smp,vc=smp]
->amh wf_r_v[as=it,vc=smp]
->amh sb'_v[as=smp,vc=smp]
*** be_v fattened ; ^ fattened 1
->amh mWl'_v[as=smp,vc=tr]
*** be_v feared ; ^ feared 1
->amh fr'_v[as=smp,vc=ps]
*** be_v fearful ; ^ fearful 1
->amh fr'_v[as=smp,vc=smp]
*** be_v feeble ; ^ feeble 1
->amh qWrqWz_v[as=smp,vc=smp]
*** be_v fenced ; ^ fenced 1
->amh 'Tr_v[as=smp,vc=ps]
*** be_v fermented ; ^ fermented 1
->amh fl'_v[as=smp,vc=smp]
->amh bl'_v[as=it,vc=ps]
->amh bWk'_v[as=smp,vc=smp]
*** be_v fertile ; ^ fertile 1
->amh rb'_v[as=smp,vc=smp]
*** be_v filed ; ^ filed 1
->amh mWr_d_v[as=smp,vc=ps]
*** be_v filled ; ^ filled 1
->amh mWl'_v[as=smp,vc=ps]
*** be_v filtered ; ^ filtered 1
->amh Tr'_v[as=rc,vc=ps]
->amh Tl_l_v[as=smp,vc=smp]
*** be_v fine ; ^ fine 1
->amh dqq_v[as=smp,vc=smp]
*** be_v finished ; ^ finished 1
->amh Tnqq_v[as=rc,vc=ps]
->amh Cr_s_v[as=smp,vc=ps]
*** be_v fired ; ^ fired 1
->amh wg_d_v[as=smp,vc=ps]
->amh tkW_s_v[as=smp,vc=ps]
->amh brr_v[as=rc,vc=ps]
*** be_v firm ; ^ firm 1
->amh Tbq_v[as=smp,vc=smp]
->amh Tn'_v[as=smp,vc=smp]
*** be_v fixed ; ^ fixed 1
->amh wdd_v[as=rc,vc=ps]
*** be_v flavourless ; ^ flavourless 1
->amh 'l_T_v[as=smp,vc=smp]
*** be_v fleeced ; ^ fleeced 1
->amh mWl_C_v[as=smp,vc=ps]
*** be_v fleshy ; ^ fleshy 1
->amh frTm_v[as=smp,vc=tr]
->amh frTm_v[as=smp,vc=smp]
*** be_v flooded ; ^ flooded 1
->amh T|lqlq_v[as=smp,vc=ps]
*** be_v folded ; ^ folded 1
->amh 'Tf_v[as=smp,vc=ps]
*** be_v fooled ; ^ fooled 1
->amh blT_v[as=smp,vc=ps]
*** be_v forbearing ; ^ forbearing 1
->amh c'l_v[as=smp,vc=cs]
*** be_v forced ; ^ forced 1
->amh gdd_v[as=smp,vc=ps]
*** be_v forgotten ; ^ forgotten 1
->amh zng'_v[as=it,vc=ps]
->amh rs'_v[as=smp,vc=ps]
->amh zng'_v[as=smp,vc=ps]
*** be_v found ; ^ found 1
->amh gN*_v[as=smp,vc=ps]
*** be_v founded ; ^ founded 1
->amh msrt_v[as=smp,vc=ps]
*** be_v frenzied ; ^ frenzied 1
->amh 'bd_v[as=smp,vc=smp]
*** be_v frequent ; ^ frequent 1
->amh dgm_v[as=it,vc=ps]
*** be_v frightened ; ^ frightened 1
->amh fr'_v[as=smp,vc=smp]
->amh n|qTqT_v[as=smp,vc=ps]
*** be_v frisky ; ^ frisky 1
->amh 'l_l_v[as=smp,vc=smp]
*** be_v frizzy ; ^ frizzy 1
->amh n|kfrr_v[as=smp,vc=ps]
*** be_v full ; ^ full 1
->amh mWl'_v[as=smp,vc=smp]
->amh Tgb_v[as=smp,vc=smp]
*** be_v fumigated ; ^ fumigated 1
->amh 'Tn_v[as=smp,vc=ps]
*** be_v gathered ; ^ gathered 1
->amh sbsb_v[as=smp,vc=ps]
*** be_v generous ; ^ generous 1
->amh lg_s_v[as=smp,vc=smp]
->amh cyr_v[as=smp,vc=smp]
*** be_v gentle ; ^ gentle 1
->amh lz_b_v[as=smp,vc=smp]
*** be_v given ; ^ given 1
->amh sT*_v[as=smp,vc=ps]
->amh rd'_v[as=smp,vc=ps]
->amh by_n_v[as=smp,vc=ps]
*** be_v gleaned ; ^ gleaned 1
->amh qarm_v[as=smp,vc=ps]
*** be_v gloomy ; ^ gloomy 1
->amh n|Trzz_v[as=smp,vc=ps]
*** be_v glowing ; ^ glowing 1
->amh f'm_v[as=smp,vc=smp]
*** be_v glued ; ^ glued 1
->amh Tbq_v[as=rc,vc=ps]
*** be_v grabbed ; ^ grabbed 1
->amh Cb_t_v[as=smp,vc=ps]
->amh qm_'_v[as=smp,vc=ps]
*** be_v grave ; ^ grave 1
->amh kbd_v[as=smp,vc=smp]
*** be_v greasy ; ^ greasy 1
->amh q|lTlT_v[as=smp,vc=ps]
*** be_v greedy ; ^ greedy 1
->amh s's'_v[as=smp,vc=smp]
->amh s|gbgb_v[as=smp,vc=ps]
->amh n|gbgb_v[as=smp,vc=ps]
*** be_v green ; ^ green 1
->amh ClCl_v[as=smp,vc=tr]
->amh lmlm_v[as=smp,vc=tr]
->amh lmlm_v[as=smp,vc=smp]
*** be_v grey ; ^ grey 1
->amh xb_t_v[as=smp,vc=smp]
*** be_v ground ; ^ ground 1
->amh qWrTm_v[as=smp,vc=ps]
*** be_v guzzled ; ^ guzzled 1
->amh l'f_v[as=smp,vc=ps]
*** be_v hacked ; ^ hacked 1
->amh gmdl_v[as=smp,vc=ps]
*** be_v haltered ; ^ haltered 1
->amh xb_b_v[as=smp,vc=ps]
*** be_v hammered ; ^ hammered 1
->amh qTqT_v[as=smp,vc=ps]
*** be_v hanged ; ^ hanged 1
->amh sql_v[as=smp,vc=ps]
*** be_v hard ; ^ hard 1
->amh gg_r_v[as=smp,vc=smp]
->amh Tnkr_v[as=smp,vc=smp]
->amh gWrbT_v[as=smp,vc=smp]
*** be_v harmed ; ^ harmed 1
->amh gWd'_v[as=smp,vc=ps]
*** be_v harnessed ; ^ harnessed 1
->amh lb_b_v[as=smp,vc=ps]
*** be_v harrowed ; ^ harrowed 1
->amh ksks_v[as=smp,vc=ps]
*** be_v harsh ; ^ harsh 1
->amh xakr_v[as=smp,vc=smp]
*** be_v hasted ; ^ hasted 1
->amh wkb_v[as=rc,vc=ps]
*** be_v hatched ; ^ hatched 1
->amh flfl_v[as=smp,vc=ps]
->amh qfqf_v[as=smp,vc=ps]
*** be_v hated ; ^ hated 1
->amh Tl'_v[as=smp,vc=ps]
*** be_v healed ; ^ healed 1
->amh d'n_v[as=smp,vc=smp]
->amh fw_s_v[as=smp,vc=ps]
->amh x'r_v[as=smp,vc=smp]
*** be_v heaped ; ^ heaped 1
->amh qWl_l_v[as=smp,vc=ps]
*** be_v heard ; ^ heard 1
->amh sm'_v[as=smp,vc=ps]
*** be_v heated ; ^ heated 1
->amh g'l_v[as=it,vc=ps]
->amh g'l_v[as=smp,vc=smp]
*** be_v heavy ; ^ heavy 1
->amh kbd_v[as=rc,vc=ps]
->amh kbd_v[as=smp,vc=smp]
*** be_v helped ; ^ helped 1
->amh rd'_v[as=smp,vc=ps]
*** be_v helpful ; ^ helpful 1
->amh gdd_v[as=rc,vc=tr]
->amh Tqm_v[as=smp,vc=smp]
*** be_v hewed ; ^ hewed 1
->amh krtf_v[as=smp,vc=ps]
*** be_v hidden ; ^ hidden 1
->amh db_q_v[as=smp,vc=ps]
->amh xx_g_v[as=smp,vc=ps]
->amh xf_n_v[as=it,vc=ps]
*** be_v hindered ; ^ hindered 1
->amh nTb_v[as=rc,vc=ps]
*** be_v hit ; ^ hit 1
->amh ql'_v[as=smp,vc=ps]
->amh Zl_T_v[as=smp,vc=ps]
->amh lt_m_v[as=smp,vc=ps]
->amh mt'_v[as=smp,vc=ps]
*** be_v hobbled ; ^ hobbled 1
->amh qy_d_v[as=smp,vc=ps]
->amh snkl_v[as=smp,vc=ps]
*** be_v hoed ; ^ hoed 1
->amh kWtkWt_v[as=smp,vc=ps]
*** be_v hollow ; ^ hollow 1
->amh gWdgWd_v[as=smp,vc=smp]
*** be_v hollowed ; ^ hollowed 1
->amh flfl_v[as=smp,vc=ps]
*** be_v honest ; ^ honest 1
->amh mc_*_v[as=smp,vc=tr]
*** be_v honoured ; ^ honoured 1
->amh kbr_v[as=smp,vc=smp]
->amh kbr_v[as=smp,vc=ps]
*** be_v horrified ; ^ horrified 1
->amh zgnn_v[as=smp,vc=smp]
*** be_v hot ; ^ hot 1
->amh mwq_v[as=smp,vc=smp]
->amh g'l_v[as=smp,vc=smp]
->amh tkW_s_v[as=smp,vc=smp]
->amh fj*_v[as=rc,vc=ps]
*** be_v housed ; ^ housed 1
->amh 'rf_v[as=smp,vc=smp]
*** be_v humiliated ; ^ humiliated 1
->amh wrd_v[as=rc,vc=ps]
*** be_v humped ; ^ humped 1
->amh gWbT_v[as=smp,vc=smp]
*** be_v hung ; ^ hung 1
->amh n|TlTl_v[as=smp,vc=ps]
*** be_v hungry ; ^ hungry 1
->amh r'b_v[as=smp,vc=smp]
->amh r'b_v[as=smp,vc=ps]
*** be_v hurt ; ^ hurt 1
->amh kf'_v[as=smp,vc=ps]
*** be_v husked ; ^ husked 1
->amh flfl_v[as=smp,vc=ps]
*** be_v idle ; ^ idle 1
->amh wslt_v[as=smp,vc=tr]
->amh bWz_n_v[as=smp,vc=smp]
->amh magT_v[as=smp,vc=smp]
->amh lsls_v[as=rc,vc=ps]
*** be_v ignored ; ^ ignored 1
->amh 'lf_v[as=smp,vc=ps]
*** be_v ill ; ^ ill 1
->amh 'mm_v[as=smp,vc=smp]
*** be_v illustrious ; ^ illustrious 1
->amh gnn_v[as=smp,vc=smp]
*** be_v impatient ; ^ impatient 1
->amh q|nznz_v[as=smp,vc=ps]
*** be_v impeached ; ^ impeached 1
->amh x'r_v[as=smp,vc=ps]
*** be_v imperative ; ^ imperative 1
->amh fl_g_v[as=smp,vc=cs]
*** be_v impertinent ; ^ impertinent 1
->amh ftft_v[as=smp,vc=smp]
*** be_v implicated ; ^ implicated 1
->amh bk_l_v[as=smp,vc=ps]
*** be_v impolite ; ^ impolite 1
->amh nw_r_v[as=smp,vc=cs]
*** be_v important ; ^ important 1
->amh fl_g_v[as=smp,vc=cs]
*** be_v importunate ; ^ importunate 1
->amh cg_r_v[as=smp,vc=cs]
->amh n|sfsf_v[as=smp,vc=ps]
->amh nznz_v[as=smp,vc=smp]
->amh mWz_z_v[as=smp,vc=smp]
*** be_v impossible ; ^ impossible 1
->amh dagt_v[as=smp,vc=tr]
*** be_v impounded ; ^ impounded 1
->amh y'z_v[as=smp,vc=ps]
*** be_v impoverished ; ^ impoverished 1
->amh dxy*_v[as=smp,vc=smp]
*** be_v impressed ; ^ impressed 1
->amh dnq_v[as=smp,vc=tr]
*** be_v imprisoned ; ^ imprisoned 1
->amh 'sr_v[as=smp,vc=ps]
*** be_v improved ; ^ improved 1
->amh x'l_v[as=it,vc=ps]
*** be_v impure ; ^ impure 1
->amh rks_v[as=smp,vc=smp]
*** be_v inactive ; ^ inactive 1
->amh wt_f_v[as=smp,vc=ps]
*** be_v incised ; ^ incised 1
->amh bT'_v[as=smp,vc=ps]
*** be_v incoherent ; ^ incoherent 1
->amh zb'_v[as=rc,vc=ps]
*** be_v incomparable ; ^ incomparable 1
->amh n'q_v[as=smp,vc=cs]
*** be_v inconstant ; ^ inconstant 1
->amh wall_v[as=smp,vc=smp]
*** be_v increased ; ^ increased 1
->amh 'k_l_v[as=smp,vc=ps]
*** be_v indecent ; ^ indecent 1
->amh nw_r_v[as=smp,vc=cs]
*** be_v induced ; ^ induced 1
->amh ns'_v[as=it,vc=ps]
*** be_v inflamed ; ^ inflamed 1
->amh y'z_v[as=it,vc=ps]
*** be_v inflated ; ^ inflated 1
->amh qt_r_v[as=smp,vc=ps]
->amh nf'_v[as=smp,vc=ps]
*** be_v infuriated ; ^ infuriated 1
->amh db_n_v[as=smp,vc=smp]
->amh Tys_v[as=smp,vc=smp]
*** be_v inherited ; ^ inherited 1
->amh wrs_v[as=smp,vc=ps]
*** be_v inquisitive ; ^ inquisitive 1
->amh tWstWs_v[as=smp,vc=tr]
*** be_v insane ; ^ insane 1
->amh 'bd_v[as=smp,vc=smp]
*** be_v inserted ; ^ inserted 1
->amh dnqr_v[as=smp,vc=ps]
->amh zrnq_v[as=smp,vc=ps]
*** be_v inspected ; ^ inspected 1
->amh ft_x_v[as=smp,vc=ps]
*** be_v instigated ; ^ instigated 1
->amh gf'_v[as=it,vc=ps]
*** be_v insulted ; ^ insulted 1
->amh sdb_v[as=smp,vc=ps]
*** be_v insulting ; ^ insulting 1
->amh mWTmWT_v[as=smp,vc=tr]
*** be_v interfering ; ^ interfering 1
->amh tWstWs_v[as=smp,vc=tr]
*** be_v interlocked ; ^ interlocked 1
->amh qWl_f_v[as=rc,vc=ps]
->amh sk_'_v[as=rc,vc=ps]
->amh qWaTr_v[as=it,vc=tr]
*** be_v interrupted ; ^ interrupted 1
->amh dnaqf_v[as=smp,vc=ps]
*** be_v intrusive ; ^ intrusive 1
->amh ftft_v[as=smp,vc=smp]
*** be_v invaded ; ^ invaded 1
->amh wrr_v[as=smp,vc=ps]
*** be_v irascible ; ^ irascible 1
->amh kWrf_v[as=smp,vc=ps]
*** be_v ironed ; ^ ironed 1
->amh tkW_s_v[as=smp,vc=ps]
*** be_v itemized ; ^ itemized 1
->amh zrzr_v[as=smp,vc=ps]
*** be_v jealous ; ^ jealous 1
->amh qn'_v[as=smp,vc=smp]
*** be_v jubilant ; ^ jubilant 1
->amh fndq_v[as=smp,vc=smp]
*** be_v judged ; ^ judged 1
->amh frd_v[as=smp,vc=ps]
*** be_v jumpy ; ^ jumpy 1
->amh xmqq_v[as=rc,vc=ps]
*** be_v kept ; ^ kept 1
->amh Tb_q_v[as=smp,vc=ps]
*** be_v kicked ; ^ kicked 1
->amh rgT_v[as=smp,vc=ps]
*** be_v killed ; ^ killed 1
->amh gdl_v[as=smp,vc=ps]
*** be_v kinky ; ^ kinky 1
->amh krdd_v[as=smp,vc=smp]
*** be_v kissed ; ^ kissed 1
->amh s'm_v[as=smp,vc=ps]
*** be_v kneaded ; ^ kneaded 1
->amh laqWT_v[as=smp,vc=smp]
->amh bWk'_v[as=smp,vc=ps]
*** be_v knocked-down ; ^ knocked-down 1
->amh zr_r_v[as=smp,vc=ps]
*** be_v known ; ^ known 1
->amh 'wq_v[as=smp,vc=ps]
*** be_v late ; ^ late 1
->amh qWy_*_v[as=smp,vc=smp]
->amh zgy*_v[as=smp,vc=smp]
->amh rfd_v[as=smp,vc=smp]
*** be_v lazy ; ^ lazy 1
->amh snf_v[as=smp,vc=smp]
*** be_v lean ; ^ lean 1
->amh gWfy*_v[as=smp,vc=smp]
*** be_v led ; ^ led 1
->amh mr'_v[as=smp,vc=ps]
*** be_v left ; ^ left 1
->amh tw_v[as=smp,vc=ps]
*** be_v leveled ; ^ leveled 1
->amh dldl_v[as=smp,vc=ps]
*** be_v licked ; ^ licked 1
->amh l's_v[as=smp,vc=ps]
*** be_v lifeless ; ^ lifeless 1
->amh qzqz_v[as=smp,vc=smp]
->amh bwz_v[as=smp,vc=smp]
*** be_v light ; ^ light 1
->amh qll_v[as=smp,vc=smp]
*** be_v lighter ; ^ lighter 1
->amh nT'_v[as=it,vc=smp]
*** be_v limited ; ^ limited 1
->amh ws_n_v[as=smp,vc=ps]
*** be_v listened ; ^ listened 1
->amh dmT_v[as=smp,vc=ps]
*** be_v live ; ^ live 1
->amh f'm_v[as=smp,vc=smp]
*** be_v lived ; ^ lived 1
->amh nwr_v[as=smp,vc=ps]
*** be_v lively ; ^ lively 1
->amh dr'_v[as=smp,vc=smp]
->amh dmq_v[as=smp,vc=smp]
->amh nq'_v[as=smp,vc=smp]
*** be_v loaded ; ^ loaded 1
->amh C'n_v[as=smp,vc=ps]
*** be_v loose ; ^ loose 1
->amh l'l'_v[as=smp,vc=smp]
*** be_v looted ; ^ looted 1
->amh mzbr_v[as=smp,vc=ps]
*** be_v loquacious ; ^ loquacious 1
->amh n|T'T'_v[as=smp,vc=ps]
*** be_v lost ; ^ lost 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v loved ; ^ loved 1
->amh wdd_v[as=smp,vc=ps]
*** be_v low-spirited ; ^ low-spirited 1
->amh qzz_v[as=smp,vc=smp]
*** be_v lucky ; ^ lucky 1
->amh 'd_l_v[as=smp,vc=ps]
*** be_v lukewarm ; ^ lukewarm 1
->amh ls_s_v[as=smp,vc=smp]
*** be_v lulled ; ^ lulled 1
->amh zng'_v[as=rc,vc=ps]
*** be_v luminous ; ^ luminous 1
->amh b|rqrq_v[as=smp,vc=tr]
*** be_v magnified ; ^ magnified 1
->amh gWl'_v[as=smp,vc=smp]
*** be_v maltreated ; ^ maltreated 1
->amh n|glat'_v[as=smp,vc=ps]
->amh gf'_v[as=smp,vc=ps]
*** be_v mandated ; ^ mandated 1
->amh wk_l_v[as=smp,vc=ps]
*** be_v married ; ^ married 1
->amh d'r_v[as=smp,vc=ps]
*** be_v mature ; ^ mature 1
->amh sk_n_v[as=smp,vc=smp]
->amh bsl_v[as=smp,vc=smp]
*** be_v measured ; ^ measured 1
->amh mtr_v[as=smp,vc=ps]
*** be_v meddlesome ; ^ meddlesome 1
->amh n|TWlTWl_v[as=smp,vc=ps]
*** be_v mentioned ; ^ mentioned 1
->amh ws_'_v[as=smp,vc=ps]
*** be_v merciful ; ^ merciful 1
->amh m'r_v[as=smp,vc=smp]
*** be_v merry ; ^ merry 1
->amh fnTz_v[as=smp,vc=smp]
*** be_v milked ; ^ milked 1
->amh 'lb_v[as=smp,vc=ps]
*** be_v minced ; ^ minced 1
->amh ktf_v[as=smp,vc=ps]
->amh qrTf_v[as=it,vc=ps]
*** be_v mischievous ; ^ mischievous 1
->amh k|lflf_v[as=smp,vc=ps]
*** be_v miserly ; ^ miserly 1
->amh nfg_v[as=smp,vc=smp]
*** be_v mishandled ; ^ mishandled 1
->amh gWsqWl_v[as=rc,vc=ps]
*** be_v missed ; ^ missed 1
->amh s't_v[as=smp,vc=ps]
*** be_v missing ; ^ missing 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v mixed ; ^ mixed 1
->amh qlaql_v[as=smp,vc=ps]
->amh dblq_v[as=rc,vc=ps]
->amh qy_T_v[as=smp,vc=ps]
*** be_v modest ; ^ modest 1
->amh 'fr_v[as=smp,vc=smp]
*** be_v morbid ; ^ morbid 1
->amh mWqmWq_v[as=smp,vc=smp]
*** be_v morning ; ^ morning 1
->amh ng'_v[as=smp,vc=smp]
*** be_v mowed ; ^ mowed 1
->amh 'Cd_v[as=smp,vc=ps]
*** be_v much ; ^ much 1
->amh bz'_v[as=smp,vc=tr]
*** be_v muddy ; ^ muddy 1
->amh Cqy*_v[as=smp,vc=smp]
->amh dfrs_v[as=smp,vc=smp]
*** be_v multiplied ; ^ multiplied 1
->amh bz'_v[as=rc,vc=ps]
*** be_v nailed ; ^ nailed 1
->amh cnkr_v[as=smp,vc=ps]
*** be_v naked ; ^ naked 1
->amh raqWt_v[as=smp,vc=ps]
*** be_v named ; ^ named 1
->amh sN*_v[as=smp,vc=ps]
*** be_v narrow ; ^ narrow 1
->amh Tbb_v[as=smp,vc=smp]
*** be_v naughty ; ^ naughty 1
->amh qbT_v[as=smp,vc=smp]
*** be_v near ; ^ near 1
->amh Tg'_v[as=smp,vc=ps]
*** be_v neat ; ^ neat 1
->amh Td'_v[as=smp,vc=smp]
*** be_v necessary ; ^ necessary 1
->amh fl_g_v[as=smp,vc=cs]
*** be_v need ; ^ need 1
->amh cg_r_v[as=smp,vc=ps]
*** be_v needy ; ^ needy 1
->amh 'T'_v[as=smp,vc=smp]
->amh cg_r_v[as=smp,vc=ps]
*** be_v noisy ; ^ noisy 1
->amh n|C'C'_v[as=smp,vc=ps]
*** be_v nominated ; ^ nominated 1
->amh TqW_m_v[as=smp,vc=ps]
*** be_v notorious ; ^ notorious 1
->amh qll_v[as=rc,vc=ps]
*** be_v numb ; ^ numb 1
->amh nzr_v[as=smp,vc=tr]
->amh fzz_v[as=smp,vc=smp]
*** be_v numerous ; ^ numerous 1
->amh bz'_v[as=smp,vc=tr]
*** be_v obeyed ; ^ obeyed 1
->amh sm'_v[as=smp,vc=ps]
*** be_v obligated ; ^ obligated 1
->amh gdd_v[as=smp,vc=ps]
*** be_v obliging ; ^ obliging 1
->amh mc_*_v[as=smp,vc=tr]
*** be_v obsessed ; ^ obsessed 1
->amh b|slsl_v[as=smp,vc=tr]
->amh b|slsl_v[as=smp,vc=ps]
*** be_v obstinate ; ^ obstinate 1
->amh d|rqrq_v[as=smp,vc=ps]
->amh n|gragr_v[as=smp,vc=tr]
*** be_v obstructed ; ^ obstructed 1
->amh 'g_d_v[as=smp,vc=ps]
*** be_v occupied ; ^ occupied 1
->amh y'z_v[as=smp,vc=ps]
*** be_v offended ; ^ offended 1
->amh mrr_v[as=smp,vc=tr]
->amh kf'_v[as=smp,vc=ps]
*** be_v offensive ; ^ offensive 1
->amh Sy_f_v[as=smp,vc=cs]
*** be_v open ; ^ open 1
->amh fnd'_v[as=smp,vc=smp]
*** be_v opened ; ^ opened 1
->amh glS_v[as=smp,vc=ps]
->amh kft_v[as=smp,vc=ps]
*** be_v oppressed ; ^ oppressed 1
->amh Tq'_v[as=smp,vc=ps]
->amh CqW_n_v[as=smp,vc=ps]
*** be_v ordered ; ^ ordered 1
->amh 'zz_v[as=smp,vc=ps]
*** be_v organized ; ^ organized 1
->amh drj*_v[as=rc,vc=ps]
*** be_v outstanding ; ^ outstanding 1
->amh n'q_v[as=smp,vc=cs]
*** be_v oval ; ^ oval 1
->amh mWlmWl_v[as=smp,vc=smp]
->amh mWl_l_v[as=smp,vc=smp]
*** be_v over-cooked ; ^ over-cooked 1
->amh nfr_v[as=smp,vc=smp]
*** be_v over-demanding ; ^ over-demanding 1
->amh mWlaqq_v[as=smp,vc=ps]
*** be_v over-hasty ; ^ over-hasty 1
->amh n|qlql_v[as=smp,vc=ps]
*** be_v over-inflated ; ^ over-inflated 1
->amh qbtt_v[as=smp,vc=ps]
*** be_v overbearing ; ^ overbearing 1
->amh 'by_v[as=smp,vc=ps]
*** be_v overcharged ; ^ overcharged 1
->amh gWd'_v[as=smp,vc=ps]
*** be_v overcooked ; ^ overcooked 1
->amh tkn_v[as=smp,vc=smp]
*** be_v overcrowded ; ^ overcrowded 1
->amh Cf_q_v[as=it,vc=ps]
*** be_v overflowing ; ^ overflowing 1
->amh T|lqlq_v[as=smp,vc=ps]
*** be_v overtaken ; ^ overtaken 1
->amh qdm_v[as=smp,vc=ps]
*** be_v overthrown ; ^ overthrown 1
->amh glbT_v[as=smp,vc=ps]
->amh fngl_v[as=smp,vc=ps]
*** be_v overwhelmed ; ^ overwhelmed 1
->amh T|lqlq_v[as=smp,vc=ps]
*** be_v packed ; ^ packed 1
->amh 'k_t_v[as=smp,vc=ps]
*** be_v paltered ; ^ paltered 1
->amh fnTq_v[as=rc,vc=ps]
*** be_v panic-stricken ; ^ panic-stricken 1
->amh xb_r_v[as=smp,vc=ps]
*** be_v paralyzed ; ^ paralyzed 1
->amh sl_l_v[as=smp,vc=smp]
*** be_v pardoned ; ^ pardoned 1
->amh m'r_v[as=smp,vc=ps]
*** be_v partial ; ^ partial 1
->amh dl'_v[as=smp,vc=tr]
->amh dl'_v[as=rc,vc=tr]
*** be_v partners ; ^ partners 1
->amh xark_v[as=smp,vc=ps]
*** be_v passed ; ^ passed 1
->amh 'lf_v[as=smp,vc=ps]
*** be_v patched ; ^ patched 1
->amh dr_t_v[as=smp,vc=ps]
*** be_v pathetic ; ^ pathetic 1
->amh kWn_n_v[as=smp,vc=cs]
*** be_v patient ; ^ patient 1
->amh 'g_s_v[as=smp,vc=ps]
->amh c'l_v[as=smp,vc=cs]
*** be_v peaceful ; ^ peaceful 1
->amh rg'_v[as=smp,vc=smp]
*** be_v peeled ; ^ peeled 1
->amh mlT_v[as=smp,vc=ps]
->amh l'T_v[as=smp,vc=ps]
*** be_v pensive ; ^ pensive 1
->amh tk_z_v[as=smp,vc=smp]
*** be_v persecuted ; ^ persecuted 1
->amh sdd_v[as=rc,vc=ps]
*** be_v perturbed ; ^ perturbed 1
->amh dnagr_v[as=smp,vc=ps]
*** be_v picked ; ^ picked 1
->amh lqm_v[as=smp,vc=ps]
*** be_v pinched ; ^ pinched 1
->amh qWnTr_v[as=smp,vc=ps]
->amh qWnTT_v[as=smp,vc=ps]
*** be_v pious ; ^ pious 1
->amh Sdq_v[as=smp,vc=smp]
*** be_v piquant ; ^ piquant 1
->amh kWr_T_v[as=smp,vc=smp]
*** be_v pitiable ; ^ pitiable 1
->amh 'zn_v[as=smp,vc=cs]
*** be_v pitiful ; ^ pitiful 1
->amh kWn_n_v[as=smp,vc=cs]
*** be_v plagued ; ^ plagued 1
->amh sqy*_v[as=rc,vc=ps]
*** be_v plaited ; ^ plaited 1
->amh gWngWn_v[as=smp,vc=ps]
*** be_v planed ; ^ planed 1
->amh l'g_v[as=smp,vc=ps]
*** be_v planned ; ^ planned 1
->amh 'q_d_v[as=smp,vc=ps]
*** be_v planted ; ^ planted 1
->amh tkl_v[as=smp,vc=ps]
*** be_v plastered ; ^ plastered 1
->amh mrg_v[as=smp,vc=ps]
->amh ls_n_v[as=smp,vc=ps]
*** be_v pleased ; ^ pleased 1
->amh ds_t_v[as=smp,vc=ps]
*** be_v pleated ; ^ pleated 1
->amh xnxn_v[as=smp,vc=ps]
*** be_v plentiful ; ^ plentiful 1
->amh brkt_v[as=smp,vc=smp]
->amh mWl'_v[as=smp,vc=smp]
->amh Z|gWdgWd_v[as=smp,vc=ps]
*** be_v ploughed ; ^ ploughed 1
->amh 'rs_v[as=smp,vc=ps]
*** be_v plucked ; ^ plucked 1
->amh qTf_v[as=smp,vc=ps]
*** be_v plugged ; ^ plugged 1
->amh wt_f_v[as=smp,vc=ps]
*** be_v plump ; ^ plump 1
->amh dndn_v[as=smp,vc=smp]
*** be_v plundered ; ^ plundered 1
->amh zrf_v[as=smp,vc=ps]
*** be_v pointed ; ^ pointed 1
->amh dg_n_v[as=smp,vc=ps]
*** be_v poked ; ^ poked 1
->amh qWsqWs_v[as=smp,vc=ps]
*** be_v polite ; ^ polite 1
->amh 'db_v[as=smp,vc=smp]
*** be_v poor ; ^ poor 1
->amh dxy*_v[as=smp,vc=smp]
*** be_v popular ; ^ popular 1
->amh lmd_v[as=smp,vc=ps]
*** be_v possible ; ^ possible 1
->amh c'l_v[as=smp,vc=ps]
*** be_v postponed ; ^ postponed 1
->amh 'lf_v[as=it,vc=ps]
*** be_v pot-bellied ; ^ pot-bellied 1
->amh n|zfTT_v[as=smp,vc=ps]
*** be_v pounded ; ^ pounded 1
->amh wqT_v[as=smp,vc=ps]
*** be_v powdered ; ^ powdered 1
->amh l'm_v[as=smp,vc=smp]
->amh dqW_s_v[as=smp,vc=ps]
*** be_v praised ; ^ praised 1
->amh msgn_v[as=smp,vc=ps]
*** be_v prayed ; ^ prayed 1
->amh Sl_y_v[as=smp,vc=ps]
*** be_v preached ; ^ preached 1
->amh sbk_v[as=smp,vc=ps]
*** be_v precious ; ^ precious 1
->amh kbr_v[as=smp,vc=smp]
*** be_v predominant ; ^ predominant 1
->amh 'y_l_v[as=smp,vc=smp]
*** be_v pregnant ; ^ pregnant 1
->amh rgz_v[as=smp,vc=tr]
->amh kbd_v[as=smp,vc=smp]
*** be_v preoccupied ; ^ preoccupied 1
->amh b|knkn_v[as=smp,vc=ps]
*** be_v prepared ; ^ prepared 1
->amh zgaj*_v[as=it,vc=ps]
->amh sl_f_v[as=smp,vc=ps]
->amh zgaj*_v[as=smp,vc=ps]
->amh dg_s_v[as=smp,vc=ps]
->amh sn_q_v[as=smp,vc=ps]
*** be_v pretentious ; ^ pretentious 1
->amh k|bsbs_v[as=smp,vc=ps]
*** be_v prevalent ; ^ prevalent 1
->amh 'y_l_v[as=smp,vc=smp]
*** be_v prevented ; ^ prevented 1
->amh nfg_v[as=smp,vc=ps]
->amh klkl_v[as=smp,vc=ps]
*** be_v profitable ; ^ profitable 1
->amh rb'_v[as=smp,vc=smp]
*** be_v profound ; ^ profound 1
->amh Tlq_v[as=smp,vc=smp]
*** be_v projected ; ^ projected 1
->amh s|fnTr_v[as=smp,vc=ps]
*** be_v proportionate ; ^ proportionate 1
->amh mT_n_v[as=it,vc=ps]
*** be_v proud ; ^ proud 1
->amh lT_T_v[as=smp,vc=ps]
->amh kWr'_v[as=smp,vc=smp]
->amh jn_n_v[as=smp,vc=ps]
*** be_v prudent ; ^ prudent 1
->amh Tnqq_v[as=smp,vc=ps]
->amh zy_d_v[as=smp,vc=smp]
*** be_v pulled ; ^ pulled 1
->amh gWt_t_v[as=smp,vc=ps]
->amh s'b_v[as=smp,vc=ps]
*** be_v punished ; ^ punished 1
->amh qT'_v[as=smp,vc=ps]
->amh qWnTT_v[as=smp,vc=ps]
->amh qsf_v[as=smp,vc=smp]
*** be_v pure ; ^ pure 1
->amh Tr'_v[as=smp,vc=smp]
->amh Tl_l_v[as=smp,vc=smp]
*** be_v purified ; ^ purified 1
->amh Tl_l_v[as=smp,vc=smp]
*** be_v putrid ; ^ putrid 1
->amh Tnb'_v[as=smp,vc=smp]
->amh gm'_v[as=smp,vc=smp]
*** be_v qualified ; ^ qualified 1
->amh bq'_v[as=smp,vc=smp]
*** be_v questionable ; ^ questionable 1
->amh Ty_q_v[as=rc,vc=tr]
->amh TrTr_v[as=rc,vc=tr]
*** be_v quick ; ^ quick 1
->amh fTn_v[as=smp,vc=smp]
*** be_v quiet ; ^ quiet 1
->amh 'rf_v[as=smp,vc=smp]
*** be_v quite ; ^ quite 1
->amh rg'_v[as=it,vc=ps]
*** be_v raged ; ^ raged 1
->amh ntb_v[as=smp,vc=smp]
*** be_v ragged ; ^ ragged 1
->amh znTl_v[as=it,vc=ps]
->amh zatl_v[as=smp,vc=smp]
*** be_v raised ; ^ raised 1
->amh Cm_r_v[as=smp,vc=ps]
->amh wT'_v[as=rc,vc=ps]
->amh wT'_v[as=it,vc=ps]
*** be_v raked ; ^ raked 1
->amh n|gWall_v[as=smp,vc=ps]
*** be_v rampant ; ^ rampant 1
->amh zmt_v[as=rc,vc=ps]
*** be_v ratified ; ^ ratified 1
->amh Sdq_v[as=smp,vc=smp]
*** be_v ravenous ; ^ ravenous 1
->amh sfsf_v[as=smp,vc=cs]
*** be_v reactivated ; ^ reactivated 1
->amh n|qsaqs_v[as=smp,vc=ps]
*** be_v ready ; ^ ready 1
->amh Tnqq_v[as=rc,vc=ps]
->amh zgaj*_v[as=smp,vc=ps]
->amh drs_v[as=smp,vc=smp]
*** be_v recited ; ^ recited 1
->amh dgm_v[as=smp,vc=ps]
*** be_v recommended ; ^ recommended 1
->amh 'C*_v[as=smp,vc=ps]
*** be_v reconciled ; ^ reconciled 1
->amh 'r_q_v[as=smp,vc=ps]
*** be_v recorded ; ^ recorded 1
->amh S'f_v[as=smp,vc=ps]
->amh wrs_v[as=it,vc=ps]
*** be_v recovered ; ^ recovered 1
->amh gN*_v[as=smp,vc=ps]
*** be_v redundant ; ^ redundant 1
->amh dr_b_v[as=it,vc=ps]
*** be_v refined ; ^ refined 1
->amh ngWr_v[as=smp,vc=ps]
*** be_v reflected ; ^ reflected 1
->amh n|Sbarq_v[as=smp,vc=ps]
*** be_v registered ; ^ registered 1
->amh mzgb_v[as=smp,vc=ps]
*** be_v reimbursed ; ^ reimbursed 1
->amh tk_'_v[as=smp,vc=ps]
*** be_v reinforced ; ^ reinforced 1
->amh Tnkr_v[as=rc,vc=ps]
*** be_v related ; ^ related 1
->amh tr_k_v[as=smp,vc=ps]
*** be_v relieved ; ^ relieved 1
->amh qy_r_v[as=smp,vc=ps]
*** be_v remembered ; ^ remembered 1
->amh ws_'_v[as=smp,vc=ps]
*** be_v removed ; ^ removed 1
->amh qrf_v[as=smp,vc=ps]
*** be_v repaired ; ^ repaired 1
->amh bj_*_v[as=it,vc=ps]
->amh bj_*_v[as=smp,vc=ps]
*** be_v repellent ; ^ repellent 1
->amh gWfnn_v[as=smp,vc=smp]
*** be_v reproached ; ^ reproached 1
->amh wqs_v[as=smp,vc=ps]
*** be_v respected ; ^ respected 1
->amh 'fr_v[as=smp,vc=ps]
*** be_v restive ; ^ restive 1
->amh n|gragr_v[as=smp,vc=tr]
*** be_v restless ; ^ restless 1
->amh qW|nTnT_v[as=smp,vc=ps]
->amh kl_f_v[as=smp,vc=smp]
->amh klb_v[as=smp,vc=smp]
->amh nawz_v[as=smp,vc=smp]
*** be_v reviewed ; ^ reviewed 1
->amh kl_s_v[as=smp,vc=ps]
*** be_v rich ; ^ rich 1
->amh kbr_v[as=smp,vc=smp]
->amh blTg_v[as=smp,vc=smp]
*** be_v rigged ; ^ rigged 1
->amh xq_b_v[as=smp,vc=ps]
*** be_v righteous ; ^ righteous 1
->amh bq'_v[as=smp,vc=smp]
*** be_v ringed ; ^ ringed 1
->amh sn_g_v[as=smp,vc=ps]
*** be_v ripe ; ^ ripe 1
->amh bsl_v[as=smp,vc=smp]
*** be_v ripped ; ^ ripped 1
->amh xrkt_v[as=smp,vc=ps]
*** be_v roasted ; ^ roasted 1
->amh qWl'_v[as=smp,vc=ps]
*** be_v robbed ; ^ robbed 1
->amh mWClf_v[as=smp,vc=ps]
*** be_v rolled ; ^ rolled 1
->amh d|bWlbWl_v[as=smp,vc=ps]
->amh x|krkr_v[as=smp,vc=ps]
*** be_v rotten ; ^ rotten 1
->amh mWqmWq_v[as=smp,vc=smp]
->amh bsbs_v[as=smp,vc=smp]
*** be_v rough ; ^ rough 1
->amh xakr_v[as=smp,vc=smp]
*** be_v routed ; ^ routed 1
->amh ft'_v[as=smp,vc=ps]
*** be_v rowed ; ^ rowed 1
->amh qzf_v[as=smp,vc=ps]
*** be_v rubbed ; ^ rubbed 1
->amh ft_g_v[as=smp,vc=ps]
->amh 'x*_v[as=smp,vc=ps]
->amh fgfg_v[as=smp,vc=ps]
*** be_v ruled ; ^ ruled 1
->amh gz'_v[as=smp,vc=ps]
*** be_v rumpled ; ^ rumpled 1
->amh rgb_v[as=smp,vc=smp]
->amh qfrr_v[as=smp,vc=ps]
*** be_v rung ; ^ rung 1
->amh dw_l_v[as=smp,vc=ps]
*** be_v runny ; ^ runny 1
->amh mWCmWC_v[as=smp,vc=smp]
*** be_v sacrificed ; ^ sacrificed 1
->amh sw_'_v[as=smp,vc=ps]
*** be_v sad ; ^ sad 1
->amh 'zn_v[as=smp,vc=smp]
->amh tk_z_v[as=smp,vc=smp]
*** be_v said ; ^ said 1
->amh b'l_v[as=smp,vc=ps]
*** be_v sanctified ; ^ sanctified 1
->amh qd_s_v[as=smp,vc=ps]
*** be_v satiated ; ^ satiated 1
->amh Tgb_v[as=smp,vc=smp]
*** be_v satisfied ; ^ satisfied 1
->amh rk'_v[as=smp,vc=smp]
*** be_v sausage-shaped ; ^ sausage-shaped 1
->amh mWl_l_v[as=smp,vc=smp]
*** be_v saved ; ^ saved 1
->amh d'n_v[as=smp,vc=smp]
->amh qWT_b_v[as=smp,vc=ps]
*** be_v savoury ; ^ savoury 1
->amh TafT_v[as=smp,vc=smp]
->amh T'm_v[as=smp,vc=smp]
*** be_v scalded ; ^ scalded 1
->amh mWxlq_v[as=smp,vc=ps]
*** be_v scattered ; ^ scattered 1
->amh n|TbTb_v[as=rc,vc=ps]
->amh naN*_v[as=smp,vc=ps]
->amh bt_n_v[as=it,vc=ps]
*** be_v scorched ; ^ scorched 1
->amh n|gbgb_v[as=smp,vc=ps]
*** be_v scorching ; ^ scorching 1
->amh grr_v[as=smp,vc=smp]
*** be_v scrapped ; ^ scrapped 1
->amh qff_v[as=smp,vc=ps]
*** be_v scratched ; ^ scratched 1
->amh mWaCr_v[as=smp,vc=ps]
*** be_v screened ; ^ screened 1
->amh kl_l_v[as=smp,vc=ps]
*** be_v scribbled ; ^ scribbled 1
->amh mWaCr_v[as=smp,vc=ps]
*** be_v scrubbed ; ^ scrubbed 1
->amh ft_g_v[as=smp,vc=ps]
*** be_v sealed ; ^ sealed 1
->amh 'x_g_v[as=smp,vc=ps]
*** be_v searched ; ^ searched 1
->amh ft_x_v[as=smp,vc=ps]
*** be_v seductive ; ^ seductive 1
->amh x|kWrmm_v[as=smp,vc=ps]
->amh x|kWrmm_v[as=smp,vc=tr]
*** be_v seen ; ^ seen 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v segmented ; ^ segmented 1
->amh kfl_v[as=it,vc=ps]
*** be_v segregated ; ^ segregated 1
->amh gll_v[as=smp,vc=ps]
*** be_v senile ; ^ senile 1
->amh jaj*_v[as=smp,vc=smp]
->amh n|glajj_v[as=smp,vc=ps]
->amh n|Zbarr_v[as=smp,vc=ps]
->amh gljj_v[as=smp,vc=smp]
->amh grjf_v[as=smp,vc=smp]
*** be_v sent ; ^ sent 1
->amh l'k_v[as=smp,vc=ps]
*** be_v separated ; ^ separated 1
->amh lqq_v[as=rc,vc=ps]
->amh r'q_v[as=it,vc=ps]
*** be_v serious ; ^ serious 1
->amh kbd_v[as=smp,vc=smp]
*** be_v served ; ^ served 1
->amh srr_v[as=smp,vc=ps]
->amh glgl_v[as=smp,vc=ps]
*** be_v servile ; ^ servile 1
->amh 'ns_v[as=smp,vc=smp]
*** be_v severe ; ^ severe 1
->amh kbd_v[as=smp,vc=smp]
*** be_v sewn ; ^ sewn 1
->amh wsws_v[as=smp,vc=ps]
*** be_v shaken ; ^ shaken 1
->amh wzwz_v[as=rc,vc=ps]
->amh nqnq_v[as=smp,vc=ps]
->amh ng'_v[as=rc,vc=ps]
*** be_v sharpened ; ^ sharpened 1
->amh sl'_v[as=smp,vc=smp]
->amh fC*_v[as=rc,vc=ps]
->amh qrS_v[as=smp,vc=ps]
->amh s'l_v[as=smp,vc=ps]
*** be_v sheared ; ^ sheared 1
->amh xl_t_v[as=smp,vc=ps]
*** be_v shelled ; ^ shelled 1
->amh flfl_v[as=smp,vc=ps]
*** be_v shortened ; ^ shortened 1
->amh krkm_v[as=smp,vc=ps]
*** be_v shouldered ; ^ shouldered 1
->amh 'ngt_v[as=smp,vc=ps]
*** be_v shown ; ^ shown 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v shrivelled ; ^ shrivelled 1
->amh kWramt_v[as=smp,vc=ps]
*** be_v sifted ; ^ sifted 1
->amh Tnff_v[as=smp,vc=smp]
*** be_v signed ; ^ signed 1
->amh fr_m_v[as=smp,vc=ps]
*** be_v simpleminded ; ^ simpleminded 1
->amh gljj_v[as=smp,vc=smp]
*** be_v simplified ; ^ simplified 1
->amh qll_v[as=rc,vc=ps]
*** be_v sipped ; ^ sipped 1
->amh qsm_v[as=smp,vc=ps]
*** be_v skilled ; ^ skilled 1
->amh slTn_v[as=smp,vc=smp]
*** be_v skimmed ; ^ skimmed 1
->amh gff_v[as=smp,vc=ps]
*** be_v skinned ; ^ skinned 1
->amh gff_v[as=smp,vc=ps]
*** be_v skinny ; ^ skinny 1
->amh ks'_v[as=smp,vc=smp]
*** be_v slandered ; ^ slandered 1
->amh 'm'_v[as=smp,vc=ps]
*** be_v slaughter ; ^ slaughter 1
->amh 'rd_v[as=smp,vc=ps]
*** be_v slow ; ^ slow 1
->amh gWadd_v[as=smp,vc=ps]
*** be_v smaller ; ^ smaller 1
->amh 'ns_v[as=smp,vc=smp]
*** be_v smart ; ^ smart 1
->amh gWb_z_v[as=smp,vc=smp]
*** be_v smashed ; ^ smashed 1
->amh Trms_v[as=smp,vc=ps]
*** be_v smeared ; ^ smeared 1
->amh Cmalq_v[as=smp,vc=ps]
->amh lqlq_v[as=smp,vc=ps]
*** be_v smoothed ; ^ smoothed 1
->amh lmss_v[as=smp,vc=ps]
*** be_v snapped ; ^ snapped 1
->amh bT_s_v[as=smp,vc=ps]
->amh bT_s_v[as=it,vc=ps]
*** be_v snatched ; ^ snatched 1
->amh ktlb_v[as=smp,vc=ps]
->amh mnTq_v[as=smp,vc=ps]
->amh mntf_v[as=smp,vc=ps]
*** be_v soaked ; ^ soaked 1
->amh nkr_v[as=smp,vc=ps]
->amh bxqT_v[as=smp,vc=smp]
->amh 'j_l_v[as=smp,vc=ps]
*** be_v soft-hearted ; ^ soft-hearted 1
->amh r|gbgb_v[as=smp,vc=ps]
*** be_v soiled ; ^ soiled 1
->amh 'df_v[as=smp,vc=smp]
*** be_v sold ; ^ sold 1
->amh xyT_v[as=smp,vc=ps]
->amh qn'_v[as=smp,vc=ps]
*** be_v solid ; ^ solid 1
->amh Tnkr_v[as=smp,vc=smp]
*** be_v sophisticated ; ^ sophisticated 1
->amh zb_n_v[as=smp,vc=smp]
*** be_v sorrowful ; ^ sorrowful 1
->amh 'zn_v[as=smp,vc=smp]
*** be_v sorry ; ^ sorry 1
->amh 'zn_v[as=smp,vc=smp]
->amh Tt_t_v[as=smp,vc=ps]
->amh SS_t_v[as=smp,vc=ps]
*** be_v sought ; ^ sought 1
->amh fl_g_v[as=smp,vc=ps]
*** be_v sown ; ^ sown 1
->amh zr'_v[as=smp,vc=ps]
*** be_v spared ; ^ spared 1
->amh trf_v[as=smp,vc=smp]
*** be_v spiced ; ^ spiced 1
->amh qm_m_v[as=smp,vc=ps]
*** be_v spilt ; ^ spilt 1
->amh df'_v[as=smp,vc=ps]
*** be_v splashed ; ^ splashed 1
->amh fnTq_v[as=rc,vc=ps]
*** be_v splay-footed ; ^ splay-footed 1
->amh n|xaff_v[as=smp,vc=tr]
*** be_v split ; ^ split 1
->amh flT_v[as=smp,vc=ps]
->amh snTq_v[as=smp,vc=ps]
*** be_v spoiled ; ^ spoiled 1
->amh mWlaqq_v[as=smp,vc=ps]
->amh n|qbarr_v[as=smp,vc=ps]
->amh blax*_v[as=smp,vc=ps]
->amh qbT_v[as=smp,vc=tr]
*** be_v spoilt ; ^ spoilt 1
->amh Tf'_v[as=smp,vc=smp]
*** be_v spread ; ^ spread 1
->amh nz'_v[as=smp,vc=ps]
->amh 'nTf_v[as=smp,vc=ps]
->amh zrg'_v[as=smp,vc=ps]
*** be_v sprinkled ; ^ sprinkled 1
->amh r|kfkf_v[as=smp,vc=ps]
->amh nsns_v[as=smp,vc=ps]
->amh rC*_v[as=smp,vc=ps]
*** be_v spun ; ^ spun 1
->amh ftl_v[as=smp,vc=ps]
*** be_v spurred ; ^ spurred 1
->amh kWlkWl_v[as=smp,vc=ps]
*** be_v squalid ; ^ squalid 1
->amh dss_v[as=smp,vc=smp]
*** be_v squeezed ; ^ squeezed 1
->amh Cb_t_v[as=smp,vc=ps]
->amh Cmq_v[as=smp,vc=ps]
*** be_v stamped ; ^ stamped 1
->amh 't_m_v[as=smp,vc=ps]
->amh daxq_v[as=smp,vc=smp]
*** be_v started ; ^ started 1
->amh wT_n_v[as=smp,vc=ps]
->amh jm_r_v[as=smp,vc=ps]
*** be_v stationed ; ^ stationed 1
->amh md_b_v[as=smp,vc=ps]
*** be_v sterile ; ^ sterile 1
->amh mkn_v[as=smp,vc=smp]
*** be_v sticky ; ^ sticky 1
->amh gagr_v[as=smp,vc=ps]
->amh malg_v[as=smp,vc=smp]
*** be_v stiffened ; ^ stiffened 1
->amh drq_v[as=smp,vc=smp]
*** be_v stirred ; ^ stirred 1
->amh msl_v[as=rc,vc=ps]
*** be_v stolen ; ^ stolen 1
->amh srq_v[as=smp,vc=ps]
->amh mntf_v[as=smp,vc=ps]
*** be_v stoned ; ^ stoned 1
->amh wgr_v[as=smp,vc=ps]
*** be_v stopped ; ^ stopped 1
->amh dfn_v[as=smp,vc=ps]
->amh qWrT_v[as=rc,vc=ps]
->amh tw_v[as=smp,vc=ps]
*** be_v stored ; ^ stored 1
->amh ktt_v[as=smp,vc=ps]
*** be_v stout ; ^ stout 1
->amh wd_l_v[as=smp,vc=smp]
->amh gzf_v[as=smp,vc=smp]
*** be_v straight ; ^ straight 1
->amh sl_f_v[as=smp,vc=ps]
*** be_v straightened ; ^ straightened 1
->amh qn'_v[as=rc,vc=ps]
->amh 'r_q_v[as=smp,vc=ps]
*** be_v stressed ; ^ stressed 1
->amh Tbq_v[as=smp,vc=smp]
*** be_v stretched ; ^ stretched 1
->amh lT_T_v[as=smp,vc=ps]
->amh wT_r_v[as=smp,vc=ps]
->amh n|frTT_v[as=smp,vc=ps]
*** be_v stripped ; ^ stripped 1
->amh glff_v[as=smp,vc=ps]
->amh lmlm_v[as=smp,vc=ps]
->amh z|gWrgWr_v[as=smp,vc=ps]
*** be_v strong ; ^ strong 1
->amh 'y_l_v[as=smp,vc=smp]
->amh Tnkr_v[as=smp,vc=smp]
->amh Tn'_v[as=smp,vc=smp]
->amh drq_v[as=smp,vc=smp]
->amh tb'_v[as=smp,vc=smp]
->amh gWlbt_v[as=smp,vc=smp]
->amh brt'_v[as=smp,vc=smp]
*** be_v strung ; ^ strung 1
->amh lmTT_v[as=smp,vc=ps]
*** be_v stubborn ; ^ stubborn 1
->amh drq_v[as=smp,vc=smp]
->amh Tmm_v[as=smp,vc=smp]
*** be_v stuck ; ^ stuck 1
->amh lT_f_v[as=smp,vc=ps]
*** be_v studied ; ^ studied 1
->amh Tn'_v[as=smp,vc=ps]
*** be_v stuffed ; ^ stuffed 1
->amh wT_q_v[as=smp,vc=ps]
->amh 'm_q_v[as=smp,vc=ps]
->amh sgsg_v[as=smp,vc=ps]
*** be_v stunted ; ^ stunted 1
->amh qnCr_v[as=smp,vc=smp]
*** be_v stupefied ; ^ stupefied 1
->amh fTT_v[as=rc,vc=ps]
*** be_v stupid ; ^ stupid 1
->amh dnqWr_v[as=smp,vc=smp]
->amh bwz_v[as=smp,vc=smp]
*** be_v subdued ; ^ subdued 1
->amh Tmd_v[as=smp,vc=ps]
->amh gz'_v[as=smp,vc=ps]
*** be_v submissive ; ^ submissive 1
->amh q|lsls_v[as=smp,vc=ps]
->amh x|qWTqWT_v[as=smp,vc=ps]
*** be_v subsidized ; ^ subsidized 1
->amh dgW_m_v[as=smp,vc=ps]
*** be_v substituted ; ^ substituted 1
->amh lw_T_v[as=smp,vc=ps]
->amh tk_'_v[as=smp,vc=ps]
*** be_v subtle ; ^ subtle 1
->amh rqq_v[as=rc,vc=ps]
*** be_v successful ; ^ successful 1
->amh sk_'_v[as=rc,vc=ps]
->amh mWl'_v[as=rc,vc=ps]
->amh gWb_z_v[as=smp,vc=smp]
->amh qn'_v[as=rc,vc=ps]
->amh wT'_v[as=rc,vc=ps]
->amh knawn_v[as=smp,vc=ps]
*** be_v sucked ; ^ sucked 1
->amh mTT_v[as=smp,vc=ps]
->amh mzmz_v[as=smp,vc=ps]
*** be_v sued ; ^ sued 1
->amh kss_v[as=smp,vc=ps]
*** be_v sulky ; ^ sulky 1
->amh kWrf_v[as=smp,vc=tr]
*** be_v sunburnt ; ^ sunburnt 1
->amh ksm_v[as=smp,vc=tr]
*** be_v sunk ; ^ sunk 1
->amh drsm_v[as=smp,vc=ps]
*** be_v superfluous ; ^ superfluous 1
->amh n|z'z'_v[as=smp,vc=ps]
->amh trf_v[as=smp,vc=smp]
->amh t|rfrf_v[as=smp,vc=ps]
*** be_v superior ; ^ superior 1
->amh l'q_v[as=smp,vc=smp]
*** be_v supple ; ^ supple 1
->amh l'l'_v[as=smp,vc=smp]
*** be_v supplemented ; ^ supplemented 1
->amh 'T'_v[as=it,vc=ps]
*** be_v supported ; ^ supported 1
->amh dg_f_v[as=smp,vc=ps]
*** be_v surrounded ; ^ surrounded 1
->amh 'Tr_v[as=smp,vc=ps]
*** be_v surveyed ; ^ surveyed 1
->amh Tn'_v[as=smp,vc=ps]
->amh qaN*_v[as=smp,vc=ps]
*** be_v suspected ; ^ suspected 1
->amh TrTr_v[as=smp,vc=ps]
*** be_v suspended ; ^ suspended 1
->amh n|TlTl_v[as=smp,vc=ps]
*** be_v suspicious ; ^ suspicious 1
->amh gngn_v[as=smp,vc=smp]
*** be_v swallowed ; ^ swallowed 1
->amh w'T_v[as=smp,vc=ps]
*** be_v sweet ; ^ sweet 1
->amh TafT_v[as=smp,vc=smp]
*** be_v swept ; ^ swept 1
->amh 's_s_v[as=smp,vc=ps]
*** be_v swollen ; ^ swollen 1
->amh 'bT_v[as=smp,vc=smp]
*** be_v tactful ; ^ tactful 1
->amh zy_d_v[as=smp,vc=smp]
*** be_v tainted ; ^ tainted 1
->amh wy_b_v[as=smp,vc=smp]
*** be_v taken ; ^ taken 1
->amh nT_l_v[as=smp,vc=ps]
->amh wsd_v[as=smp,vc=ps]
*** be_v taller ; ^ taller 1
->amh 'dg_v[as=smp,vc=smp]
*** be_v tamed ; ^ tamed 1
->amh gr'_v[as=smp,vc=ps]
*** be_v tasted ; ^ tasted 1
->amh qms_v[as=smp,vc=ps]
*** be_v tasty ; ^ tasty 1
->amh TafT_v[as=smp,vc=smp]
->amh T'm_v[as=smp,vc=smp]
*** be_v tattooed ; ^ tattooed 1
->amh nqs_v[as=smp,vc=ps]
*** be_v taxed ; ^ taxed 1
->amh qrT_v[as=smp,vc=ps]
*** be_v tended ; ^ tended 1
->amh 'rs_v[as=smp,vc=ps]
->amh 'g_d_v[as=smp,vc=ps]
*** be_v tender ; ^ tender 1
->amh lz_b_v[as=smp,vc=smp]
->amh lsls_v[as=rc,vc=ps]
*** be_v terrorized ; ^ terrorized 1
->amh r|btbt_v[as=smp,vc=ps]
->amh xb_r_v[as=smp,vc=ps]
*** be_v tested ; ^ tested 1
->amh ft_n_v[as=smp,vc=ps]
*** be_v thanked ; ^ thanked 1
->amh msgn_v[as=smp,vc=ps]
*** be_v thick ; ^ thick 1
->amh wf_r_v[as=smp,vc=smp]
*** be_v thin ; ^ thin 1
->amh sl_l_v[as=smp,vc=smp]
->amh qTn_v[as=smp,vc=smp]
->amh slsl_v[as=smp,vc=smp]
->amh gWfy*_v[as=smp,vc=smp]
->amh mnmn_v[as=smp,vc=smp]
->amh lw_T_v[as=it,vc=ps]
->amh 'l_T_v[as=smp,vc=smp]
->amh ks'_v[as=smp,vc=smp]
*** be_v thirsty ; ^ thirsty 1
->amh Tm'_v[as=smp,vc=ps]
*** be_v thought ; ^ thought 1
->amh 's_b_v[as=smp,vc=ps]
*** be_v threshed ; ^ threshed 1
->amh wq'_v[as=smp,vc=ps]
*** be_v thrifty ; ^ thrifty 1
->amh qWT_b_v[as=smp,vc=smp]
*** be_v thrown ; ^ thrown 1
->amh wrwr_v[as=smp,vc=ps]
*** be_v thwarted ; ^ thwarted 1
->amh Cngf_v[as=smp,vc=smp]
*** be_v tickled ; ^ tickled 1
->amh kWlkWl_v[as=smp,vc=ps]
*** be_v tied ; ^ tied 1
->amh qrqb_v[as=smp,vc=ps]
->amh qWraN*_v[as=smp,vc=ps]
*** be_v tight ; ^ tight 1
->amh Tbb_v[as=smp,vc=smp]
*** be_v tightened ; ^ tightened 1
->amh Tbq_v[as=smp,vc=smp]
*** be_v tiresome ; ^ tiresome 1
->amh slc*_v[as=smp,vc=smp]
*** be_v told ; ^ told 1
->amh wr'_v[as=smp,vc=ps]
*** be_v tongue-tied ; ^ tongue-tied 1
->amh mrg_v[as=smp,vc=ps]
*** be_v torn ; ^ torn 1
->amh qdd_v[as=smp,vc=ps]
*** be_v tortured ; ^ tortured 1
->amh n|grgb_v[as=smp,vc=ps]
->amh sqy*_v[as=rc,vc=ps]
*** be_v touched ; ^ touched 1
->amh nk'_v[as=smp,vc=ps]
*** be_v tough ; ^ tough 1
->amh Tnkr_v[as=smp,vc=smp]
->amh grjf_v[as=smp,vc=smp]
*** be_v transferred ; ^ transferred 1
->amh zwr_v[as=rc,vc=ps]
->amh qy_r_v[as=smp,vc=ps]
*** be_v translated ; ^ translated 1
->amh trgWm_v[as=smp,vc=ps]
*** be_v transported ; ^ transported 1
->amh gW'z_v[as=it,vc=ps]
*** be_v trapped ; ^ trapped 1
->amh Tmd_v[as=smp,vc=ps]
*** be_v treated ; ^ treated 1
->amh 'k_m_v[as=smp,vc=ps]
->amh mWax*_v[as=smp,vc=ps]
*** be_v trimmed ; ^ trimmed 1
->amh krkm_v[as=smp,vc=ps]
->amh kff_v[as=smp,vc=ps]
*** be_v tripped ; ^ tripped 1
->amh Tlf_v[as=smp,vc=ps]
*** be_v trustworthy ; ^ trustworthy 1
->amh 'mn_v[as=smp,vc=ps]
*** be_v tuned ; ^ tuned 1
->amh qaN*_v[as=smp,vc=ps]
*** be_v turbid ; ^ turbid 1
->amh dfrs_v[as=smp,vc=smp]
*** be_v turned ; ^ turned 1
->amh 'm_s_v[as=smp,vc=ps]
->amh zw_r_v[as=smp,vc=ps]
*** be_v twisted ; ^ twisted 1
->amh qWlmm_v[as=smp,vc=ps]
->amh wlagd_v[as=smp,vc=ps]
->amh n|gadd_v[as=smp,vc=ps]
*** be_v uncoiled ; ^ uncoiled 1
->amh trtr_v[as=smp,vc=ps]
*** be_v uncomfortable ; ^ uncomfortable 1
->amh gWrbT_v[as=smp,vc=smp]
*** be_v uncouth ; ^ uncouth 1
->amh x|gWaTT_v[as=smp,vc=tr]
*** be_v united ; ^ united 1
->amh 'br_v[as=it,vc=ps]
*** be_v unloaded ; ^ unloaded 1
->amh rgf_v[as=rc,vc=ps]
*** be_v unpopular ; ^ unpopular 1
->amh Tl'_v[as=smp,vc=ps]
*** be_v unsettled ; ^ unsettled 1
->amh n|qZqZ_v[as=smp,vc=ps]
*** be_v unsteady ; ^ unsteady 1
->amh wall_v[as=smp,vc=smp]
*** be_v unsuccessful ; ^ unsuccessful 1
->amh fWrx_v[as=smp,vc=smp]
*** be_v untidy ; ^ untidy 1
->amh z|rkrk_v[as=smp,vc=ps]
->amh n|zlazl_v[as=smp,vc=ps]
*** be_v unveiled ; ^ unveiled 1
->amh glS_v[as=smp,vc=ps]
*** be_v unzipped ; ^ unzipped 1
->amh trtr_v[as=smp,vc=ps]
*** be_v uprooted ; ^ uprooted 1
->amh fls_v[as=smp,vc=smp]
->amh mnTr_v[as=smp,vc=ps]
->amh nql_v[as=smp,vc=ps]
*** be_v used ; ^ used 1
->amh lmd_v[as=smp,vc=ps]
*** be_v useful ; ^ useful 1
->amh gdd_v[as=rc,vc=tr]
->amh fy_d_v[as=smp,vc=smp]
->amh Tqm_v[as=smp,vc=smp]
->amh rb'_v[as=smp,vc=smp]
*** be_v vaccinated ; ^ vaccinated 1
->amh ktb_v[as=smp,vc=ps]
*** be_v valid ; ^ valid 1
->amh glgl_v[as=smp,vc=tr]
*** be_v veiled ; ^ veiled 1
->amh gard_v[as=smp,vc=ps]
*** be_v venerated ; ^ venerated 1
->amh kbr_v[as=smp,vc=ps]
*** be_v verbose ; ^ verbose 1
->amh zbzb_v[as=smp,vc=smp]
*** be_v verdant ; ^ verdant 1
->amh CbCb_v[as=smp,vc=smp]
*** be_v verified ; ^ verified 1
->amh Tr'_v[as=rc,vc=ps]
*** be_v vexed ; ^ vexed 1
->amh ndd_v[as=rc,vc=ps]
*** be_v victorious ; ^ victorious 1
->amh xnf_v[as=smp,vc=cs]
*** be_v violated ; ^ violated 1
->amh dfr_v[as=smp,vc=ps]
*** be_v visible ; ^ visible 1
->amh 'y*_v[as=smp,vc=ps]
*** be_v vulgar ; ^ vulgar 1
->amh x|gWaTT_v[as=smp,vc=tr]
*** be_v warm ; ^ warm 1
->amh mwq_v[as=smp,vc=smp]
*** be_v wasted ; ^ wasted 1
->amh bakn_v[as=smp,vc=smp]
*** be_v weak ; ^ weak 1
->amh dqq_v[as=rc,vc=ps]
->amh lax*_v[as=smp,vc=smp]
->amh dgdg_v[as=smp,vc=smp]
->amh dkm_v[as=smp,vc=smp]
*** be_v weak-sighted ; ^ weak-sighted 1
->amh dgdg_v[as=smp,vc=smp]
->amh Tnabs_v[as=smp,vc=ps]
->amh dngz_v[as=smp,vc=smp]
*** be_v wealthy ; ^ wealthy 1
->amh kbr_v[as=smp,vc=smp]
*** be_v wedge-shaped ; ^ wedge-shaped 1
->amh xWTT_v[as=smp,vc=smp]
*** be_v weeded ; ^ weeded 1
->amh 'r_m_v[as=smp,vc=ps]
*** be_v weighed ; ^ weighed 1
->amh mz_n_v[as=smp,vc=ps]
*** be_v welded ; ^ welded 1
->amh by_d_v[as=smp,vc=ps]
*** be_v wet ; ^ wet 1
->amh r's_v[as=smp,vc=smp]
->amh rTb_v[as=smp,vc=smp]
*** be_v whipped ; ^ whipped 1
->amh grf_v[as=smp,vc=ps]
*** be_v white ; ^ white 1
->amh nT'_v[as=smp,vc=smp]
*** be_v wide ; ^ wide 1
->amh sf'_v[as=it,vc=ps]
*** be_v willful ; ^ willful 1
->amh n|gragr_v[as=smp,vc=tr]
*** be_v winnowed ; ^ winnowed 1
->amh tnfs_v[as=smp,vc=smp]
->amh bT_r_v[as=smp,vc=ps]
*** be_v worse ; ^ worse 1
->amh kf'_v[as=smp,vc=smp]
*** be_v worshipped ; ^ worshipped 1
->amh mlk_v[as=smp,vc=ps]
*** be_v wounded ; ^ wounded 1
->amh qWsl_v[as=smp,vc=smp]
*** be_v wretched ; ^ wretched 1
->amh gWsqWl_v[as=smp,vc=smp]
*** be_v wrinkled ; ^ wrinkled 1
->amh gW|rbrb_v[as=smp,vc=ps]
->amh Cmatr_v[as=smp,vc=ps]
->amh kWmatr_v[as=smp,vc=ps]
*** be_v written ; ^ written 1
->amh S'f_v[as=smp,vc=ps]
->amh drs_v[as=smp,vc=ps]
*** be_v wrung ; ^ wrung 1
->amh Cmq_v[as=smp,vc=ps]
*** be_v yellowish ; ^ yellowish 1
->amh wy_b_v[as=smp,vc=smp]
*** be_v yolked ; ^ yolked 1
->amh Tmd_v[as=rc,vc=ps]
*** be_v left behind ; ^ left 1
->amh rs'_v[as=smp,vc=ps] ; || 0, -1, -1
*** make_v fun of $n ; ^ make_v 0
->amh $n[cs=acc] xwf_v[as=smp,vc=tr] ; || 1, -1, -1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
## transitive entries
*** abandon_v $a $n ; ^ abandon_v 0
->amh $a[cs=acc] $n kd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abandon_v $n ; ^ abandon_v 0
->amh $n[cs=acc] kd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abandon_v $a $n ; ^ abandon_v 0
->amh $a[cs=acc] $n lqq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abandon_v $n ; ^ abandon_v 0
->amh $n[cs=acc] lqq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abhor_v $a $n ; ^ abhor_v 0
->amh $a[cs=acc] $n Ty_f_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abhor_v $n ; ^ abhor_v 0
->amh $n[cs=acc] Ty_f_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abhor_v $a $n ; ^ abhor_v 0
->amh $a[cs=acc] $n Sy_f_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abhor_v $n ; ^ abhor_v 0
->amh $n[cs=acc] Sy_f_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abort_v $a $n ; ^ abort_v 0
->amh $a[cs=acc] $n wrd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abort_v $n ; ^ abort_v 0
->amh $n[cs=acc] wrd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abort_v $a $n ; ^ abort_v 0
->amh $a[cs=acc] $n Cngf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abort_v $n ; ^ abort_v 0
->amh $n[cs=acc] Cngf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abridge_v $a $n ; ^ abridge_v 0
->amh $a[cs=acc] $n 'Tr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** abridge_v $n ; ^ abridge_v 0
->amh $n[cs=acc] 'Tr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** absorb_v $a $n ; ^ absorb_v 0
->amh $a[cs=acc] $n ms_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** absorb_v $n ; ^ absorb_v 0
->amh $n[cs=acc] ms_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accommodate_v $a $n ; ^ accommodate_v 0
->amh $a[cs=acc] $n nwr_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accommodate_v $n ; ^ accommodate_v 0
->amh $n[cs=acc] nwr_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accompany_v $a $n ; ^ accompany_v 0
->amh $a[cs=acc] $n zfn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accompany_v $n ; ^ accompany_v 0
->amh $n[cs=acc] zfn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accomplish_v $a $n ; ^ accomplish_v 0
->amh $a[cs=acc] $n knawn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accomplish_v $n ; ^ accomplish_v 0
->amh $n[cs=acc] knawn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accomplish_v $a $n ; ^ accomplish_v 0
->amh $a[cs=acc] $n sk_'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accomplish_v $n ; ^ accomplish_v 0
->amh $n[cs=acc] sk_'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $a $n ; ^ accumulate_v 0
->amh $a[cs=acc] $n kmac*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $n ; ^ accumulate_v 0
->amh $n[cs=acc] kmac*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $a $n ; ^ accumulate_v 0
->amh $a[cs=acc] $n qnbr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $n ; ^ accumulate_v 0
->amh $n[cs=acc] qnbr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $a $n ; ^ accumulate_v 0
->amh $a[cs=acc] $n Trqm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $n ; ^ accumulate_v 0
->amh $n[cs=acc] Trqm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $a $n ; ^ accumulate_v 0
->amh $a[cs=acc] $n kb_t_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $n ; ^ accumulate_v 0
->amh $n[cs=acc] kb_t_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $a $n ; ^ accumulate_v 0
->amh $a[cs=acc] $n sbsb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $n ; ^ accumulate_v 0
->amh $n[cs=acc] sbsb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $a $n ; ^ accumulate_v 0
->amh $a[cs=acc] $n kb_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accumulate_v $n ; ^ accumulate_v 0
->amh $n[cs=acc] kb_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accuse_v $a $n ; ^ accuse_v 0
->amh $a[cs=acc] $n kss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** accuse_v $n ; ^ accuse_v 0
->amh $n[cs=acc] kss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** acquire_v $a $n ; ^ acquire_v 0
->amh $a[cs=acc] $n gN*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** acquire_v $n ; ^ acquire_v 0
->amh $n[cs=acc] gN*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** acquire_v $a $n ; ^ acquire_v 0
->amh $a[cs=acc] $n gby*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** acquire_v $n ; ^ acquire_v 0
->amh $n[cs=acc] gby*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** add_v $a $n ; ^ add_v 0
->amh $a[cs=acc] $n Cm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** add_v $n ; ^ add_v 0
->amh $n[cs=acc] Cm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** add_v $a $n ; ^ add_v 0
->amh $a[cs=acc] $n dm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** add_v $n ; ^ add_v 0
->amh $n[cs=acc] dm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** administer_v $a $n ; ^ administer_v 0
->amh $a[cs=acc] $n 'dr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** administer_v $n ; ^ administer_v 0
->amh $n[cs=acc] 'dr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** admire_v $a $n ; ^ admire_v 0
->amh $a[cs=acc] $n dnq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** admire_v $n ; ^ admire_v 0
->amh $n[cs=acc] dnq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** admire_v $a $n ; ^ admire_v 0
->amh $a[cs=acc] $n dnq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** admire_v $n ; ^ admire_v 0
->amh $n[cs=acc] dnq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** admire_v $a $n ; ^ admire_v 0
->amh $a[cs=acc] $n dnq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** admire_v $n ; ^ admire_v 0
->amh $n[cs=acc] dnq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adorn_v $a $n ; ^ adorn_v 0
->amh $a[cs=acc] $n m|nxnx_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adorn_v $n ; ^ adorn_v 0
->amh $n[cs=acc] m|nxnx_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adorn_v $a $n ; ^ adorn_v 0
->amh $a[cs=acc] $n qWnj*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adorn_v $n ; ^ adorn_v 0
->amh $n[cs=acc] qWnj*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adulterate_v $a $n ; ^ adulterate_v 0
->amh $a[cs=acc] $n qy_T_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adulterate_v $n ; ^ adulterate_v 0
->amh $n[cs=acc] qy_T_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adulterate_v $a $n ; ^ adulterate_v 0
->amh $a[cs=acc] $n qy_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** adulterate_v $n ; ^ adulterate_v 0
->amh $n[cs=acc] qy_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** advise_v $a $n ; ^ advise_v 0
->amh $a[cs=acc] $n ngr_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** advise_v $n ; ^ advise_v 0
->amh $n[cs=acc] ngr_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** advise_v $a $n ; ^ advise_v 0
->amh $a[cs=acc] $n mkr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** advise_v $n ; ^ advise_v 0
->amh $n[cs=acc] mkr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aerate_v $a $n ; ^ aerate_v 0
->amh $a[cs=acc] $n nfs_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aerate_v $n ; ^ aerate_v 0
->amh $n[cs=acc] nfs_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** afflict_v $a $n ; ^ afflict_v 0
->amh $a[cs=acc] $n qsf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** afflict_v $n ; ^ afflict_v 0
->amh $n[cs=acc] qsf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $a $n ; ^ age_v 0
->amh $a[cs=acc] $n grjf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $n ; ^ age_v 0
->amh $n[cs=acc] grjf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $a $n ; ^ age_v 0
->amh $a[cs=acc] $n xmgl_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $n ; ^ age_v 0
->amh $n[cs=acc] xmgl_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $a $n ; ^ age_v 0
->amh $a[cs=acc] $n rj*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $n ; ^ age_v 0
->amh $n[cs=acc] rj*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $a $n ; ^ age_v 0
->amh $a[cs=acc] $n bsl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** age_v $n ; ^ age_v 0
->amh $n[cs=acc] bsl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aggravate_v $a $n ; ^ aggravate_v 0
->amh $a[cs=acc] $n b's_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aggravate_v $n ; ^ aggravate_v 0
->amh $n[cs=acc] b's_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $a $n ; ^ agitate_v 0
->amh $a[cs=acc] $n 'm_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $n ; ^ agitate_v 0
->amh $n[cs=acc] 'm_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $a $n ; ^ agitate_v 0
->amh $a[cs=acc] $n nqnq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $n ; ^ agitate_v 0
->amh $n[cs=acc] nqnq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $a $n ; ^ agitate_v 0
->amh $a[cs=acc] $n ns'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $n ; ^ agitate_v 0
->amh $n[cs=acc] ns'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $a $n ; ^ agitate_v 0
->amh $a[cs=acc] $n dfrs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $n ; ^ agitate_v 0
->amh $n[cs=acc] dfrs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $a $n ; ^ agitate_v 0
->amh $a[cs=acc] $n qsqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** agitate_v $n ; ^ agitate_v 0
->amh $n[cs=acc] qsqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aid_v $a $n ; ^ aid_v 0
->amh $a[cs=acc] $n 'g_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aid_v $n ; ^ aid_v 0
->amh $n[cs=acc] 'g_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aim_v $a $n ; ^ aim_v 0
->amh $a[cs=acc] $n zgb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** aim_v $n ; ^ aim_v 0
->amh $n[cs=acc] zgb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** alarm_v $a $n ; ^ alarm_v 0
->amh $a[cs=acc] $n Tnqq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** alarm_v $n ; ^ alarm_v 0
->amh $n[cs=acc] Tnqq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** alarm_v $a $n ; ^ alarm_v 0
->amh $a[cs=acc] $n dnbr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** alarm_v $n ; ^ alarm_v 0
->amh $n[cs=acc] dnbr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** align_v $a $n ; ^ align_v 0
->amh $a[cs=acc] $n drdr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** align_v $n ; ^ align_v 0
->amh $n[cs=acc] drdr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allocate_v $a $n ; ^ allocate_v 0
->amh $a[cs=acc] $n drs_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allocate_v $n ; ^ allocate_v 0
->amh $n[cs=acc] drs_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allocate_v $a $n ; ^ allocate_v 0
->amh $a[cs=acc] $n qWn_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allocate_v $n ; ^ allocate_v 0
->amh $n[cs=acc] qWn_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allot_v $a $n ; ^ allot_v 0
->amh $a[cs=acc] $n md_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allot_v $n ; ^ allot_v 0
->amh $n[cs=acc] md_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allot_v $a $n ; ^ allot_v 0
->amh $a[cs=acc] $n kfl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** allot_v $n ; ^ allot_v 0
->amh $n[cs=acc] kfl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** alter_v $a $n ; ^ alter_v 0
->amh $a[cs=acc] $n lw_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** alter_v $n ; ^ alter_v 0
->amh $n[cs=acc] lw_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amalgamate_v $a $n ; ^ amalgamate_v 0
->amh $a[cs=acc] $n dblq_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amalgamate_v $n ; ^ amalgamate_v 0
->amh $n[cs=acc] dblq_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amalgamate_v $a $n ; ^ amalgamate_v 0
->amh $a[cs=acc] $n Cflq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amalgamate_v $n ; ^ amalgamate_v 0
->amh $n[cs=acc] Cflq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amalgamate_v $a $n ; ^ amalgamate_v 0
->amh $a[cs=acc] $n Cflq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amalgamate_v $n ; ^ amalgamate_v 0
->amh $n[cs=acc] Cflq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amass_v $a $n ; ^ amass_v 0
->amh $a[cs=acc] $n kmac*_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amass_v $n ; ^ amass_v 0
->amh $n[cs=acc] kmac*_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ameliorate_v $a $n ; ^ ameliorate_v 0
->amh $a[cs=acc] $n x'l_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ameliorate_v $n ; ^ ameliorate_v 0
->amh $n[cs=acc] x'l_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ameliorate_v $a $n ; ^ ameliorate_v 0
->amh $a[cs=acc] $n x'l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ameliorate_v $n ; ^ ameliorate_v 0
->amh $n[cs=acc] x'l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amplify_v $a $n ; ^ amplify_v 0
->amh $a[cs=acc] $n gWl'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amplify_v $n ; ^ amplify_v 0
->amh $n[cs=acc] gWl'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amputate_v $a $n ; ^ amputate_v 0
->amh $a[cs=acc] $n qWrT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amputate_v $n ; ^ amputate_v 0
->amh $n[cs=acc] qWrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amputate_v $a $n ; ^ amputate_v 0
->amh $a[cs=acc] $n qWmT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amputate_v $n ; ^ amputate_v 0
->amh $n[cs=acc] qWmT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amuse_v $a $n ; ^ amuse_v 0
->amh $a[cs=acc] $n s'q_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amuse_v $n ; ^ amuse_v 0
->amh $n[cs=acc] s'q_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amuse_v $a $n ; ^ amuse_v 0
->amh $a[cs=acc] $n Cawt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amuse_v $n ; ^ amuse_v 0
->amh $n[cs=acc] Cawt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amuse_v $a $n ; ^ amuse_v 0
->amh $a[cs=acc] $n ds_t_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** amuse_v $n ; ^ amuse_v 0
->amh $n[cs=acc] ds_t_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** analyze_v $a $n ; ^ analyze_v 0
->amh $a[cs=acc] $n tntn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** analyze_v $n ; ^ analyze_v 0
->amh $n[cs=acc] tntn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anger_v $a $n ; ^ anger_v 0
->amh $a[cs=acc] $n qWT'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anger_v $n ; ^ anger_v 0
->amh $n[cs=acc] qWT'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anger_v $a $n ; ^ anger_v 0
->amh $a[cs=acc] $n kf'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anger_v $n ; ^ anger_v 0
->amh $n[cs=acc] kf'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anger_v $a $n ; ^ anger_v 0
->amh $a[cs=acc] $n kWrf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anger_v $n ; ^ anger_v 0
->amh $n[cs=acc] kWrf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** animate_v $a $n ; ^ animate_v 0
->amh $a[cs=acc] $n fk'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** animate_v $n ; ^ animate_v 0
->amh $n[cs=acc] fk'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** animate_v $a $n ; ^ animate_v 0
->amh $a[cs=acc] $n n|qsaqs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** animate_v $n ; ^ animate_v 0
->amh $n[cs=acc] n|qsaqs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annihilate_v $a $n ; ^ annihilate_v 0
->amh $a[cs=acc] $n dmss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annihilate_v $n ; ^ annihilate_v 0
->amh $n[cs=acc] dmss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annihilate_v $a $n ; ^ annihilate_v 0
->amh $a[cs=acc] $n wdm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annihilate_v $n ; ^ annihilate_v 0
->amh $n[cs=acc] wdm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annihilate_v $a $n ; ^ annihilate_v 0
->amh $a[cs=acc] $n wdm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annihilate_v $n ; ^ annihilate_v 0
->amh $n[cs=acc] wdm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** announce_v $a $n ; ^ announce_v 0
->amh $a[cs=acc] $n sm'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** announce_v $n ; ^ announce_v 0
->amh $n[cs=acc] sm'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** announce_v $a $n ; ^ announce_v 0
->amh $a[cs=acc] $n 'wq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** announce_v $n ; ^ announce_v 0
->amh $n[cs=acc] 'wq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** announce_v $a $n ; ^ announce_v 0
->amh $a[cs=acc] $n lf_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** announce_v $n ; ^ announce_v 0
->amh $n[cs=acc] lf_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annoy_v $a $n ; ^ annoy_v 0
->amh $a[cs=acc] $n rb_x_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annoy_v $n ; ^ annoy_v 0
->amh $n[cs=acc] rb_x_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annoy_v $a $n ; ^ annoy_v 0
->amh $a[cs=acc] $n bsaC*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** annoy_v $n ; ^ annoy_v 0
->amh $n[cs=acc] bsaC*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anoint_v $a $n ; ^ anoint_v 0
->amh $a[cs=acc] $n qb_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** anoint_v $n ; ^ anoint_v 0
->amh $n[cs=acc] qb_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** answer_v $a $n ; ^ answer_v 0
->amh $a[cs=acc] $n ml_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** answer_v $n ; ^ answer_v 0
->amh $n[cs=acc] ml_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** appease_v $a $n ; ^ appease_v 0
->amh $a[cs=acc] $n brd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** appease_v $n ; ^ appease_v 0
->amh $n[cs=acc] brd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** applaud_v $a $n ; ^ applaud_v 0
->amh $a[cs=acc] $n CbCb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** applaud_v $n ; ^ applaud_v 0
->amh $n[cs=acc] CbCb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** apply_v $a $n ; ^ apply_v 0
->amh $a[cs=acc] $n mlkt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** apply_v $n ; ^ apply_v 0
->amh $n[cs=acc] mlkt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** apportion_v $a $n ; ^ apportion_v 0
->amh $a[cs=acc] $n md_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** apportion_v $n ; ^ apportion_v 0
->amh $n[cs=acc] md_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** apportion_v $a $n ; ^ apportion_v 0
->amh $a[cs=acc] $n kfl_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** apportion_v $n ; ^ apportion_v 0
->amh $n[cs=acc] kfl_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** appraise_v $a $n ; ^ appraise_v 0
->amh $a[cs=acc] $n gmgm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** appraise_v $n ; ^ appraise_v 0
->amh $n[cs=acc] gmgm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** approach_v $a $n ; ^ approach_v 0
->amh $a[cs=acc] $n qrb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** approach_v $n ; ^ approach_v 0
->amh $n[cs=acc] qrb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** appropriate_v $a $n ; ^ appropriate_v 0
->amh $a[cs=acc] $n kl_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** appropriate_v $n ; ^ appropriate_v 0
->amh $n[cs=acc] kl_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** approve_v $a $n ; ^ approve_v 0
->amh $a[cs=acc] $n Sdq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** approve_v $n ; ^ approve_v 0
->amh $n[cs=acc] Sdq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $a $n ; ^ arbitrate_v 0
->amh $a[cs=acc] $n frd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $n ; ^ arbitrate_v 0
->amh $n[cs=acc] frd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $a $n ; ^ arbitrate_v 0
->amh $a[cs=acc] $n mWg_t_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $n ; ^ arbitrate_v 0
->amh $n[cs=acc] mWg_t_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $a $n ; ^ arbitrate_v 0
->amh $a[cs=acc] $n daN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $n ; ^ arbitrate_v 0
->amh $n[cs=acc] daN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $a $n ; ^ arbitrate_v 0
->amh $a[cs=acc] $n glagl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arbitrate_v $n ; ^ arbitrate_v 0
->amh $n[cs=acc] glagl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arch_v $a $n ; ^ arch_v 0
->amh $a[cs=acc] $n qs_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arch_v $n ; ^ arch_v 0
->amh $n[cs=acc] qs_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** argue_v $a $n ; ^ argue_v 0
->amh $a[cs=acc] $n mWg_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** argue_v $n ; ^ argue_v 0
->amh $n[cs=acc] mWg_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arm_v $a $n ; ^ arm_v 0
->amh $a[cs=acc] $n 'Tq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arm_v $n ; ^ arm_v 0
->amh $n[cs=acc] 'Tq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arouse_v $a $n ; ^ arouse_v 0
->amh $a[cs=acc] $n xafd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arouse_v $n ; ^ arouse_v 0
->amh $n[cs=acc] xafd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arouse_v $a $n ; ^ arouse_v 0
->amh $a[cs=acc] $n ns'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arouse_v $n ; ^ arouse_v 0
->amh $n[cs=acc] ns'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arouse_v $a $n ; ^ arouse_v 0
->amh $a[cs=acc] $n qsqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arouse_v $n ; ^ arouse_v 0
->amh $n[cs=acc] qsqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arrange_v $a $n ; ^ arrange_v 0
->amh $a[cs=acc] $n xk_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arrange_v $n ; ^ arrange_v 0
->amh $n[cs=acc] xk_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arrange_v $a $n ; ^ arrange_v 0
->amh $a[cs=acc] $n zgaj*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arrange_v $n ; ^ arrange_v 0
->amh $n[cs=acc] zgaj*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arrange_v $a $n ; ^ arrange_v 0
->amh $a[cs=acc] $n snad'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** arrange_v $n ; ^ arrange_v 0
->amh $n[cs=acc] snad'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ascend_v $a $n ; ^ ascend_v 0
->amh $a[cs=acc] $n wT'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ascend_v $n ; ^ ascend_v 0
->amh $n[cs=acc] wT'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ascend_v $a $n ; ^ ascend_v 0
->amh $a[cs=acc] $n 'rg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ascend_v $n ; ^ ascend_v 0
->amh $n[cs=acc] 'rg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ascertain_v $a $n ; ^ ascertain_v 0
->amh $a[cs=acc] $n rgT_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ascertain_v $n ; ^ ascertain_v 0
->amh $n[cs=acc] rgT_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ask_v $a $n ; ^ ask_v 0
->amh $a[cs=acc] $n Ty_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ask_v $n ; ^ ask_v 0
->amh $n[cs=acc] Ty_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ask_v $a $n ; ^ ask_v 0
->amh $a[cs=acc] $n lm_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ask_v $n ; ^ ask_v 0
->amh $n[cs=acc] lm_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assault_v $a $n ; ^ assault_v 0
->amh $a[cs=acc] $n Tq'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assault_v $n ; ^ assault_v 0
->amh $n[cs=acc] Tq'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assault_v $a $n ; ^ assault_v 0
->amh $a[cs=acc] $n dbdb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assault_v $n ; ^ assault_v 0
->amh $n[cs=acc] dbdb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assemble_v $a $n ; ^ assemble_v 0
->amh $a[cs=acc] $n sbsb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assemble_v $n ; ^ assemble_v 0
->amh $n[cs=acc] sbsb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assemble_v $a $n ; ^ assemble_v 0
->amh $a[cs=acc] $n kmac*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assemble_v $n ; ^ assemble_v 0
->amh $n[cs=acc] kmac*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assess_v $a $n ; ^ assess_v 0
->amh $a[cs=acc] $n gmgm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assess_v $n ; ^ assess_v 0
->amh $n[cs=acc] gmgm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assess_v $a $n ; ^ assess_v 0
->amh $a[cs=acc] $n gm_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assess_v $n ; ^ assess_v 0
->amh $n[cs=acc] gm_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assist_v $a $n ; ^ assist_v 0
->amh $a[cs=acc] $n rd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assist_v $n ; ^ assist_v 0
->amh $n[cs=acc] rd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assume_v $a $n ; ^ assume_v 0
->amh $a[cs=acc] $n gm_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assume_v $n ; ^ assume_v 0
->amh $n[cs=acc] gm_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assure_v $a $n ; ^ assure_v 0
->amh $a[cs=acc] $n rgT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** assure_v $n ; ^ assure_v 0
->amh $n[cs=acc] rgT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** astonish_v $a $n ; ^ astonish_v 0
->amh $a[cs=acc] $n dnq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** astonish_v $n ; ^ astonish_v 0
->amh $n[cs=acc] dnq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** attack_v $a $n ; ^ attack_v 0
->amh $a[cs=acc] $n dbdb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** attack_v $n ; ^ attack_v 0
->amh $n[cs=acc] dbdb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** attempt_v $a $n ; ^ attempt_v 0
->amh $a[cs=acc] $n mWk_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** attempt_v $n ; ^ attempt_v 0
->amh $n[cs=acc] mWk_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** attract_v $a $n ; ^ attract_v 0
->amh $a[cs=acc] $n s'b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** attract_v $n ; ^ attract_v 0
->amh $n[cs=acc] s'b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** await_v $a $n ; ^ await_v 0
->amh $a[cs=acc] $n Tb_q_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** await_v $n ; ^ await_v 0
->amh $n[cs=acc] Tb_q_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** awaken_v $a $n ; ^ awaken_v 0
->amh $a[cs=acc] $n qsqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** awaken_v $n ; ^ awaken_v 0
->amh $n[cs=acc] qsqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** babble_v $a $n ; ^ babble_v 0
->amh $a[cs=acc] $n zlabd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** babble_v $n ; ^ babble_v 0
->amh $n[cs=acc] zlabd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** back_v $a $n ; ^ back_v 0
->amh $a[cs=acc] $n dg_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** back_v $n ; ^ back_v 0
->amh $n[cs=acc] dg_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** badger_v $a $n ; ^ badger_v 0
->amh $a[cs=acc] $n gWtgWt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** badger_v $n ; ^ badger_v 0
->amh $n[cs=acc] gWtgWt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bake_v $a $n ; ^ bake_v 0
->amh $a[cs=acc] $n rm_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bake_v $n ; ^ bake_v 0
->amh $n[cs=acc] rm_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** balance_v $a $n ; ^ balance_v 0
->amh $a[cs=acc] $n mz_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** balance_v $n ; ^ balance_v 0
->amh $n[cs=acc] mz_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** banish_v $a $n ; ^ banish_v 0
->amh $a[cs=acc] $n g'z_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** banish_v $n ; ^ banish_v 0
->amh $n[cs=acc] g'z_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bankrupt_v $a $n ; ^ bankrupt_v 0
->amh $a[cs=acc] $n qlT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bankrupt_v $n ; ^ bankrupt_v 0
->amh $n[cs=acc] qlT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bankrupt_v $a $n ; ^ bankrupt_v 0
->amh $a[cs=acc] $n ksr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bankrupt_v $n ; ^ bankrupt_v 0
->amh $n[cs=acc] ksr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** baptize_v $a $n ; ^ baptize_v 0
->amh $a[cs=acc] $n Tmq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** baptize_v $n ; ^ baptize_v 0
->amh $n[cs=acc] Tmq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bargain_v $a $n ; ^ bargain_v 0
->amh $a[cs=acc] $n sm'_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bargain_v $n ; ^ bargain_v 0
->amh $n[cs=acc] sm'_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bark_v $a $n ; ^ bark_v 0
->amh $a[cs=acc] $n Cwh_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bark_v $n ; ^ bark_v 0
->amh $n[cs=acc] Cwh_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** barter_v $a $n ; ^ barter_v 0
->amh $a[cs=acc] $n ngd_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** barter_v $n ; ^ barter_v 0
->amh $n[cs=acc] ngd_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bathe_v $a $n ; ^ bathe_v 0
->amh $a[cs=acc] $n 'Tb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bathe_v $n ; ^ bathe_v 0
->amh $n[cs=acc] 'Tb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** batter_v $a $n ; ^ batter_v 0
->amh $a[cs=acc] $n dqW_s_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** batter_v $n ; ^ batter_v 0
->amh $n[cs=acc] dqW_s_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $a $n ; ^ beat_v 0
->amh $a[cs=acc] $n qsqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $n ; ^ beat_v 0
->amh $n[cs=acc] qsqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $a $n ; ^ beat_v 0
->amh $a[cs=acc] $n qndb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $n ; ^ beat_v 0
->amh $n[cs=acc] qndb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $a $n ; ^ beat_v 0
->amh $a[cs=acc] $n wq'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $n ; ^ beat_v 0
->amh $n[cs=acc] wq'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $a $n ; ^ beat_v 0
->amh $a[cs=acc] $n dbdb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $n ; ^ beat_v 0
->amh $n[cs=acc] dbdb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $a $n ; ^ beat_v 0
->amh $a[cs=acc] $n xnf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beat_v $n ; ^ beat_v 0
->amh $n[cs=acc] xnf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beautify_v $a $n ; ^ beautify_v 0
->amh $a[cs=acc] $n qWnj*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beautify_v $n ; ^ beautify_v 0
->amh $n[cs=acc] qWnj*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** become_v $a $n ; ^ become_v 0
->amh $a[cs=acc] $n hwn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** become_v $n ; ^ become_v 0
->amh $n[cs=acc] hwn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** begin_v $a $n ; ^ begin_v 0
->amh $a[cs=acc] $n wT_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** begin_v $n ; ^ begin_v 0
->amh $n[cs=acc] wT_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** begin_v $a $n ; ^ begin_v 0
->amh $a[cs=acc] $n b't_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** begin_v $n ; ^ begin_v 0
->amh $n[cs=acc] b't_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** behead_v $a $n ; ^ behead_v 0
->amh $a[cs=acc] $n sy_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** behead_v $n ; ^ behead_v 0
->amh $n[cs=acc] sy_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belch_v $a $n ; ^ belch_v 0
->amh $a[cs=acc] $n gs'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belch_v $n ; ^ belch_v 0
->amh $n[cs=acc] gs'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** believe_v $a $n ; ^ believe_v 0
->amh $a[cs=acc] $n 'mn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** believe_v $n ; ^ believe_v 0
->amh $n[cs=acc] 'mn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $a $n ; ^ belittle_v 0
->amh $a[cs=acc] $n kWs_s_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $n ; ^ belittle_v 0
->amh $n[cs=acc] kWs_s_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $a $n ; ^ belittle_v 0
->amh $a[cs=acc] $n n|qWaxx_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $n ; ^ belittle_v 0
->amh $n[cs=acc] n|qWaxx_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $a $n ; ^ belittle_v 0
->amh $a[cs=acc] $n n|gwall_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $n ; ^ belittle_v 0
->amh $n[cs=acc] n|gwall_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $a $n ; ^ belittle_v 0
->amh $a[cs=acc] $n n'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belittle_v $n ; ^ belittle_v 0
->amh $n[cs=acc] n'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bellow_v $a $n ; ^ bellow_v 0
->amh $a[cs=acc] $n gWr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bellow_v $n ; ^ bellow_v 0
->amh $n[cs=acc] gWr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belt_v $a $n ; ^ belt_v 0
->amh $a[cs=acc] $n 'Tq_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** belt_v $n ; ^ belt_v 0
->amh $n[cs=acc] 'Tq_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n gWnbs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] gWnbs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n n|gadd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] n|gadd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n df'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] df'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n zmm_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] zmm_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n lb_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] lb_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n Tmm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] Tmm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n gWbT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] gWbT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $a $n ; ^ bend_v 0
->amh $a[cs=acc] $n lm_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bend_v $n ; ^ bend_v 0
->amh $n[cs=acc] lm_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** benefit_v $a $n ; ^ benefit_v 0
->amh $a[cs=acc] $n Tqm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** benefit_v $n ; ^ benefit_v 0
->amh $n[cs=acc] Tqm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beseech_v $a $n ; ^ beseech_v 0
->amh $a[cs=acc] $n lm_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** beseech_v $n ; ^ beseech_v 0
->amh $n[cs=acc] lm_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** besiege_v $a $n ; ^ besiege_v 0
->amh $a[cs=acc] $n kbb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** besiege_v $n ; ^ besiege_v 0
->amh $n[cs=acc] kbb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** betray_v $a $n ; ^ betray_v 0
->amh $a[cs=acc] $n kd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** betray_v $n ; ^ betray_v 0
->amh $n[cs=acc] kd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bewitch_v $a $n ; ^ bewitch_v 0
->amh $a[cs=acc] $n fzz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bewitch_v $n ; ^ bewitch_v 0
->amh $n[cs=acc] fzz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bid_v $a $n ; ^ bid_v 0
->amh $a[cs=acc] $n Cart_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bid_v $n ; ^ bid_v 0
->amh $n[cs=acc] Cart_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bind_v $a $n ; ^ bind_v 0
->amh $a[cs=acc] $n Tr_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bind_v $n ; ^ bind_v 0
->amh $n[cs=acc] Tr_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bite_v $a $n ; ^ bite_v 0
->amh $a[cs=acc] $n nks_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bite_v $n ; ^ bite_v 0
->amh $n[cs=acc] nks_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bite_v $a $n ; ^ bite_v 0
->amh $a[cs=acc] $n ndf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bite_v $n ; ^ bite_v 0
->amh $n[cs=acc] ndf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blabber_v $a $n ; ^ blabber_v 0
->amh $a[cs=acc] $n qbajr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blabber_v $n ; ^ blabber_v 0
->amh $n[cs=acc] qbajr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** black_v $a $n ; ^ black_v 0
->amh $a[cs=acc] $n TqWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** black_v $n ; ^ black_v 0
->amh $n[cs=acc] TqWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blacken_v $a $n ; ^ blacken_v 0
->amh $a[cs=acc] $n TqWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blacken_v $n ; ^ blacken_v 0
->amh $n[cs=acc] TqWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $a $n ; ^ blame_v 0
->amh $a[cs=acc] $n zlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $n ; ^ blame_v 0
->amh $n[cs=acc] zlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $a $n ; ^ blame_v 0
->amh $a[cs=acc] $n nqf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $n ; ^ blame_v 0
->amh $n[cs=acc] nqf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $a $n ; ^ blame_v 0
->amh $a[cs=acc] $n nw_r_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $n ; ^ blame_v 0
->amh $n[cs=acc] nw_r_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $a $n ; ^ blame_v 0
->amh $a[cs=acc] $n nqf_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blame_v $n ; ^ blame_v 0
->amh $n[cs=acc] nqf_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blaze_v $a $n ; ^ blaze_v 0
->amh $a[cs=acc] $n n|bWgbWg_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blaze_v $n ; ^ blaze_v 0
->amh $n[cs=acc] n|bWgbWg_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bleed_v $a $n ; ^ bleed_v 0
->amh $a[cs=acc] $n dm'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bleed_v $n ; ^ bleed_v 0
->amh $n[cs=acc] dm'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bless_v $a $n ; ^ bless_v 0
->amh $a[cs=acc] $n bark_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bless_v $n ; ^ bless_v 0
->amh $n[cs=acc] bark_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bless_v $a $n ; ^ bless_v 0
->amh $a[cs=acc] $n mr_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bless_v $n ; ^ bless_v 0
->amh $n[cs=acc] mr_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bless_v $a $n ; ^ bless_v 0
->amh $a[cs=acc] $n qd_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bless_v $n ; ^ bless_v 0
->amh $n[cs=acc] qd_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blind_v $a $n ; ^ blind_v 0
->amh $a[cs=acc] $n T|brbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blind_v $n ; ^ blind_v 0
->amh $n[cs=acc] T|brbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blind_v $a $n ; ^ blind_v 0
->amh $a[cs=acc] $n gard_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blind_v $n ; ^ blind_v 0
->amh $n[cs=acc] gard_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blink_v $a $n ; ^ blink_v 0
->amh $a[cs=acc] $n qW|lClC_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blink_v $n ; ^ blink_v 0
->amh $n[cs=acc] qW|lClC_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blister_v $a $n ; ^ blister_v 0
->amh $a[cs=acc] $n qWaTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blister_v $n ; ^ blister_v 0
->amh $n[cs=acc] qWaTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** block_v $a $n ; ^ block_v 0
->amh $a[cs=acc] $n zg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** block_v $n ; ^ block_v 0
->amh $n[cs=acc] zg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** block_v $a $n ; ^ block_v 0
->amh $a[cs=acc] $n 'g_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** block_v $n ; ^ block_v 0
->amh $n[cs=acc] 'g_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $a $n ; ^ blot_v 0
->amh $a[cs=acc] $n nqWT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $n ; ^ blot_v 0
->amh $n[cs=acc] nqWT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $a $n ; ^ blot_v 0
->amh $a[cs=acc] $n nTb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $n ; ^ blot_v 0
->amh $n[cs=acc] nTb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $a $n ; ^ blot_v 0
->amh $a[cs=acc] $n Tm'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $n ; ^ blot_v 0
->amh $n[cs=acc] Tm'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $a $n ; ^ blot_v 0
->amh $a[cs=acc] $n mTT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $n ; ^ blot_v 0
->amh $n[cs=acc] mTT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $a $n ; ^ blot_v 0
->amh $a[cs=acc] $n nTb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blot_v $n ; ^ blot_v 0
->amh $n[cs=acc] nTb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blow_v $a $n ; ^ blow_v 0
->amh $a[cs=acc] $n nfs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blow_v $n ; ^ blow_v 0
->amh $n[cs=acc] nfs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blow_v $a $n ; ^ blow_v 0
->amh $a[cs=acc] $n nf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blow_v $n ; ^ blow_v 0
->amh $n[cs=acc] nf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blow_v $a $n ; ^ blow_v 0
->amh $a[cs=acc] $n nfs_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blow_v $n ; ^ blow_v 0
->amh $n[cs=acc] nfs_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blur_v $a $n ; ^ blur_v 0
->amh $a[cs=acc] $n dbzz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** blur_v $n ; ^ blur_v 0
->amh $n[cs=acc] dbzz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bluster_v $a $n ; ^ bluster_v 0
->amh $a[cs=acc] $n dnf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bluster_v $n ; ^ bluster_v 0
->amh $n[cs=acc] dnf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bluster_v $a $n ; ^ bluster_v 0
->amh $a[cs=acc] $n wbr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bluster_v $n ; ^ bluster_v 0
->amh $n[cs=acc] wbr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boast_v $a $n ; ^ boast_v 0
->amh $a[cs=acc] $n dnf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boast_v $n ; ^ boast_v 0
->amh $n[cs=acc] dnf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boast_v $a $n ; ^ boast_v 0
->amh $a[cs=acc] $n fWk_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boast_v $n ; ^ boast_v 0
->amh $n[cs=acc] fWk_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boast_v $a $n ; ^ boast_v 0
->amh $a[cs=acc] $n xl_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boast_v $n ; ^ boast_v 0
->amh $n[cs=acc] xl_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $a $n ; ^ boil_v 0
->amh $a[cs=acc] $n fl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $n ; ^ boil_v 0
->amh $n[cs=acc] fl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $a $n ; ^ boil_v 0
->amh $a[cs=acc] $n n|dkdk_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $n ; ^ boil_v 0
->amh $n[cs=acc] n|dkdk_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $a $n ; ^ boil_v 0
->amh $a[cs=acc] $n fl'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $n ; ^ boil_v 0
->amh $n[cs=acc] fl'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $a $n ; ^ boil_v 0
->amh $a[cs=acc] $n qq_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boil_v $n ; ^ boil_v 0
->amh $n[cs=acc] qq_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $a $n ; ^ bolt_v 0
->amh $a[cs=acc] $n xgW_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $n ; ^ bolt_v 0
->amh $n[cs=acc] xgW_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $a $n ; ^ bolt_v 0
->amh $a[cs=acc] $n brgg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $n ; ^ bolt_v 0
->amh $n[cs=acc] brgg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $a $n ; ^ bolt_v 0
->amh $a[cs=acc] $n dnbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $n ; ^ bolt_v 0
->amh $n[cs=acc] dnbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $a $n ; ^ bolt_v 0
->amh $a[cs=acc] $n qrqr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $n ; ^ bolt_v 0
->amh $n[cs=acc] qrqr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $a $n ; ^ bolt_v 0
->amh $a[cs=acc] $n wrwr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bolt_v $n ; ^ bolt_v 0
->amh $n[cs=acc] wrwr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boom_v $a $n ; ^ boom_v 0
->amh $a[cs=acc] $n gWr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** boom_v $n ; ^ boom_v 0
->amh $n[cs=acc] gWr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** border_v $a $n ; ^ border_v 0
->amh $a[cs=acc] $n ws_n_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** border_v $n ; ^ border_v 0
->amh $n[cs=acc] ws_n_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $a $n ; ^ bore_v 0
->amh $a[cs=acc] $n srsr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $n ; ^ bore_v 0
->amh $n[cs=acc] srsr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $a $n ; ^ bore_v 0
->amh $a[cs=acc] $n bWrbWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $n ; ^ bore_v 0
->amh $n[cs=acc] bWrbWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $a $n ; ^ bore_v 0
->amh $a[cs=acc] $n bs'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $n ; ^ bore_v 0
->amh $n[cs=acc] bs'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $a $n ; ^ bore_v 0
->amh $a[cs=acc] $n xnqWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $n ; ^ bore_v 0
->amh $n[cs=acc] xnqWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $a $n ; ^ bore_v 0
->amh $a[cs=acc] $n slc*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $n ; ^ bore_v 0
->amh $n[cs=acc] slc*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $a $n ; ^ bore_v 0
->amh $a[cs=acc] $n takt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bore_v $n ; ^ bore_v 0
->amh $n[cs=acc] takt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** borrow_v $a $n ; ^ borrow_v 0
->amh $a[cs=acc] $n bd_r_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** borrow_v $n ; ^ borrow_v 0
->amh $n[cs=acc] bd_r_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bother_v $a $n ; ^ bother_v 0
->amh $a[cs=acc] $n xaql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bother_v $n ; ^ bother_v 0
->amh $n[cs=acc] xaql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $a $n ; ^ bounce_v 0
->amh $a[cs=acc] $n nTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $n ; ^ bounce_v 0
->amh $n[cs=acc] nTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $a $n ; ^ bounce_v 0
->amh $a[cs=acc] $n gW'n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $n ; ^ bounce_v 0
->amh $n[cs=acc] gW'n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $a $n ; ^ bounce_v 0
->amh $a[cs=acc] $n nTr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $n ; ^ bounce_v 0
->amh $n[cs=acc] nTr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $a $n ; ^ bounce_v 0
->amh $a[cs=acc] $n gW'n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bounce_v $n ; ^ bounce_v 0
->amh $n[cs=acc] gW'n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bow_v $a $n ; ^ bow_v 0
->amh $a[cs=acc] $n sgd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bow_v $n ; ^ bow_v 0
->amh $n[cs=acc] sgd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** box_v $a $n ; ^ box_v 0
->amh $a[cs=acc] $n nf'_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** box_v $n ; ^ box_v 0
->amh $n[cs=acc] nf'_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** braid_v $a $n ; ^ braid_v 0
->amh $a[cs=acc] $n gWngWn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** braid_v $n ; ^ braid_v 0
->amh $n[cs=acc] gWngWn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brand_v $a $n ; ^ brand_v 0
->amh $a[cs=acc] $n tkW_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brand_v $n ; ^ brand_v 0
->amh $n[cs=acc] tkW_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bray_v $a $n ; ^ bray_v 0
->amh $a[cs=acc] $n nf'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bray_v $n ; ^ bray_v 0
->amh $n[cs=acc] nf'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breach_v $a $n ; ^ breach_v 0
->amh $a[cs=acc] $n T's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breach_v $n ; ^ breach_v 0
->amh $n[cs=acc] T's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** break_v $a $n ; ^ break_v 0
->amh $a[cs=acc] $n frT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** break_v $n ; ^ break_v 0
->amh $n[cs=acc] frT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** break_v $a $n ; ^ break_v 0
->amh $a[cs=acc] $n sbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** break_v $n ; ^ break_v 0
->amh $n[cs=acc] sbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breathe_v $a $n ; ^ breathe_v 0
->amh $a[cs=acc] $n tnfs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breathe_v $n ; ^ breathe_v 0
->amh $n[cs=acc] tnfs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breathe_v $a $n ; ^ breathe_v 0
->amh $a[cs=acc] $n nfs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breathe_v $n ; ^ breathe_v 0
->amh $n[cs=acc] nfs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breathe_v $a $n ; ^ breathe_v 0
->amh $a[cs=acc] $n nfs_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breathe_v $n ; ^ breathe_v 0
->amh $n[cs=acc] nfs_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breed_v $a $n ; ^ breed_v 0
->amh $a[cs=acc] $n rb'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** breed_v $n ; ^ breed_v 0
->amh $n[cs=acc] rb'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brew_v $a $n ; ^ brew_v 0
->amh $a[cs=acc] $n Tmq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brew_v $n ; ^ brew_v 0
->amh $n[cs=acc] Tmq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brighten_v $a $n ; ^ brighten_v 0
->amh $a[cs=acc] $n Tr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brighten_v $n ; ^ brighten_v 0
->amh $n[cs=acc] Tr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brighten_v $a $n ; ^ brighten_v 0
->amh $a[cs=acc] $n fk'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brighten_v $n ; ^ brighten_v 0
->amh $n[cs=acc] fk'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brighten_v $a $n ; ^ brighten_v 0
->amh $a[cs=acc] $n wz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** brighten_v $n ; ^ brighten_v 0
->amh $n[cs=acc] wz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bring_v $a $n ; ^ bring_v 0
->amh $a[cs=acc] $n mT'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bring_v $n ; ^ bring_v 0
->amh $n[cs=acc] mT'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** broil_v $a $n ; ^ broil_v 0
->amh $a[cs=acc] $n n|CrCr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** broil_v $n ; ^ broil_v 0
->amh $n[cs=acc] n|CrCr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bruise_v $a $n ; ^ bruise_v 0
->amh $a[cs=acc] $n qTqT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bruise_v $n ; ^ bruise_v 0
->amh $n[cs=acc] qTqT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** build_v $a $n ; ^ build_v 0
->amh $a[cs=acc] $n gnb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** build_v $n ; ^ build_v 0
->amh $n[cs=acc] gnb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** build_v $a $n ; ^ build_v 0
->amh $a[cs=acc] $n sr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** build_v $n ; ^ build_v 0
->amh $n[cs=acc] sr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bum_v $a $n ; ^ bum_v 0
->amh $a[cs=acc] $n dzdz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bum_v $n ; ^ bum_v 0
->amh $n[cs=acc] dzdz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bum_v $a $n ; ^ bum_v 0
->amh $a[cs=acc] $n zTzT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bum_v $n ; ^ bum_v 0
->amh $n[cs=acc] zTzT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bump_v $a $n ; ^ bump_v 0
->amh $a[cs=acc] $n lg_'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bump_v $n ; ^ bump_v 0
->amh $n[cs=acc] lg_'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bump_v $a $n ; ^ bump_v 0
->amh $a[cs=acc] $n gC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bump_v $n ; ^ bump_v 0
->amh $n[cs=acc] gC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burden_v $a $n ; ^ burden_v 0
->amh $a[cs=acc] $n C'n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burden_v $n ; ^ burden_v 0
->amh $n[cs=acc] C'n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $a $n ; ^ burn_v 0
->amh $a[cs=acc] $n qWTqWT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $n ; ^ burn_v 0
->amh $n[cs=acc] qWTqWT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $a $n ; ^ burn_v 0
->amh $a[cs=acc] $n ndd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $n ; ^ burn_v 0
->amh $n[cs=acc] ndd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $a $n ; ^ burn_v 0
->amh $a[cs=acc] $n ndd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $n ; ^ burn_v 0
->amh $n[cs=acc] ndd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $a $n ; ^ burn_v 0
->amh $a[cs=acc] $n lmTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $n ; ^ burn_v 0
->amh $n[cs=acc] lmTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $a $n ; ^ burn_v 0
->amh $a[cs=acc] $n gWrn'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $n ; ^ burn_v 0
->amh $n[cs=acc] gWrn'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $a $n ; ^ burn_v 0
->amh $a[cs=acc] $n qT_l_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burn_v $n ; ^ burn_v 0
->amh $n[cs=acc] qT_l_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burst_v $a $n ; ^ burst_v 0
->amh $a[cs=acc] $n frT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burst_v $n ; ^ burst_v 0
->amh $n[cs=acc] frT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burst_v $a $n ; ^ burst_v 0
->amh $a[cs=acc] $n fnd'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burst_v $n ; ^ burst_v 0
->amh $n[cs=acc] fnd'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burst_v $a $n ; ^ burst_v 0
->amh $a[cs=acc] $n fnd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** burst_v $n ; ^ burst_v 0
->amh $n[cs=acc] fnd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bury_v $a $n ; ^ bury_v 0
->amh $a[cs=acc] $n qbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bury_v $n ; ^ bury_v 0
->amh $n[cs=acc] qbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bustle_v $a $n ; ^ bustle_v 0
->amh $a[cs=acc] $n knf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bustle_v $n ; ^ bustle_v 0
->amh $n[cs=acc] knf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bustle_v $a $n ; ^ bustle_v 0
->amh $a[cs=acc] $n klb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** bustle_v $n ; ^ bustle_v 0
->amh $n[cs=acc] klb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** button_v $a $n ; ^ button_v 0
->amh $a[cs=acc] $n qWl_f_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** button_v $n ; ^ button_v 0
->amh $n[cs=acc] qWl_f_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cajole_v $a $n ; ^ cajole_v 0
->amh $a[cs=acc] $n dl_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cajole_v $n ; ^ cajole_v 0
->amh $n[cs=acc] dl_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cajole_v $a $n ; ^ cajole_v 0
->amh $a[cs=acc] $n 'bl_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cajole_v $n ; ^ cajole_v 0
->amh $n[cs=acc] 'bl_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cajole_v $a $n ; ^ cajole_v 0
->amh $a[cs=acc] $n wT'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cajole_v $n ; ^ cajole_v 0
->amh $n[cs=acc] wT'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** calculate_v $a $n ; ^ calculate_v 0
->amh $a[cs=acc] $n 's_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** calculate_v $n ; ^ calculate_v 0
->amh $n[cs=acc] 's_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** calculate_v $a $n ; ^ calculate_v 0
->amh $a[cs=acc] $n sl'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** calculate_v $n ; ^ calculate_v 0
->amh $n[cs=acc] sl'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** call_v $a $n ; ^ call_v 0
->amh $a[cs=acc] $n sN*_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** call_v $n ; ^ call_v 0
->amh $n[cs=acc] sN*_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** camp_v $a $n ; ^ camp_v 0
->amh $a[cs=acc] $n sfr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** camp_v $n ; ^ camp_v 0
->amh $n[cs=acc] sfr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** canter_v $a $n ; ^ canter_v 0
->amh $a[cs=acc] $n sWmsWm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** canter_v $n ; ^ canter_v 0
->amh $n[cs=acc] sWmsWm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** caress_v $a $n ; ^ caress_v 0
->amh $a[cs=acc] $n dass_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** caress_v $n ; ^ caress_v 0
->amh $n[cs=acc] dass_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** caress_v $a $n ; ^ caress_v 0
->amh $a[cs=acc] $n dabs_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** caress_v $n ; ^ caress_v 0
->amh $n[cs=acc] dabs_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** carry_v $a $n ; ^ carry_v 0
->amh $a[cs=acc] $n xk_m_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** carry_v $n ; ^ carry_v 0
->amh $n[cs=acc] xk_m_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** carve_v $a $n ; ^ carve_v 0
->amh $a[cs=acc] $n Trb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** carve_v $n ; ^ carve_v 0
->amh $n[cs=acc] Trb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cash_v $a $n ; ^ cash_v 0
->amh $a[cs=acc] $n lw_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cash_v $n ; ^ cash_v 0
->amh $n[cs=acc] lw_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** castrate_v $a $n ; ^ castrate_v 0
->amh $a[cs=acc] $n wqT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** castrate_v $n ; ^ castrate_v 0
->amh $n[cs=acc] wqT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** castrate_v $a $n ; ^ castrate_v 0
->amh $a[cs=acc] $n kWlax*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** castrate_v $n ; ^ castrate_v 0
->amh $n[cs=acc] kWlax*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** catalogue_v $a $n ; ^ catalogue_v 0
->amh $a[cs=acc] $n mzgb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** catalogue_v $n ; ^ catalogue_v 0
->amh $n[cs=acc] mzgb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** catch_v $a $n ; ^ catch_v 0
->amh $a[cs=acc] $n y'z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** catch_v $n ; ^ catch_v 0
->amh $n[cs=acc] y'z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** caution_v $a $n ; ^ caution_v 0
->amh $a[cs=acc] $n Tnqq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** caution_v $n ; ^ caution_v 0
->amh $n[cs=acc] Tnqq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cease_v $a $n ; ^ cease_v 0
->amh $a[cs=acc] $n qwm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cease_v $n ; ^ cease_v 0
->amh $n[cs=acc] qwm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** celebrate_v $a $n ; ^ celebrate_v 0
->amh $a[cs=acc] $n kbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** celebrate_v $n ; ^ celebrate_v 0
->amh $n[cs=acc] kbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $a $n ; ^ change_v 0
->amh $a[cs=acc] $n qy_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $n ; ^ change_v 0
->amh $n[cs=acc] qy_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $a $n ; ^ change_v 0
->amh $a[cs=acc] $n xr_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $n ; ^ change_v 0
->amh $n[cs=acc] xr_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $a $n ; ^ change_v 0
->amh $a[cs=acc] $n qy_r_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $n ; ^ change_v 0
->amh $n[cs=acc] qy_r_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $a $n ; ^ change_v 0
->amh $a[cs=acc] $n mnzr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $n ; ^ change_v 0
->amh $n[cs=acc] mnzr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $a $n ; ^ change_v 0
->amh $a[cs=acc] $n lw_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** change_v $n ; ^ change_v 0
->amh $n[cs=acc] lw_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chant_v $a $n ; ^ chant_v 0
->amh $a[cs=acc] $n zym_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chant_v $n ; ^ chant_v 0
->amh $n[cs=acc] zym_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chant_v $a $n ; ^ chant_v 0
->amh $a[cs=acc] $n zm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chant_v $n ; ^ chant_v 0
->amh $n[cs=acc] zm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chant_v $a $n ; ^ chant_v 0
->amh $a[cs=acc] $n xl_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chant_v $n ; ^ chant_v 0
->amh $n[cs=acc] xl_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** charge_v $a $n ; ^ charge_v 0
->amh $a[cs=acc] $n mWl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** charge_v $n ; ^ charge_v 0
->amh $n[cs=acc] mWl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** charge_v $a $n ; ^ charge_v 0
->amh $a[cs=acc] $n kfl_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** charge_v $n ; ^ charge_v 0
->amh $n[cs=acc] kfl_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** charge_v $a $n ; ^ charge_v 0
->amh $a[cs=acc] $n sg_g_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** charge_v $n ; ^ charge_v 0
->amh $n[cs=acc] sg_g_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chase_v $a $n ; ^ chase_v 0
->amh $a[cs=acc] $n rwT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chase_v $n ; ^ chase_v 0
->amh $n[cs=acc] rwT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chase_v $a $n ; ^ chase_v 0
->amh $a[cs=acc] $n rwT_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chase_v $n ; ^ chase_v 0
->amh $n[cs=acc] rwT_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chastise_v $a $n ; ^ chastise_v 0
->amh $a[cs=acc] $n qT'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chastise_v $n ; ^ chastise_v 0
->amh $n[cs=acc] qT'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chat_v $a $n ; ^ chat_v 0
->amh $a[cs=acc] $n Cawt_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chat_v $n ; ^ chat_v 0
->amh $n[cs=acc] Cawt_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $a $n ; ^ cheat_v 0
->amh $a[cs=acc] $n tall_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $n ; ^ cheat_v 0
->amh $n[cs=acc] tall_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $a $n ; ^ cheat_v 0
->amh $a[cs=acc] $n kWr_j_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $n ; ^ cheat_v 0
->amh $n[cs=acc] kWr_j_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $a $n ; ^ cheat_v 0
->amh $a[cs=acc] $n slb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $n ; ^ cheat_v 0
->amh $n[cs=acc] slb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $a $n ; ^ cheat_v 0
->amh $a[cs=acc] $n C|brbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cheat_v $n ; ^ cheat_v 0
->amh $n[cs=acc] C|brbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** check_v $a $n ; ^ check_v 0
->amh $a[cs=acc] $n ft_x_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** check_v $n ; ^ check_v 0
->amh $n[cs=acc] ft_x_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** check_v $a $n ; ^ check_v 0
->amh $a[cs=acc] $n mrmr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** check_v $n ; ^ check_v 0
->amh $n[cs=acc] mrmr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cherish_v $a $n ; ^ cherish_v 0
->amh $a[cs=acc] $n n|kbkb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cherish_v $n ; ^ cherish_v 0
->amh $n[cs=acc] n|kbkb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $a $n ; ^ chew_v 0
->amh $a[cs=acc] $n mskW'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $n ; ^ chew_v 0
->amh $n[cs=acc] mskW'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $a $n ; ^ chew_v 0
->amh $a[cs=acc] $n lm_T_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $n ; ^ chew_v 0
->amh $n[cs=acc] lm_T_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $a $n ; ^ chew_v 0
->amh $a[cs=acc] $n 'N_k_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $n ; ^ chew_v 0
->amh $n[cs=acc] 'N_k_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $a $n ; ^ chew_v 0
->amh $a[cs=acc] $n qWrTm_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chew_v $n ; ^ chew_v 0
->amh $n[cs=acc] qWrTm_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chip_v $a $n ; ^ chip_v 0
->amh $a[cs=acc] $n crcm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chip_v $n ; ^ chip_v 0
->amh $n[cs=acc] crcm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** choke_v $a $n ; ^ choke_v 0
->amh $a[cs=acc] $n 'f_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** choke_v $n ; ^ choke_v 0
->amh $n[cs=acc] 'f_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** choke_v $a $n ; ^ choke_v 0
->amh $a[cs=acc] $n 'nq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** choke_v $n ; ^ choke_v 0
->amh $n[cs=acc] 'nq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** choose_v $a $n ; ^ choose_v 0
->amh $a[cs=acc] $n mrT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** choose_v $n ; ^ choose_v 0
->amh $n[cs=acc] mrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $a $n ; ^ chop_v 0
->amh $a[cs=acc] $n ktkt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $n ; ^ chop_v 0
->amh $n[cs=acc] ktkt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $a $n ; ^ chop_v 0
->amh $a[cs=acc] $n qrTf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $n ; ^ chop_v 0
->amh $n[cs=acc] qrTf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $a $n ; ^ chop_v 0
->amh $a[cs=acc] $n mtr_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $n ; ^ chop_v 0
->amh $n[cs=acc] mtr_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $a $n ; ^ chop_v 0
->amh $a[cs=acc] $n gWrd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $n ; ^ chop_v 0
->amh $n[cs=acc] gWrd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $a $n ; ^ chop_v 0
->amh $a[cs=acc] $n ktf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $n ; ^ chop_v 0
->amh $n[cs=acc] ktf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $a $n ; ^ chop_v 0
->amh $a[cs=acc] $n gWrd_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** chop_v $n ; ^ chop_v 0
->amh $n[cs=acc] gWrd_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** christen_v $a $n ; ^ christen_v 0
->amh $a[cs=acc] $n Tmq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** christen_v $n ; ^ christen_v 0
->amh $n[cs=acc] Tmq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** circulate_v $a $n ; ^ circulate_v 0
->amh $a[cs=acc] $n sraC*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** circulate_v $n ; ^ circulate_v 0
->amh $n[cs=acc] sraC*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** circumcise_v $a $n ; ^ circumcise_v 0
->amh $a[cs=acc] $n gr_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** circumcise_v $n ; ^ circumcise_v 0
->amh $n[cs=acc] gr_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cite_v $a $n ; ^ cite_v 0
->amh $a[cs=acc] $n Tqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cite_v $n ; ^ cite_v 0
->amh $n[cs=acc] Tqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clap_v $a $n ; ^ clap_v 0
->amh $a[cs=acc] $n CbCb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clap_v $n ; ^ clap_v 0
->amh $n[cs=acc] CbCb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $a $n ; ^ clarify_v 0
->amh $a[cs=acc] $n rd'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $n ; ^ clarify_v 0
->amh $n[cs=acc] rd'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $a $n ; ^ clarify_v 0
->amh $a[cs=acc] $n Tr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $n ; ^ clarify_v 0
->amh $n[cs=acc] Tr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $a $n ; ^ clarify_v 0
->amh $a[cs=acc] $n br'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $n ; ^ clarify_v 0
->amh $n[cs=acc] br'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $a $n ; ^ clarify_v 0
->amh $a[cs=acc] $n gnzb_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clarify_v $n ; ^ clarify_v 0
->amh $n[cs=acc] gnzb_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clash_v $a $n ; ^ clash_v 0
->amh $a[cs=acc] $n gC*_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clash_v $n ; ^ clash_v 0
->amh $n[cs=acc] gC*_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clasp_v $a $n ; ^ clasp_v 0
->amh $a[cs=acc] $n Cb_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clasp_v $n ; ^ clasp_v 0
->amh $n[cs=acc] Cb_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** classify_v $a $n ; ^ classify_v 0
->amh $a[cs=acc] $n kfl_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** classify_v $n ; ^ classify_v 0
->amh $n[cs=acc] kfl_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** classify_v $a $n ; ^ classify_v 0
->amh $a[cs=acc] $n ly_*_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** classify_v $n ; ^ classify_v 0
->amh $n[cs=acc] ly_*_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** claw_v $a $n ; ^ claw_v 0
->amh $a[cs=acc] $n bWC_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** claw_v $n ; ^ claw_v 0
->amh $n[cs=acc] bWC_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** claw_v $a $n ; ^ claw_v 0
->amh $a[cs=acc] $n bWC_q_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** claw_v $n ; ^ claw_v 0
->amh $n[cs=acc] bWC_q_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** claw_v $a $n ; ^ claw_v 0
->amh $a[cs=acc] $n bWaTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** claw_v $n ; ^ claw_v 0
->amh $n[cs=acc] bWaTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $a $n ; ^ clean_v 0
->amh $a[cs=acc] $n 'bs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $n ; ^ clean_v 0
->amh $n[cs=acc] 'bs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $a $n ; ^ clean_v 0
->amh $a[cs=acc] $n Sd'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $n ; ^ clean_v 0
->amh $n[cs=acc] Sd'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $a $n ; ^ clean_v 0
->amh $a[cs=acc] $n Tr'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $n ; ^ clean_v 0
->amh $n[cs=acc] Tr'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $a $n ; ^ clean_v 0
->amh $a[cs=acc] $n nS'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $n ; ^ clean_v 0
->amh $n[cs=acc] nS'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $a $n ; ^ clean_v 0
->amh $a[cs=acc] $n Trg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clean_v $n ; ^ clean_v 0
->amh $n[cs=acc] Trg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clear_v $a $n ; ^ clear_v 0
->amh $a[cs=acc] $n mnTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clear_v $n ; ^ clear_v 0
->amh $n[cs=acc] mnTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cleave_v $a $n ; ^ cleave_v 0
->amh $a[cs=acc] $n snTq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cleave_v $n ; ^ cleave_v 0
->amh $n[cs=acc] snTq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clench_v $a $n ; ^ clench_v 0
->amh $a[cs=acc] $n Cb_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clench_v $n ; ^ clench_v 0
->amh $n[cs=acc] Cb_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** climb_v $a $n ; ^ climb_v 0
->amh $a[cs=acc] $n wT'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** climb_v $n ; ^ climb_v 0
->amh $n[cs=acc] wT'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clink_v $a $n ; ^ clink_v 0
->amh $a[cs=acc] $n q|ClCl_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clink_v $n ; ^ clink_v 0
->amh $n[cs=acc] q|ClCl_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** close_v $a $n ; ^ close_v 0
->amh $a[cs=acc] $n qWl_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** close_v $n ; ^ close_v 0
->amh $n[cs=acc] qWl_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** close_v $a $n ; ^ close_v 0
->amh $a[cs=acc] $n zg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** close_v $n ; ^ close_v 0
->amh $n[cs=acc] zg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** close_v $a $n ; ^ close_v 0
->amh $a[cs=acc] $n dfn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** close_v $n ; ^ close_v 0
->amh $n[cs=acc] dfn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clot_v $a $n ; ^ clot_v 0
->amh $a[cs=acc] $n gWagWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clot_v $n ; ^ clot_v 0
->amh $n[cs=acc] gWagWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clot_v $a $n ; ^ clot_v 0
->amh $a[cs=acc] $n gWagWl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clot_v $n ; ^ clot_v 0
->amh $n[cs=acc] gWagWl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clutch_v $a $n ; ^ clutch_v 0
->amh $a[cs=acc] $n Cb_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** clutch_v $n ; ^ clutch_v 0
->amh $n[cs=acc] Cb_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coach_v $a $n ; ^ coach_v 0
->amh $a[cs=acc] $n slTn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coach_v $n ; ^ coach_v 0
->amh $n[cs=acc] slTn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cock_v $a $n ; ^ cock_v 0
->amh $a[cs=acc] $n qb_l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cock_v $n ; ^ cock_v 0
->amh $n[cs=acc] qb_l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coil_v $a $n ; ^ coil_v 0
->amh $a[cs=acc] $n Tqll_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coil_v $n ; ^ coil_v 0
->amh $n[cs=acc] Tqll_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coil_v $a $n ; ^ coil_v 0
->amh $a[cs=acc] $n TnTn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coil_v $n ; ^ coil_v 0
->amh $n[cs=acc] TnTn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** collect_v $a $n ; ^ collect_v 0
->amh $a[cs=acc] $n gss_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** collect_v $n ; ^ collect_v 0
->amh $n[cs=acc] gss_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** collect_v $a $n ; ^ collect_v 0
->amh $a[cs=acc] $n Trqm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** collect_v $n ; ^ collect_v 0
->amh $n[cs=acc] Trqm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** collect_v $a $n ; ^ collect_v 0
->amh $a[cs=acc] $n kmac*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** collect_v $n ; ^ collect_v 0
->amh $n[cs=acc] kmac*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** colour_v $a $n ; ^ colour_v 0
->amh $a[cs=acc] $n qlm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** colour_v $n ; ^ colour_v 0
->amh $n[cs=acc] qlm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** comb_v $a $n ; ^ comb_v 0
->amh $a[cs=acc] $n bT_r_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** comb_v $n ; ^ comb_v 0
->amh $n[cs=acc] bT_r_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** combat_v $a $n ; ^ combat_v 0
->amh $a[cs=acc] $n wg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** combat_v $n ; ^ combat_v 0
->amh $n[cs=acc] wg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** combine_v $a $n ; ^ combine_v 0
->amh $a[cs=acc] $n Tm_r_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** combine_v $n ; ^ combine_v 0
->amh $n[cs=acc] Tm_r_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** comfort_v $a $n ; ^ comfort_v 0
->amh $a[cs=acc] $n xngl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** comfort_v $n ; ^ comfort_v 0
->amh $n[cs=acc] xngl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** command_v $a $n ; ^ command_v 0
->amh $a[cs=acc] $n 'zz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** command_v $n ; ^ command_v 0
->amh $n[cs=acc] 'zz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** commence_v $a $n ; ^ commence_v 0
->amh $a[cs=acc] $n jm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** commence_v $n ; ^ commence_v 0
->amh $n[cs=acc] jm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** commence_v $a $n ; ^ commence_v 0
->amh $a[cs=acc] $n wT_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** commence_v $n ; ^ commence_v 0
->amh $n[cs=acc] wT_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $a $n ; ^ compare_v 0
->amh $a[cs=acc] $n blT_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $n ; ^ compare_v 0
->amh $n[cs=acc] blT_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $a $n ; ^ compare_v 0
->amh $a[cs=acc] $n gnzb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $n ; ^ compare_v 0
->amh $n[cs=acc] gnzb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $a $n ; ^ compare_v 0
->amh $a[cs=acc] $n mskr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $n ; ^ compare_v 0
->amh $n[cs=acc] mskr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $a $n ; ^ compare_v 0
->amh $a[cs=acc] $n wd_r_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $n ; ^ compare_v 0
->amh $n[cs=acc] wd_r_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $a $n ; ^ compare_v 0
->amh $a[cs=acc] $n 'y*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $n ; ^ compare_v 0
->amh $n[cs=acc] 'y*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $a $n ; ^ compare_v 0
->amh $a[cs=acc] $n nSr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compare_v $n ; ^ compare_v 0
->amh $n[cs=acc] nSr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compel_v $a $n ; ^ compel_v 0
->amh $a[cs=acc] $n gdd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compel_v $n ; ^ compel_v 0
->amh $n[cs=acc] gdd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compensate_v $a $n ; ^ compensate_v 0
->amh $a[cs=acc] $n k's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compensate_v $n ; ^ compensate_v 0
->amh $n[cs=acc] k's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compile_v $a $n ; ^ compile_v 0
->amh $a[cs=acc] $n qnbr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compile_v $n ; ^ compile_v 0
->amh $n[cs=acc] qnbr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compile_v $a $n ; ^ compile_v 0
->amh $a[cs=acc] $n qnbr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compile_v $n ; ^ compile_v 0
->amh $n[cs=acc] qnbr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compile_v $a $n ; ^ compile_v 0
->amh $a[cs=acc] $n Tnaqr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compile_v $n ; ^ compile_v 0
->amh $n[cs=acc] Tnaqr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complement_v $a $n ; ^ complement_v 0
->amh $a[cs=acc] $n gWlms_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complement_v $n ; ^ complement_v 0
->amh $n[cs=acc] gWlms_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $a $n ; ^ complete_v 0
->amh $a[cs=acc] $n bq'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $n ; ^ complete_v 0
->amh $n[cs=acc] bq'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $a $n ; ^ complete_v 0
->amh $a[cs=acc] $n Tnqq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $n ; ^ complete_v 0
->amh $n[cs=acc] Tnqq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $a $n ; ^ complete_v 0
->amh $a[cs=acc] $n mWl'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $n ; ^ complete_v 0
->amh $n[cs=acc] mWl'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $a $n ; ^ complete_v 0
->amh $a[cs=acc] $n zlq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** complete_v $n ; ^ complete_v 0
->amh $n[cs=acc] zlq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compose_v $a $n ; ^ compose_v 0
->amh $a[cs=acc] $n qN_*_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compose_v $n ; ^ compose_v 0
->amh $n[cs=acc] qN_*_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compress_v $a $n ; ^ compress_v 0
->amh $a[cs=acc] $n TqTq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compress_v $n ; ^ compress_v 0
->amh $n[cs=acc] TqTq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compress_v $a $n ; ^ compress_v 0
->amh $a[cs=acc] $n 'm_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** compress_v $n ; ^ compress_v 0
->amh $n[cs=acc] 'm_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceal_v $a $n ; ^ conceal_v 0
->amh $a[cs=acc] $n db_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceal_v $n ; ^ conceal_v 0
->amh $n[cs=acc] db_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceal_v $a $n ; ^ conceal_v 0
->amh $a[cs=acc] $n gard_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceal_v $n ; ^ conceal_v 0
->amh $n[cs=acc] gard_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceal_v $a $n ; ^ conceal_v 0
->amh $a[cs=acc] $n xf_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceal_v $n ; ^ conceal_v 0
->amh $n[cs=acc] xf_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceive_v $a $n ; ^ conceive_v 0
->amh $a[cs=acc] $n Sns_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conceive_v $n ; ^ conceive_v 0
->amh $n[cs=acc] Sns_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** concentrate_v $a $n ; ^ concentrate_v 0
->amh $a[cs=acc] $n kt_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** concentrate_v $n ; ^ concentrate_v 0
->amh $n[cs=acc] kt_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** concentrate_v $a $n ; ^ concentrate_v 0
->amh $a[cs=acc] $n kmac*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** concentrate_v $n ; ^ concentrate_v 0
->amh $n[cs=acc] kmac*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conclude_v $a $n ; ^ conclude_v 0
->amh $a[cs=acc] $n Tqll_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conclude_v $n ; ^ conclude_v 0
->amh $n[cs=acc] Tqll_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** condemn_v $a $n ; ^ condemn_v 0
->amh $a[cs=acc] $n kWn_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** condemn_v $n ; ^ condemn_v 0
->amh $n[cs=acc] kWn_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confiscate_v $a $n ; ^ confiscate_v 0
->amh $a[cs=acc] $n wrs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confiscate_v $n ; ^ confiscate_v 0
->amh $n[cs=acc] wrs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confront_v $a $n ; ^ confront_v 0
->amh $a[cs=acc] $n gTm_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confront_v $n ; ^ confront_v 0
->amh $n[cs=acc] gTm_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $a $n ; ^ confuse_v 0
->amh $a[cs=acc] $n skr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $n ; ^ confuse_v 0
->amh $n[cs=acc] skr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $a $n ; ^ confuse_v 0
->amh $a[cs=acc] $n zbarq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $n ; ^ confuse_v 0
->amh $n[cs=acc] zbarq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $a $n ; ^ confuse_v 0
->amh $a[cs=acc] $n mt'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $n ; ^ confuse_v 0
->amh $n[cs=acc] mt'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $a $n ; ^ confuse_v 0
->amh $a[cs=acc] $n dnagr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $n ; ^ confuse_v 0
->amh $n[cs=acc] dnagr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $a $n ; ^ confuse_v 0
->amh $a[cs=acc] $n mt'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $n ; ^ confuse_v 0
->amh $n[cs=acc] mt'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $a $n ; ^ confuse_v 0
->amh $a[cs=acc] $n dblq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** confuse_v $n ; ^ confuse_v 0
->amh $n[cs=acc] dblq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conjugate_v $a $n ; ^ conjugate_v 0
->amh $a[cs=acc] $n gss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conjugate_v $n ; ^ conjugate_v 0
->amh $n[cs=acc] gss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** connect_v $a $n ; ^ connect_v 0
->amh $a[cs=acc] $n Tlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** connect_v $n ; ^ connect_v 0
->amh $n[cs=acc] Tlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** connect_v $a $n ; ^ connect_v 0
->amh $a[cs=acc] $n y'z_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** connect_v $n ; ^ connect_v 0
->amh $n[cs=acc] y'z_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conquer_v $a $n ; ^ conquer_v 0
->amh $a[cs=acc] $n xnf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conquer_v $n ; ^ conquer_v 0
->amh $n[cs=acc] xnf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** console_v $a $n ; ^ console_v 0
->amh $a[cs=acc] $n lqs_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** console_v $n ; ^ console_v 0
->amh $n[cs=acc] lqs_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** console_v $a $n ; ^ console_v 0
->amh $a[cs=acc] $n Sn'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** console_v $n ; ^ console_v 0
->amh $n[cs=acc] Sn'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consolidate_v $a $n ; ^ consolidate_v 0
->amh $a[cs=acc] $n Tnkr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consolidate_v $n ; ^ consolidate_v 0
->amh $n[cs=acc] Tnkr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consolidate_v $a $n ; ^ consolidate_v 0
->amh $a[cs=acc] $n Tnkr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consolidate_v $n ; ^ consolidate_v 0
->amh $n[cs=acc] Tnkr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conspire_v $a $n ; ^ conspire_v 0
->amh $a[cs=acc] $n 'd_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conspire_v $n ; ^ conspire_v 0
->amh $n[cs=acc] 'd_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conspire_v $a $n ; ^ conspire_v 0
->amh $a[cs=acc] $n dWl_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conspire_v $n ; ^ conspire_v 0
->amh $n[cs=acc] dWl_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conspire_v $a $n ; ^ conspire_v 0
->amh $a[cs=acc] $n syr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** conspire_v $n ; ^ conspire_v 0
->amh $n[cs=acc] syr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** constrain_v $a $n ; ^ constrain_v 0
->amh $a[cs=acc] $n gt'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** constrain_v $n ; ^ constrain_v 0
->amh $n[cs=acc] gt'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consult_v $a $n ; ^ consult_v 0
->amh $a[cs=acc] $n mkr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consult_v $n ; ^ consult_v 0
->amh $n[cs=acc] mkr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consult_v $a $n ; ^ consult_v 0
->amh $a[cs=acc] $n way*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consult_v $n ; ^ consult_v 0
->amh $n[cs=acc] way*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consume_v $a $n ; ^ consume_v 0
->amh $a[cs=acc] $n fj*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consume_v $n ; ^ consume_v 0
->amh $n[cs=acc] fj*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consume_v $a $n ; ^ consume_v 0
->amh $a[cs=acc] $n Cr_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consume_v $n ; ^ consume_v 0
->amh $n[cs=acc] Cr_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consume_v $a $n ; ^ consume_v 0
->amh $a[cs=acc] $n bl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** consume_v $n ; ^ consume_v 0
->amh $n[cs=acc] bl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contaminate_v $a $n ; ^ contaminate_v 0
->amh $a[cs=acc] $n bk_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contaminate_v $n ; ^ contaminate_v 0
->amh $n[cs=acc] bk_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contemplate_v $a $n ; ^ contemplate_v 0
->amh $a[cs=acc] $n slsl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contemplate_v $n ; ^ contemplate_v 0
->amh $n[cs=acc] slsl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contest_v $a $n ; ^ contest_v 0
->amh $a[cs=acc] $n krkr_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contest_v $n ; ^ contest_v 0
->amh $n[cs=acc] krkr_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** continue_v $a $n ; ^ continue_v 0
->amh $a[cs=acc] $n qT_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** continue_v $n ; ^ continue_v 0
->amh $n[cs=acc] qT_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contradict_v $a $n ; ^ contradict_v 0
->amh $a[cs=acc] $n qarn_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contradict_v $n ; ^ contradict_v 0
->amh $n[cs=acc] qarn_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contribute_v $a $n ; ^ contribute_v 0
->amh $a[cs=acc] $n wT'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** contribute_v $n ; ^ contribute_v 0
->amh $n[cs=acc] wT'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** control_v $a $n ; ^ control_v 0
->amh $a[cs=acc] $n qWTr_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** control_v $n ; ^ control_v 0
->amh $n[cs=acc] qWTr_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convey_v $a $n ; ^ convey_v 0
->amh $a[cs=acc] $n qrb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convey_v $n ; ^ convey_v 0
->amh $n[cs=acc] qrb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convince_v $a $n ; ^ convince_v 0
->amh $a[cs=acc] $n 'mn_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convince_v $n ; ^ convince_v 0
->amh $n[cs=acc] 'mn_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convince_v $a $n ; ^ convince_v 0
->amh $a[cs=acc] $n 'mn_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convince_v $n ; ^ convince_v 0
->amh $n[cs=acc] 'mn_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convince_v $a $n ; ^ convince_v 0
->amh $a[cs=acc] $n wT'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** convince_v $n ; ^ convince_v 0
->amh $n[cs=acc] wT'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cook_v $a $n ; ^ cook_v 0
->amh $a[cs=acc] $n qq_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cook_v $n ; ^ cook_v 0
->amh $n[cs=acc] qq_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cool_v $a $n ; ^ cool_v 0
->amh $a[cs=acc] $n qzqz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cool_v $n ; ^ cool_v 0
->amh $n[cs=acc] qzqz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cool_v $a $n ; ^ cool_v 0
->amh $a[cs=acc] $n brd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cool_v $n ; ^ cool_v 0
->amh $n[cs=acc] brd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coordinate_v $a $n ; ^ coordinate_v 0
->amh $a[cs=acc] $n qnbr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coordinate_v $n ; ^ coordinate_v 0
->amh $n[cs=acc] qnbr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coordinate_v $a $n ; ^ coordinate_v 0
->amh $a[cs=acc] $n qnbr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** coordinate_v $n ; ^ coordinate_v 0
->amh $n[cs=acc] qnbr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** copy_v $a $n ; ^ copy_v 0
->amh $a[cs=acc] $n glbT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** copy_v $n ; ^ copy_v 0
->amh $n[cs=acc] glbT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** correct_v $a $n ; ^ correct_v 0
->amh $a[cs=acc] $n kWr_j_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** correct_v $n ; ^ correct_v 0
->amh $n[cs=acc] kWr_j_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** correct_v $a $n ; ^ correct_v 0
->amh $a[cs=acc] $n 'r_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** correct_v $n ; ^ correct_v 0
->amh $n[cs=acc] 'r_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** corrode_v $a $n ; ^ corrode_v 0
->amh $a[cs=acc] $n z'g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** corrode_v $n ; ^ corrode_v 0
->amh $n[cs=acc] z'g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** counsel_v $a $n ; ^ counsel_v 0
->amh $a[cs=acc] $n mkr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** counsel_v $n ; ^ counsel_v 0
->amh $n[cs=acc] mkr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** count_v $a $n ; ^ count_v 0
->amh $a[cs=acc] $n qWTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** count_v $n ; ^ count_v 0
->amh $n[cs=acc] qWTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** couple_v $a $n ; ^ couple_v 0
->amh $a[cs=acc] $n Tm_r_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** couple_v $n ; ^ couple_v 0
->amh $n[cs=acc] Tm_r_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $a $n ; ^ cover_v 0
->amh $a[cs=acc] $n gard_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $n ; ^ cover_v 0
->amh $n[cs=acc] gard_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $a $n ; ^ cover_v 0
->amh $a[cs=acc] $n lgW_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $n ; ^ cover_v 0
->amh $n[cs=acc] lgW_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $a $n ; ^ cover_v 0
->amh $a[cs=acc] $n mt'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $n ; ^ cover_v 0
->amh $n[cs=acc] mt'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $a $n ; ^ cover_v 0
->amh $a[cs=acc] $n xf_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cover_v $n ; ^ cover_v 0
->amh $n[cs=acc] xf_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** covet_v $a $n ; ^ covet_v 0
->amh $a[cs=acc] $n kj_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** covet_v $n ; ^ covet_v 0
->amh $n[cs=acc] kj_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crack_v $a $n ; ^ crack_v 0
->amh $a[cs=acc] $n Cwh_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crack_v $n ; ^ crack_v 0
->amh $n[cs=acc] Cwh_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crack_v $a $n ; ^ crack_v 0
->amh $a[cs=acc] $n snTq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crack_v $n ; ^ crack_v 0
->amh $n[cs=acc] snTq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cradle_v $a $n ; ^ cradle_v 0
->amh $a[cs=acc] $n 'qf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cradle_v $n ; ^ cradle_v 0
->amh $n[cs=acc] 'qf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $a $n ; ^ cram_v 0
->amh $a[cs=acc] $n 'C_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $n ; ^ cram_v 0
->amh $n[cs=acc] 'C_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $a $n ; ^ cram_v 0
->amh $a[cs=acc] $n xmdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $n ; ^ cram_v 0
->amh $n[cs=acc] xmdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $a $n ; ^ cram_v 0
->amh $a[cs=acc] $n sksk_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $n ; ^ cram_v 0
->amh $n[cs=acc] sksk_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $a $n ; ^ cram_v 0
->amh $a[cs=acc] $n 'm_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $n ; ^ cram_v 0
->amh $n[cs=acc] 'm_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $a $n ; ^ cram_v 0
->amh $a[cs=acc] $n gWsgWs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cram_v $n ; ^ cram_v 0
->amh $n[cs=acc] gWsgWs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cramp_v $a $n ; ^ cramp_v 0
->amh $a[cs=acc] $n nzr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cramp_v $n ; ^ cramp_v 0
->amh $n[cs=acc] nzr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cramp_v $a $n ; ^ cramp_v 0
->amh $a[cs=acc] $n 'f_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cramp_v $n ; ^ cramp_v 0
->amh $n[cs=acc] 'f_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crash_v $a $n ; ^ crash_v 0
->amh $a[cs=acc] $n gC*_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crash_v $n ; ^ crash_v 0
->amh $n[cs=acc] gC*_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $a $n ; ^ crease_v 0
->amh $a[cs=acc] $n Cmdd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $n ; ^ crease_v 0
->amh $n[cs=acc] Cmdd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $a $n ; ^ crease_v 0
->amh $a[cs=acc] $n Cb_T_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $n ; ^ crease_v 0
->amh $n[cs=acc] Cb_T_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $a $n ; ^ crease_v 0
->amh $a[cs=acc] $n kWmatr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $n ; ^ crease_v 0
->amh $n[cs=acc] kWmatr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $a $n ; ^ crease_v 0
->amh $a[cs=acc] $n Cramd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crease_v $n ; ^ crease_v 0
->amh $n[cs=acc] Cramd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** create_v $a $n ; ^ create_v 0
->amh $a[cs=acc] $n fTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** create_v $n ; ^ create_v 0
->amh $n[cs=acc] fTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cripple_v $a $n ; ^ cripple_v 0
->amh $a[cs=acc] $n kWrtm_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cripple_v $n ; ^ cripple_v 0
->amh $n[cs=acc] kWrtm_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cripple_v $a $n ; ^ cripple_v 0
->amh $a[cs=acc] $n snkl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cripple_v $n ; ^ cripple_v 0
->amh $n[cs=acc] snkl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** criticize_v $a $n ; ^ criticize_v 0
->amh $a[cs=acc] $n wqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** criticize_v $n ; ^ criticize_v 0
->amh $n[cs=acc] wqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** criticize_v $a $n ; ^ criticize_v 0
->amh $a[cs=acc] $n nqf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** criticize_v $n ; ^ criticize_v 0
->amh $n[cs=acc] nqf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** criticize_v $a $n ; ^ criticize_v 0
->amh $a[cs=acc] $n tc_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** criticize_v $n ; ^ criticize_v 0
->amh $n[cs=acc] tc_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crook_v $a $n ; ^ crook_v 0
->amh $a[cs=acc] $n wlagd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crook_v $n ; ^ crook_v 0
->amh $n[cs=acc] wlagd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cross_v $a $n ; ^ cross_v 0
->amh $a[cs=acc] $n Tm_r_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cross_v $n ; ^ cross_v 0
->amh $n[cs=acc] Tm_r_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cross_v $a $n ; ^ cross_v 0
->amh $a[cs=acc] $n rb'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cross_v $n ; ^ cross_v 0
->amh $n[cs=acc] rb'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crossbreed_v $a $n ; ^ crossbreed_v 0
->amh $a[cs=acc] $n kl_s_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crossbreed_v $n ; ^ crossbreed_v 0
->amh $n[cs=acc] kl_s_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crowd_v $a $n ; ^ crowd_v 0
->amh $a[cs=acc] $n Tbb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crowd_v $n ; ^ crowd_v 0
->amh $n[cs=acc] Tbb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crucify_v $a $n ; ^ crucify_v 0
->amh $a[cs=acc] $n sql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crucify_v $n ; ^ crucify_v 0
->amh $n[cs=acc] sql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crumble_v $a $n ; ^ crumble_v 0
->amh $a[cs=acc] $n n'd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crumble_v $n ; ^ crumble_v 0
->amh $n[cs=acc] n'd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crumble_v $a $n ; ^ crumble_v 0
->amh $a[cs=acc] $n ftft_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crumble_v $n ; ^ crumble_v 0
->amh $n[cs=acc] ftft_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crumble_v $a $n ; ^ crumble_v 0
->amh $a[cs=acc] $n frfr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crumble_v $n ; ^ crumble_v 0
->amh $n[cs=acc] frfr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crunch_v $a $n ; ^ crunch_v 0
->amh $a[cs=acc] $n qWrTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crunch_v $n ; ^ crunch_v 0
->amh $n[cs=acc] qWrTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $a $n ; ^ crush_v 0
->amh $a[cs=acc] $n gWrb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $n ; ^ crush_v 0
->amh $n[cs=acc] gWrb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $a $n ; ^ crush_v 0
->amh $a[cs=acc] $n fC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $n ; ^ crush_v 0
->amh $n[cs=acc] fC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $a $n ; ^ crush_v 0
->amh $a[cs=acc] $n Cflq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $n ; ^ crush_v 0
->amh $n[cs=acc] Cflq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $a $n ; ^ crush_v 0
->amh $a[cs=acc] $n damT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** crush_v $n ; ^ crush_v 0
->amh $n[cs=acc] damT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cry_v $a $n ; ^ cry_v 0
->amh $a[cs=acc] $n lqs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cry_v $n ; ^ cry_v 0
->amh $n[cs=acc] lqs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cry_v $a $n ; ^ cry_v 0
->amh $a[cs=acc] $n Cwh_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cry_v $n ; ^ cry_v 0
->amh $n[cs=acc] Cwh_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cry_v $a $n ; ^ cry_v 0
->amh $a[cs=acc] $n nb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cry_v $n ; ^ cry_v 0
->amh $n[cs=acc] nb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cultivate_v $a $n ; ^ cultivate_v 0
->amh $a[cs=acc] $n kW't_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cultivate_v $n ; ^ cultivate_v 0
->amh $n[cs=acc] kW't_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cup_v $a $n ; ^ cup_v 0
->amh $a[cs=acc] $n 'gm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cup_v $n ; ^ cup_v 0
->amh $n[cs=acc] 'gm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** curdle_v $a $n ; ^ curdle_v 0
->amh $a[cs=acc] $n rg'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** curdle_v $n ; ^ curdle_v 0
->amh $n[cs=acc] rg'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cure_v $a $n ; ^ cure_v 0
->amh $a[cs=acc] $n fw_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cure_v $n ; ^ cure_v 0
->amh $n[cs=acc] fw_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cure_v $a $n ; ^ cure_v 0
->amh $a[cs=acc] $n d'n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cure_v $n ; ^ cure_v 0
->amh $n[cs=acc] d'n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** curse_v $a $n ; ^ curse_v 0
->amh $a[cs=acc] $n rgm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** curse_v $n ; ^ curse_v 0
->amh $n[cs=acc] rgm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** curve_v $a $n ; ^ curve_v 0
->amh $a[cs=acc] $n Tmm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** curve_v $n ; ^ curve_v 0
->amh $n[cs=acc] Tmm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $a $n ; ^ cut_v 0
->amh $a[cs=acc] $n gWrd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $n ; ^ cut_v 0
->amh $n[cs=acc] gWrd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $a $n ; ^ cut_v 0
->amh $a[cs=acc] $n qWrT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $n ; ^ cut_v 0
->amh $n[cs=acc] qWrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $a $n ; ^ cut_v 0
->amh $a[cs=acc] $n bT'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $n ; ^ cut_v 0
->amh $n[cs=acc] bT'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $a $n ; ^ cut_v 0
->amh $a[cs=acc] $n Crgd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** cut_v $n ; ^ cut_v 0
->amh $n[cs=acc] Crgd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dam_v $a $n ; ^ dam_v 0
->amh $a[cs=acc] $n gd_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dam_v $n ; ^ dam_v 0
->amh $n[cs=acc] gd_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** damage_v $a $n ; ^ damage_v 0
->amh $a[cs=acc] $n gWd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** damage_v $n ; ^ damage_v 0
->amh $n[cs=acc] gWd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** damage_v $a $n ; ^ damage_v 0
->amh $a[cs=acc] $n blax*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** damage_v $n ; ^ damage_v 0
->amh $n[cs=acc] blax*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dampen_v $a $n ; ^ dampen_v 0
->amh $a[cs=acc] $n rTb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dampen_v $n ; ^ dampen_v 0
->amh $n[cs=acc] rTb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dance_v $a $n ; ^ dance_v 0
->amh $a[cs=acc] $n Cf_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dance_v $n ; ^ dance_v 0
->amh $n[cs=acc] Cf_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dance_v $a $n ; ^ dance_v 0
->amh $a[cs=acc] $n dn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dance_v $n ; ^ dance_v 0
->amh $n[cs=acc] dn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dare_v $a $n ; ^ dare_v 0
->amh $a[cs=acc] $n dfr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dare_v $n ; ^ dare_v 0
->amh $n[cs=acc] dfr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** darken_v $a $n ; ^ darken_v 0
->amh $a[cs=acc] $n TqWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** darken_v $n ; ^ darken_v 0
->amh $n[cs=acc] TqWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dash_v $a $n ; ^ dash_v 0
->amh $a[cs=acc] $n lg_'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dash_v $n ; ^ dash_v 0
->amh $n[cs=acc] lg_'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** daub_v $a $n ; ^ daub_v 0
->amh $a[cs=acc] $n lqlq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** daub_v $n ; ^ daub_v 0
->amh $n[cs=acc] lqlq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** daub_v $a $n ; ^ daub_v 0
->amh $a[cs=acc] $n mrg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** daub_v $n ; ^ daub_v 0
->amh $n[cs=acc] mrg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dawdle_v $a $n ; ^ dawdle_v 0
->amh $a[cs=acc] $n lg_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dawdle_v $n ; ^ dawdle_v 0
->amh $n[cs=acc] lg_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** daze_v $a $n ; ^ daze_v 0
->amh $a[cs=acc] $n fzz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** daze_v $n ; ^ daze_v 0
->amh $n[cs=acc] fzz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dazzle_v $a $n ; ^ dazzle_v 0
->amh $a[cs=acc] $n C|brbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dazzle_v $n ; ^ dazzle_v 0
->amh $n[cs=acc] C|brbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deafen_v $a $n ; ^ deafen_v 0
->amh $a[cs=acc] $n dnqWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deafen_v $n ; ^ deafen_v 0
->amh $n[cs=acc] dnqWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** debase_v $a $n ; ^ debase_v 0
->amh $a[cs=acc] $n rks_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** debase_v $n ; ^ debase_v 0
->amh $n[cs=acc] rks_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decant_v $a $n ; ^ decant_v 0
->amh $a[cs=acc] $n qrr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decant_v $n ; ^ decant_v 0
->amh $n[cs=acc] qrr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decapitate_v $a $n ; ^ decapitate_v 0
->amh $a[cs=acc] $n ql'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decapitate_v $n ; ^ decapitate_v 0
->amh $n[cs=acc] ql'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deceive_v $a $n ; ^ deceive_v 0
->amh $a[cs=acc] $n tall_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deceive_v $n ; ^ deceive_v 0
->amh $n[cs=acc] tall_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deceive_v $a $n ; ^ deceive_v 0
->amh $a[cs=acc] $n mt'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deceive_v $n ; ^ deceive_v 0
->amh $n[cs=acc] mt'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deceive_v $a $n ; ^ deceive_v 0
->amh $a[cs=acc] $n xf_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deceive_v $n ; ^ deceive_v 0
->amh $n[cs=acc] xf_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decide_v $a $n ; ^ decide_v 0
->amh $a[cs=acc] $n ws_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decide_v $n ; ^ decide_v 0
->amh $n[cs=acc] ws_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decide_v $a $n ; ^ decide_v 0
->amh $a[cs=acc] $n qWrT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decide_v $n ; ^ decide_v 0
->amh $n[cs=acc] qWrT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decipher_v $a $n ; ^ decipher_v 0
->amh $a[cs=acc] $n ft'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decipher_v $n ; ^ decipher_v 0
->amh $n[cs=acc] ft'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** declare_v $a $n ; ^ declare_v 0
->amh $a[cs=acc] $n 'wq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** declare_v $n ; ^ declare_v 0
->amh $n[cs=acc] 'wq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decorate_v $a $n ; ^ decorate_v 0
->amh $a[cs=acc] $n zy_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decorate_v $n ; ^ decorate_v 0
->amh $n[cs=acc] zy_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decorate_v $a $n ; ^ decorate_v 0
->amh $a[cs=acc] $n xl_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decorate_v $n ; ^ decorate_v 0
->amh $n[cs=acc] xl_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decrease_v $a $n ; ^ decrease_v 0
->amh $a[cs=acc] $n gWdl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decrease_v $n ; ^ decrease_v 0
->amh $n[cs=acc] gWdl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decrease_v $a $n ; ^ decrease_v 0
->amh $a[cs=acc] $n qn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** decrease_v $n ; ^ decrease_v 0
->amh $n[cs=acc] qn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deepen_v $a $n ; ^ deepen_v 0
->amh $a[cs=acc] $n gWdgWd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deepen_v $n ; ^ deepen_v 0
->amh $n[cs=acc] gWdgWd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** defend_v $a $n ; ^ defend_v 0
->amh $a[cs=acc] $n klkl_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** defend_v $n ; ^ defend_v 0
->amh $n[cs=acc] klkl_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** defile_v $a $n ; ^ defile_v 0
->amh $a[cs=acc] $n rks_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** defile_v $n ; ^ defile_v 0
->amh $n[cs=acc] rks_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $a $n ; ^ deform_v 0
->amh $a[cs=acc] $n Cramd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $n ; ^ deform_v 0
->amh $n[cs=acc] Cramd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $a $n ; ^ deform_v 0
->amh $a[cs=acc] $n Cramm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $n ; ^ deform_v 0
->amh $n[cs=acc] Cramm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $a $n ; ^ deform_v 0
->amh $a[cs=acc] $n blax*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $n ; ^ deform_v 0
->amh $n[cs=acc] blax*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $a $n ; ^ deform_v 0
->amh $a[cs=acc] $n Tmm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deform_v $n ; ^ deform_v 0
->amh $n[cs=acc] Tmm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delay_v $a $n ; ^ delay_v 0
->amh $a[cs=acc] $n qr*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delay_v $n ; ^ delay_v 0
->amh $n[cs=acc] qr*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delay_v $a $n ; ^ delay_v 0
->amh $a[cs=acc] $n zgy*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delay_v $n ; ^ delay_v 0
->amh $n[cs=acc] zgy*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delay_v $a $n ; ^ delay_v 0
->amh $a[cs=acc] $n qWy_*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delay_v $n ; ^ delay_v 0
->amh $n[cs=acc] qWy_*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delegate_v $a $n ; ^ delegate_v 0
->amh $a[cs=acc] $n wk_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delegate_v $n ; ^ delegate_v 0
->amh $n[cs=acc] wk_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deliver_v $a $n ; ^ deliver_v 0
->amh $a[cs=acc] $n drs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deliver_v $n ; ^ deliver_v 0
->amh $n[cs=acc] drs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deliver_v $a $n ; ^ deliver_v 0
->amh $a[cs=acc] $n wld_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deliver_v $n ; ^ deliver_v 0
->amh $n[cs=acc] wld_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deliver_v $a $n ; ^ deliver_v 0
->amh $a[cs=acc] $n rkb_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deliver_v $n ; ^ deliver_v 0
->amh $n[cs=acc] rkb_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delouse_v $a $n ; ^ delouse_v 0
->amh $a[cs=acc] $n qml_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delouse_v $n ; ^ delouse_v 0
->amh $n[cs=acc] qml_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delude_v $a $n ; ^ delude_v 0
->amh $a[cs=acc] $n wnbd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** delude_v $n ; ^ delude_v 0
->amh $n[cs=acc] wnbd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demand_v $a $n ; ^ demand_v 0
->amh $a[cs=acc] $n Ty_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demand_v $n ; ^ demand_v 0
->amh $n[cs=acc] Ty_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demarcate_v $a $n ; ^ demarcate_v 0
->amh $a[cs=acc] $n ws_n_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demarcate_v $n ; ^ demarcate_v 0
->amh $n[cs=acc] ws_n_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demolish_v $a $n ; ^ demolish_v 0
->amh $a[cs=acc] $n n'd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demolish_v $n ; ^ demolish_v 0
->amh $n[cs=acc] n'd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demonstrate_v $a $n ; ^ demonstrate_v 0
->amh $a[cs=acc] $n 'y*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** demonstrate_v $n ; ^ demonstrate_v 0
->amh $n[cs=acc] 'y*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** denigrate_v $a $n ; ^ denigrate_v 0
->amh $a[cs=acc] $n mnCq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** denigrate_v $n ; ^ denigrate_v 0
->amh $n[cs=acc] mnCq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** denigrate_v $a $n ; ^ denigrate_v 0
->amh $a[cs=acc] $n mnCq_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** denigrate_v $n ; ^ denigrate_v 0
->amh $n[cs=acc] mnCq_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dent_v $a $n ; ^ dent_v 0
->amh $a[cs=acc] $n crcm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dent_v $n ; ^ dent_v 0
->amh $n[cs=acc] crcm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** denude_v $a $n ; ^ denude_v 0
->amh $a[cs=acc] $n raqWt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** denude_v $n ; ^ denude_v 0
->amh $n[cs=acc] raqWt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $a $n ; ^ deny_v 0
->amh $a[cs=acc] $n 'bl_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $n ; ^ deny_v 0
->amh $n[cs=acc] 'bl_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $a $n ; ^ deny_v 0
->amh $a[cs=acc] $n kd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $n ; ^ deny_v 0
->amh $n[cs=acc] kd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $a $n ; ^ deny_v 0
->amh $a[cs=acc] $n k'd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $n ; ^ deny_v 0
->amh $n[cs=acc] k'd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $a $n ; ^ deny_v 0
->amh $a[cs=acc] $n 'bl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $n ; ^ deny_v 0
->amh $n[cs=acc] 'bl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $a $n ; ^ deny_v 0
->amh $a[cs=acc] $n nfg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deny_v $n ; ^ deny_v 0
->amh $n[cs=acc] nfg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deplore_v $a $n ; ^ deplore_v 0
->amh $a[cs=acc] $n 'zn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deplore_v $n ; ^ deplore_v 0
->amh $n[cs=acc] 'zn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** depress_v $a $n ; ^ depress_v 0
->amh $a[cs=acc] $n sgW_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** depress_v $n ; ^ depress_v 0
->amh $n[cs=acc] sgW_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** depress_v $a $n ; ^ depress_v 0
->amh $a[cs=acc] $n db_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** depress_v $n ; ^ depress_v 0
->amh $n[cs=acc] db_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $a $n ; ^ deride_v 0
->amh $a[cs=acc] $n xwf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $n ; ^ deride_v 0
->amh $n[cs=acc] xwf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $a $n ; ^ deride_v 0
->amh $a[cs=acc] $n zb_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $n ; ^ deride_v 0
->amh $n[cs=acc] zb_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $a $n ; ^ deride_v 0
->amh $a[cs=acc] $n fyz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $n ; ^ deride_v 0
->amh $n[cs=acc] fyz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $a $n ; ^ deride_v 0
->amh $a[cs=acc] $n xrdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deride_v $n ; ^ deride_v 0
->amh $n[cs=acc] xrdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** descend_v $a $n ; ^ descend_v 0
->amh $a[cs=acc] $n wrd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** descend_v $n ; ^ descend_v 0
->amh $n[cs=acc] wrd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desert_v $a $n ; ^ desert_v 0
->amh $a[cs=acc] $n kd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desert_v $n ; ^ desert_v 0
->amh $n[cs=acc] kd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desert_v $a $n ; ^ desert_v 0
->amh $a[cs=acc] $n frTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desert_v $n ; ^ desert_v 0
->amh $n[cs=acc] frTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** design_v $a $n ; ^ design_v 0
->amh $a[cs=acc] $n 'q_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** design_v $n ; ^ design_v 0
->amh $n[cs=acc] 'q_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desire_v $a $n ; ^ desire_v 0
->amh $a[cs=acc] $n fl_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desire_v $n ; ^ desire_v 0
->amh $n[cs=acc] fl_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desire_v $a $n ; ^ desire_v 0
->amh $a[cs=acc] $n wdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** desire_v $n ; ^ desire_v 0
->amh $n[cs=acc] wdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** despise_v $a $n ; ^ despise_v 0
->amh $a[cs=acc] $n wrd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** despise_v $n ; ^ despise_v 0
->amh $n[cs=acc] wrd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** despise_v $a $n ; ^ despise_v 0
->amh $a[cs=acc] $n wr_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** despise_v $n ; ^ despise_v 0
->amh $n[cs=acc] wr_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $a $n ; ^ destroy_v 0
->amh $a[cs=acc] $n dmss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $n ; ^ destroy_v 0
->amh $n[cs=acc] dmss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $a $n ; ^ destroy_v 0
->amh $a[cs=acc] $n fls_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $n ; ^ destroy_v 0
->amh $n[cs=acc] fls_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $a $n ; ^ destroy_v 0
->amh $a[cs=acc] $n frs_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $n ; ^ destroy_v 0
->amh $n[cs=acc] frs_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $a $n ; ^ destroy_v 0
->amh $a[cs=acc] $n wdm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** destroy_v $n ; ^ destroy_v 0
->amh $n[cs=acc] wdm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detach_v $a $n ; ^ detach_v 0
->amh $a[cs=acc] $n ly_*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detach_v $n ; ^ detach_v 0
->amh $n[cs=acc] ly_*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detach_v $a $n ; ^ detach_v 0
->amh $a[cs=acc] $n gnTl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detach_v $n ; ^ detach_v 0
->amh $n[cs=acc] gnTl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detain_v $a $n ; ^ detain_v 0
->amh $a[cs=acc] $n zgy*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detain_v $n ; ^ detain_v 0
->amh $n[cs=acc] zgy*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detain_v $a $n ; ^ detain_v 0
->amh $a[cs=acc] $n qWy_*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** detain_v $n ; ^ detain_v 0
->amh $n[cs=acc] qWy_*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deteriorate_v $a $n ; ^ deteriorate_v 0
->amh $a[cs=acc] $n b's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** deteriorate_v $n ; ^ deteriorate_v 0
->amh $n[cs=acc] b's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $a $n ; ^ develop_v 0
->amh $a[cs=acc] $n lm'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $n ; ^ develop_v 0
->amh $n[cs=acc] lm'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $a $n ; ^ develop_v 0
->amh $a[cs=acc] $n dabr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $n ; ^ develop_v 0
->amh $n[cs=acc] dabr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $a $n ; ^ develop_v 0
->amh $a[cs=acc] $n drj*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $n ; ^ develop_v 0
->amh $n[cs=acc] drj*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $a $n ; ^ develop_v 0
->amh $a[cs=acc] $n drj*_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $n ; ^ develop_v 0
->amh $n[cs=acc] drj*_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $a $n ; ^ develop_v 0
->amh $a[cs=acc] $n qn'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $n ; ^ develop_v 0
->amh $n[cs=acc] qn'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $a $n ; ^ develop_v 0
->amh $a[cs=acc] $n gWlms_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $n ; ^ develop_v 0
->amh $n[cs=acc] gWlms_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $a $n ; ^ develop_v 0
->amh $a[cs=acc] $n 'Tb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** develop_v $n ; ^ develop_v 0
->amh $n[cs=acc] 'Tb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** devise_v $a $n ; ^ devise_v 0
->amh $a[cs=acc] $n fTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** devise_v $n ; ^ devise_v 0
->amh $n[cs=acc] fTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** devour_v $a $n ; ^ devour_v 0
->amh $a[cs=acc] $n gWamT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** devour_v $n ; ^ devour_v 0
->amh $n[cs=acc] gWamT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** differentiate_v $a $n ; ^ differentiate_v 0
->amh $a[cs=acc] $n ly_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** differentiate_v $n ; ^ differentiate_v 0
->amh $n[cs=acc] ly_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dig_v $a $n ; ^ dig_v 0
->amh $a[cs=acc] $n qWf_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dig_v $n ; ^ dig_v 0
->amh $n[cs=acc] qWf_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** digest_v $a $n ; ^ digest_v 0
->amh $a[cs=acc] $n bl'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** digest_v $n ; ^ digest_v 0
->amh $n[cs=acc] bl'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dilute_v $a $n ; ^ dilute_v 0
->amh $a[cs=acc] $n kl_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dilute_v $n ; ^ dilute_v 0
->amh $n[cs=acc] kl_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dilute_v $a $n ; ^ dilute_v 0
->amh $a[cs=acc] $n qTn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dilute_v $n ; ^ dilute_v 0
->amh $n[cs=acc] qTn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dim_v $a $n ; ^ dim_v 0
->amh $a[cs=acc] $n qn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dim_v $n ; ^ dim_v 0
->amh $n[cs=acc] qn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $a $n ; ^ diminish_v 0
->amh $a[cs=acc] $n gWdl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $n ; ^ diminish_v 0
->amh $n[cs=acc] gWdl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $a $n ; ^ diminish_v 0
->amh $a[cs=acc] $n qn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $n ; ^ diminish_v 0
->amh $n[cs=acc] qn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $a $n ; ^ diminish_v 0
->amh $a[cs=acc] $n gWdl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $n ; ^ diminish_v 0
->amh $n[cs=acc] gWdl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $a $n ; ^ diminish_v 0
->amh $a[cs=acc] $n 'ns_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** diminish_v $n ; ^ diminish_v 0
->amh $n[cs=acc] 'ns_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dip_v $a $n ; ^ dip_v 0
->amh $a[cs=acc] $n dfq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dip_v $n ; ^ dip_v 0
->amh $n[cs=acc] dfq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** direct_v $a $n ; ^ direct_v 0
->amh $a[cs=acc] $n 'lf_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** direct_v $n ; ^ direct_v 0
->amh $n[cs=acc] 'lf_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disagree_v $a $n ; ^ disagree_v 0
->amh $a[cs=acc] $n frs_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disagree_v $n ; ^ disagree_v 0
->amh $n[cs=acc] frs_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disarrange_v $a $n ; ^ disarrange_v 0
->amh $a[cs=acc] $n msaql_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disarrange_v $n ; ^ disarrange_v 0
->amh $n[cs=acc] msaql_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disarrange_v $a $n ; ^ disarrange_v 0
->amh $a[cs=acc] $n mnqr_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disarrange_v $n ; ^ disarrange_v 0
->amh $n[cs=acc] mnqr_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disarrange_v $a $n ; ^ disarrange_v 0
->amh $a[cs=acc] $n qfrr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disarrange_v $n ; ^ disarrange_v 0
->amh $n[cs=acc] qfrr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** discard_v $a $n ; ^ discard_v 0
->amh $a[cs=acc] $n wg_d_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** discard_v $n ; ^ discard_v 0
->amh $n[cs=acc] wg_d_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** discard_v $a $n ; ^ discard_v 0
->amh $a[cs=acc] $n T'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** discard_v $n ; ^ discard_v 0
->amh $n[cs=acc] T'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disclose_v $a $n ; ^ disclose_v 0
->amh $a[cs=acc] $n glS_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disclose_v $n ; ^ disclose_v 0
->amh $n[cs=acc] glS_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** discover_v $a $n ; ^ discover_v 0
->amh $a[cs=acc] $n gN*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** discover_v $n ; ^ discover_v 0
->amh $n[cs=acc] gN*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disdain_v $a $n ; ^ disdain_v 0
->amh $a[cs=acc] $n n|qWaxx_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disdain_v $n ; ^ disdain_v 0
->amh $n[cs=acc] n|qWaxx_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disgrace_v $a $n ; ^ disgrace_v 0
->amh $a[cs=acc] $n 'fr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disgrace_v $n ; ^ disgrace_v 0
->amh $n[cs=acc] 'fr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disgust_v $a $n ; ^ disgust_v 0
->amh $a[cs=acc] $n Tl'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disgust_v $n ; ^ disgust_v 0
->amh $n[cs=acc] Tl'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disgust_v $a $n ; ^ disgust_v 0
->amh $a[cs=acc] $n n|gfgf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disgust_v $n ; ^ disgust_v 0
->amh $n[cs=acc] n|gfgf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dishonour_v $a $n ; ^ dishonour_v 0
->amh $a[cs=acc] $n wrd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dishonour_v $n ; ^ dishonour_v 0
->amh $n[cs=acc] wrd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dislike_v $a $n ; ^ dislike_v 0
->amh $a[cs=acc] $n r'q_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dislike_v $n ; ^ dislike_v 0
->amh $n[cs=acc] r'q_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dislike_v $a $n ; ^ dislike_v 0
->amh $a[cs=acc] $n Ty_f_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dislike_v $n ; ^ dislike_v 0
->amh $n[cs=acc] Ty_f_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dislike_v $a $n ; ^ dislike_v 0
->amh $a[cs=acc] $n Tl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dislike_v $n ; ^ dislike_v 0
->amh $n[cs=acc] Tl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismantle_v $a $n ; ^ dismantle_v 0
->amh $a[cs=acc] $n ly_*_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismantle_v $n ; ^ dismantle_v 0
->amh $n[cs=acc] ly_*_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismantle_v $a $n ; ^ dismantle_v 0
->amh $a[cs=acc] $n ft'_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismantle_v $n ; ^ dismantle_v 0
->amh $n[cs=acc] ft'_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismantle_v $a $n ; ^ dismantle_v 0
->amh $a[cs=acc] $n wlq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismantle_v $n ; ^ dismantle_v 0
->amh $n[cs=acc] wlq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismount_v $a $n ; ^ dismount_v 0
->amh $a[cs=acc] $n ft'_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismount_v $n ; ^ dismount_v 0
->amh $n[cs=acc] ft'_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismount_v $a $n ; ^ dismount_v 0
->amh $a[cs=acc] $n wrd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dismount_v $n ; ^ dismount_v 0
->amh $n[cs=acc] wrd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disperse_v $a $n ; ^ disperse_v 0
->amh $a[cs=acc] $n bt_n_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disperse_v $n ; ^ disperse_v 0
->amh $n[cs=acc] bt_n_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disperse_v $a $n ; ^ disperse_v 0
->amh $a[cs=acc] $n bt_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disperse_v $n ; ^ disperse_v 0
->amh $n[cs=acc] bt_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disperse_v $a $n ; ^ disperse_v 0
->amh $a[cs=acc] $n mnqr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disperse_v $n ; ^ disperse_v 0
->amh $n[cs=acc] mnqr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** display_v $a $n ; ^ display_v 0
->amh $a[cs=acc] $n 'y*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** display_v $n ; ^ display_v 0
->amh $n[cs=acc] 'y*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** displease_v $a $n ; ^ displease_v 0
->amh $a[cs=acc] $n kf'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** displease_v $n ; ^ displease_v 0
->amh $n[cs=acc] kf'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dispossess_v $a $n ; ^ dispossess_v 0
->amh $a[cs=acc] $n 'T'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dispossess_v $n ; ^ dispossess_v 0
->amh $n[cs=acc] 'T'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dispossess_v $a $n ; ^ dispossess_v 0
->amh $a[cs=acc] $n nql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dispossess_v $n ; ^ dispossess_v 0
->amh $n[cs=acc] nql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dispute_v $a $n ; ^ dispute_v 0
->amh $a[cs=acc] $n mWg_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dispute_v $n ; ^ dispute_v 0
->amh $n[cs=acc] mWg_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disrupt_v $a $n ; ^ disrupt_v 0
->amh $a[cs=acc] $n ng'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disrupt_v $n ; ^ disrupt_v 0
->amh $n[cs=acc] ng'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disrupt_v $a $n ; ^ disrupt_v 0
->amh $a[cs=acc] $n fls_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disrupt_v $n ; ^ disrupt_v 0
->amh $n[cs=acc] fls_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disrupt_v $a $n ; ^ disrupt_v 0
->amh $a[cs=acc] $n qaws_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disrupt_v $n ; ^ disrupt_v 0
->amh $n[cs=acc] qaws_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distinguish_v $a $n ; ^ distinguish_v 0
->amh $a[cs=acc] $n ly_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distinguish_v $n ; ^ distinguish_v 0
->amh $n[cs=acc] ly_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distort_v $a $n ; ^ distort_v 0
->amh $a[cs=acc] $n Tmm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distort_v $n ; ^ distort_v 0
->amh $n[cs=acc] Tmm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distort_v $a $n ; ^ distort_v 0
->amh $a[cs=acc] $n zb'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distort_v $n ; ^ distort_v 0
->amh $n[cs=acc] zb'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distract_v $a $n ; ^ distract_v 0
->amh $a[cs=acc] $n rs'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distract_v $n ; ^ distract_v 0
->amh $n[cs=acc] rs'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $a $n ; ^ distribute_v 0
->amh $a[cs=acc] $n kfl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $n ; ^ distribute_v 0
->amh $n[cs=acc] kfl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $a $n ; ^ distribute_v 0
->amh $a[cs=acc] $n kfl_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $n ; ^ distribute_v 0
->amh $n[cs=acc] kfl_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $a $n ; ^ distribute_v 0
->amh $a[cs=acc] $n kfl_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $n ; ^ distribute_v 0
->amh $n[cs=acc] kfl_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $a $n ; ^ distribute_v 0
->amh $a[cs=acc] $n drs_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $n ; ^ distribute_v 0
->amh $n[cs=acc] drs_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $a $n ; ^ distribute_v 0
->amh $a[cs=acc] $n 'd_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** distribute_v $n ; ^ distribute_v 0
->amh $n[cs=acc] 'd_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $a $n ; ^ disturb_v 0
->amh $a[cs=acc] $n trams_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $n ; ^ disturb_v 0
->amh $n[cs=acc] trams_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $a $n ; ^ disturb_v 0
->amh $a[cs=acc] $n rb_x_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $n ; ^ disturb_v 0
->amh $n[cs=acc] rb_x_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $a $n ; ^ disturb_v 0
->amh $a[cs=acc] $n dfrs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $n ; ^ disturb_v 0
->amh $n[cs=acc] dfrs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $a $n ; ^ disturb_v 0
->amh $a[cs=acc] $n k|lflf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $n ; ^ disturb_v 0
->amh $n[cs=acc] k|lflf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $a $n ; ^ disturb_v 0
->amh $a[cs=acc] $n bsaC*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $n ; ^ disturb_v 0
->amh $n[cs=acc] bsaC*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $a $n ; ^ disturb_v 0
->amh $a[cs=acc] $n 'w_k_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $n ; ^ disturb_v 0
->amh $n[cs=acc] 'w_k_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $a $n ; ^ disturb_v 0
->amh $a[cs=acc] $n qWrT_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** disturb_v $n ; ^ disturb_v 0
->amh $n[cs=acc] qWrT_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divest_v $a $n ; ^ divest_v 0
->amh $a[cs=acc] $n gff_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divest_v $n ; ^ divest_v 0
->amh $n[cs=acc] gff_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $a $n ; ^ divide_v 0
->amh $a[cs=acc] $n kfl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $n ; ^ divide_v 0
->amh $n[cs=acc] kfl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $a $n ; ^ divide_v 0
->amh $a[cs=acc] $n ly_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $n ; ^ divide_v 0
->amh $n[cs=acc] ly_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $a $n ; ^ divide_v 0
->amh $a[cs=acc] $n kfl_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $n ; ^ divide_v 0
->amh $n[cs=acc] kfl_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $a $n ; ^ divide_v 0
->amh $a[cs=acc] $n kfl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divide_v $n ; ^ divide_v 0
->amh $n[cs=acc] kfl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divorce_v $a $n ; ^ divorce_v 0
->amh $a[cs=acc] $n ft'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divorce_v $n ; ^ divorce_v 0
->amh $n[cs=acc] ft'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divorce_v $a $n ; ^ divorce_v 0
->amh $a[cs=acc] $n ft'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** divorce_v $n ; ^ divorce_v 0
->amh $n[cs=acc] ft'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** do_v $a $n ; ^ do_v 0
->amh $a[cs=acc] $n drg_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** do_v $n ; ^ do_v 0
->amh $n[cs=acc] drg_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** do_v $a $n ; ^ do_v 0
->amh $a[cs=acc] $n sr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** do_v $n ; ^ do_v 0
->amh $n[cs=acc] sr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dominate_v $a $n ; ^ dominate_v 0
->amh $a[cs=acc] $n gz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dominate_v $n ; ^ dominate_v 0
->amh $n[cs=acc] gz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** donate_v $a $n ; ^ donate_v 0
->amh $a[cs=acc] $n darg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** donate_v $n ; ^ donate_v 0
->amh $n[cs=acc] darg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** donate_v $a $n ; ^ donate_v 0
->amh $a[cs=acc] $n rz_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** donate_v $n ; ^ donate_v 0
->amh $n[cs=acc] rz_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** double_v $a $n ; ^ double_v 0
->amh $a[cs=acc] $n 'Tf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** double_v $n ; ^ double_v 0
->amh $n[cs=acc] 'Tf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** doubt_v $a $n ; ^ doubt_v 0
->amh $a[cs=acc] $n mnt'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** doubt_v $n ; ^ doubt_v 0
->amh $n[cs=acc] mnt'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** draft_v $a $n ; ^ draft_v 0
->amh $a[cs=acc] $n rqq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** draft_v $n ; ^ draft_v 0
->amh $n[cs=acc] rqq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drag_v $a $n ; ^ drag_v 0
->amh $a[cs=acc] $n gWt_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drag_v $n ; ^ drag_v 0
->amh $n[cs=acc] gWt_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drain_v $a $n ; ^ drain_v 0
->amh $a[cs=acc] $n Tff_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drain_v $n ; ^ drain_v 0
->amh $n[cs=acc] Tff_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** draw_v $a $n ; ^ draw_v 0
->amh $a[cs=acc] $n s'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** draw_v $n ; ^ draw_v 0
->amh $n[cs=acc] s'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dream_v $a $n ; ^ dream_v 0
->amh $a[cs=acc] $n 'lm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dream_v $n ; ^ dream_v 0
->amh $n[cs=acc] 'lm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drench_v $a $n ; ^ drench_v 0
->amh $a[cs=acc] $n r's_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drench_v $n ; ^ drench_v 0
->amh $n[cs=acc] r's_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dress_v $a $n ; ^ dress_v 0
->amh $a[cs=acc] $n lbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dress_v $n ; ^ dress_v 0
->amh $n[cs=acc] lbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dribble_v $a $n ; ^ dribble_v 0
->amh $a[cs=acc] $n n|TbTb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dribble_v $n ; ^ dribble_v 0
->amh $n[cs=acc] n|TbTb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dribble_v $a $n ; ^ dribble_v 0
->amh $a[cs=acc] $n z|rbrb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dribble_v $n ; ^ dribble_v 0
->amh $n[cs=acc] z|rbrb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drift_v $a $n ; ^ drift_v 0
->amh $a[cs=acc] $n n|saff_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drift_v $n ; ^ drift_v 0
->amh $n[cs=acc] n|saff_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drill_v $a $n ; ^ drill_v 0
->amh $a[cs=acc] $n rgT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drill_v $n ; ^ drill_v 0
->amh $n[cs=acc] rgT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drink_v $a $n ; ^ drink_v 0
->amh $a[cs=acc] $n TT_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drink_v $n ; ^ drink_v 0
->amh $n[cs=acc] TT_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drip_v $a $n ; ^ drip_v 0
->amh $a[cs=acc] $n nTb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drip_v $n ; ^ drip_v 0
->amh $n[cs=acc] nTb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drip_v $a $n ; ^ drip_v 0
->amh $a[cs=acc] $n n|TbTb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drip_v $n ; ^ drip_v 0
->amh $n[cs=acc] n|TbTb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drip_v $a $n ; ^ drip_v 0
->amh $a[cs=acc] $n n|TfTf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drip_v $n ; ^ drip_v 0
->amh $n[cs=acc] n|TfTf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drive_v $a $n ; ^ drive_v 0
->amh $a[cs=acc] $n n|qsaqs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drive_v $n ; ^ drive_v 0
->amh $n[cs=acc] n|qsaqs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drive_v $a $n ; ^ drive_v 0
->amh $a[cs=acc] $n x|krkr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drive_v $n ; ^ drive_v 0
->amh $n[cs=acc] x|krkr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drive_v $a $n ; ^ drive_v 0
->amh $a[cs=acc] $n nd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drive_v $n ; ^ drive_v 0
->amh $n[cs=acc] nd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drop_v $a $n ; ^ drop_v 0
->amh $a[cs=acc] $n T'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drop_v $n ; ^ drop_v 0
->amh $n[cs=acc] T'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drop_v $a $n ; ^ drop_v 0
->amh $a[cs=acc] $n tw_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drop_v $n ; ^ drop_v 0
->amh $n[cs=acc] tw_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drop_v $a $n ; ^ drop_v 0
->amh $a[cs=acc] $n rgf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** drop_v $n ; ^ drop_v 0
->amh $n[cs=acc] rgf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dry_v $a $n ; ^ dry_v 0
->amh $a[cs=acc] $n kc_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dry_v $n ; ^ dry_v 0
->amh $n[cs=acc] kc_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dry_v $a $n ; ^ dry_v 0
->amh $a[cs=acc] $n ksm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dry_v $n ; ^ dry_v 0
->amh $n[cs=acc] ksm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dry_v $a $n ; ^ dry_v 0
->amh $a[cs=acc] $n ksm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dry_v $n ; ^ dry_v 0
->amh $n[cs=acc] ksm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $a $n ; ^ dull_v 0
->amh $a[cs=acc] $n Tr_s_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $n ; ^ dull_v 0
->amh $n[cs=acc] Tr_s_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $a $n ; ^ dull_v 0
->amh $a[cs=acc] $n dd_b_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $n ; ^ dull_v 0
->amh $n[cs=acc] dd_b_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $a $n ; ^ dull_v 0
->amh $a[cs=acc] $n dn_z_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $n ; ^ dull_v 0
->amh $n[cs=acc] dn_z_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $a $n ; ^ dull_v 0
->amh $a[cs=acc] $n dnqWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dull_v $n ; ^ dull_v 0
->amh $n[cs=acc] dnqWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dump_v $a $n ; ^ dump_v 0
->amh $a[cs=acc] $n gxr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dump_v $n ; ^ dump_v 0
->amh $n[cs=acc] gxr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dunk_v $a $n ; ^ dunk_v 0
->amh $a[cs=acc] $n Tqs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dunk_v $n ; ^ dunk_v 0
->amh $n[cs=acc] Tqs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dunk_v $a $n ; ^ dunk_v 0
->amh $a[cs=acc] $n dfq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dunk_v $n ; ^ dunk_v 0
->amh $n[cs=acc] dfq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dust_v $a $n ; ^ dust_v 0
->amh $a[cs=acc] $n wr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dust_v $n ; ^ dust_v 0
->amh $n[cs=acc] wr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dye_v $a $n ; ^ dye_v 0
->amh $a[cs=acc] $n qlm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** dye_v $n ; ^ dye_v 0
->amh $n[cs=acc] qlm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** earn_v $a $n ; ^ earn_v 0
->amh $a[cs=acc] $n gN*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** earn_v $n ; ^ earn_v 0
->amh $n[cs=acc] gN*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** earn_v $a $n ; ^ earn_v 0
->amh $a[cs=acc] $n ksb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** earn_v $n ; ^ earn_v 0
->amh $n[cs=acc] ksb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** eat_v $a $n ; ^ eat_v 0
->amh $a[cs=acc] $n bl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** eat_v $n ; ^ eat_v 0
->amh $n[cs=acc] bl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** echo_v $a $n ; ^ echo_v 0
->amh $a[cs=acc] $n gb'_v[as=rc,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** echo_v $n ; ^ echo_v 0
->amh $n[cs=acc] gb'_v[as=rc,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** edit_v $a $n ; ^ edit_v 0
->amh $a[cs=acc] $n qnbr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** edit_v $n ; ^ edit_v 0
->amh $n[cs=acc] qnbr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** elaborate_v $a $n ; ^ elaborate_v 0
->amh $a[cs=acc] $n br'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** elaborate_v $n ; ^ elaborate_v 0
->amh $n[cs=acc] br'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** eliminate_v $a $n ; ^ eliminate_v 0
->amh $a[cs=acc] $n wg_d_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** eliminate_v $n ; ^ eliminate_v 0
->amh $n[cs=acc] wg_d_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** elucidate_v $a $n ; ^ elucidate_v 0
->amh $a[cs=acc] $n br'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** elucidate_v $n ; ^ elucidate_v 0
->amh $n[cs=acc] br'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** emasculate_v $a $n ; ^ emasculate_v 0
->amh $a[cs=acc] $n kWlax*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** emasculate_v $n ; ^ emasculate_v 0
->amh $n[cs=acc] kWlax*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embarrass_v $a $n ; ^ embarrass_v 0
->amh $a[cs=acc] $n sq_q_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embarrass_v $n ; ^ embarrass_v 0
->amh $n[cs=acc] sq_q_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embarrass_v $a $n ; ^ embarrass_v 0
->amh $a[cs=acc] $n 'fr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embarrass_v $n ; ^ embarrass_v 0
->amh $n[cs=acc] 'fr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embellish_v $a $n ; ^ embellish_v 0
->amh $a[cs=acc] $n qb_'_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embellish_v $n ; ^ embellish_v 0
->amh $n[cs=acc] qb_'_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embellish_v $a $n ; ^ embellish_v 0
->amh $a[cs=acc] $n zy_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embellish_v $n ; ^ embellish_v 0
->amh $n[cs=acc] zy_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embezzle_v $a $n ; ^ embezzle_v 0
->amh $a[cs=acc] $n C|brbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embezzle_v $n ; ^ embezzle_v 0
->amh $n[cs=acc] C|brbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embolden_v $a $n ; ^ embolden_v 0
->amh $a[cs=acc] $n dfr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embolden_v $n ; ^ embolden_v 0
->amh $n[cs=acc] dfr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embolden_v $a $n ; ^ embolden_v 0
->amh $a[cs=acc] $n jgn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embolden_v $n ; ^ embolden_v 0
->amh $n[cs=acc] jgn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embrace_v $a $n ; ^ embrace_v 0
->amh $a[cs=acc] $n 'qf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embrace_v $n ; ^ embrace_v 0
->amh $n[cs=acc] 'qf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embroider_v $a $n ; ^ embroider_v 0
->amh $a[cs=acc] $n Tlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embroider_v $n ; ^ embroider_v 0
->amh $n[cs=acc] Tlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embroider_v $a $n ; ^ embroider_v 0
->amh $a[cs=acc] $n zmzm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** embroider_v $n ; ^ embroider_v 0
->amh $n[cs=acc] zmzm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** emphasize_v $a $n ; ^ emphasize_v 0
->amh $a[cs=acc] $n Tnkr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** emphasize_v $n ; ^ emphasize_v 0
->amh $n[cs=acc] Tnkr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** employ_v $a $n ; ^ employ_v 0
->amh $a[cs=acc] $n qTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** employ_v $n ; ^ employ_v 0
->amh $n[cs=acc] qTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** empty_v $a $n ; ^ empty_v 0
->amh $a[cs=acc] $n zrgf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** empty_v $n ; ^ empty_v 0
->amh $n[cs=acc] zrgf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encircle_v $a $n ; ^ encircle_v 0
->amh $a[cs=acc] $n kbb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encircle_v $n ; ^ encircle_v 0
->amh $n[cs=acc] kbb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encompass_v $a $n ; ^ encompass_v 0
->amh $a[cs=acc] $n kbb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encompass_v $n ; ^ encompass_v 0
->amh $n[cs=acc] kbb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encourage_v $a $n ; ^ encourage_v 0
->amh $a[cs=acc] $n dfr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encourage_v $n ; ^ encourage_v 0
->amh $n[cs=acc] dfr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encourage_v $a $n ; ^ encourage_v 0
->amh $a[cs=acc] $n brt'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encourage_v $n ; ^ encourage_v 0
->amh $n[cs=acc] brt'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encourage_v $a $n ; ^ encourage_v 0
->amh $a[cs=acc] $n ns'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** encourage_v $n ; ^ encourage_v 0
->amh $n[cs=acc] ns'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** end_v $a $n ; ^ end_v 0
->amh $a[cs=acc] $n kt_m_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** end_v $n ; ^ end_v 0
->amh $n[cs=acc] kt_m_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** end_v $a $n ; ^ end_v 0
->amh $a[cs=acc] $n Cr_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** end_v $n ; ^ end_v 0
->amh $n[cs=acc] Cr_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** end_v $a $n ; ^ end_v 0
->amh $a[cs=acc] $n dmdm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** end_v $n ; ^ end_v 0
->amh $n[cs=acc] dmdm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** endorse_v $a $n ; ^ endorse_v 0
->amh $a[cs=acc] $n fr_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** endorse_v $n ; ^ endorse_v 0
->amh $n[cs=acc] fr_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** endow_v $a $n ; ^ endow_v 0
->amh $a[cs=acc] $n gWl_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** endow_v $n ; ^ endow_v 0
->amh $n[cs=acc] gWl_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enfeeble_v $a $n ; ^ enfeeble_v 0
->amh $a[cs=acc] $n qWrqWz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enfeeble_v $n ; ^ enfeeble_v 0
->amh $n[cs=acc] qWrqWz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enfeeble_v $a $n ; ^ enfeeble_v 0
->amh $a[cs=acc] $n n|Trawz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enfeeble_v $n ; ^ enfeeble_v 0
->amh $n[cs=acc] n|Trawz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** engender_v $a $n ; ^ engender_v 0
->amh $a[cs=acc] $n wld_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** engender_v $n ; ^ engender_v 0
->amh $n[cs=acc] wld_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enlighten_v $a $n ; ^ enlighten_v 0
->amh $a[cs=acc] $n rd'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enlighten_v $n ; ^ enlighten_v 0
->amh $n[cs=acc] rd'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enliven_v $a $n ; ^ enliven_v 0
->amh $a[cs=acc] $n dmq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enliven_v $n ; ^ enliven_v 0
->amh $n[cs=acc] dmq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enliven_v $a $n ; ^ enliven_v 0
->amh $a[cs=acc] $n mwq_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enliven_v $n ; ^ enliven_v 0
->amh $n[cs=acc] mwq_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enliven_v $a $n ; ^ enliven_v 0
->amh $a[cs=acc] $n dmq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enliven_v $n ; ^ enliven_v 0
->amh $n[cs=acc] dmq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrage_v $a $n ; ^ enrage_v 0
->amh $a[cs=acc] $n ndd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrage_v $n ; ^ enrage_v 0
->amh $n[cs=acc] ndd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrage_v $a $n ; ^ enrage_v 0
->amh $a[cs=acc] $n qWT'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrage_v $n ; ^ enrage_v 0
->amh $n[cs=acc] qWT'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrage_v $a $n ; ^ enrage_v 0
->amh $a[cs=acc] $n bgn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrage_v $n ; ^ enrage_v 0
->amh $n[cs=acc] bgn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrich_v $a $n ; ^ enrich_v 0
->amh $a[cs=acc] $n dabr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enrich_v $n ; ^ enrich_v 0
->amh $n[cs=acc] dabr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entail_v $a $n ; ^ entail_v 0
->amh $a[cs=acc] $n Ty_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entail_v $n ; ^ entail_v 0
->amh $n[cs=acc] Ty_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $a $n ; ^ entangle_v 0
->amh $a[cs=acc] $n qWl_f_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $n ; ^ entangle_v 0
->amh $n[cs=acc] qWl_f_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $a $n ; ^ entangle_v 0
->amh $a[cs=acc] $n Tlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $n ; ^ entangle_v 0
->amh $n[cs=acc] Tlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $a $n ; ^ entangle_v 0
->amh $a[cs=acc] $n wnkr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $n ; ^ entangle_v 0
->amh $n[cs=acc] wnkr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $a $n ; ^ entangle_v 0
->amh $a[cs=acc] $n wnkr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entangle_v $n ; ^ entangle_v 0
->amh $n[cs=acc] wnkr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enter_v $a $n ; ^ enter_v 0
->amh $a[cs=acc] $n gb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enter_v $n ; ^ enter_v 0
->amh $n[cs=acc] gb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $a $n ; ^ entertain_v 0
->amh $a[cs=acc] $n Cawt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $n ; ^ entertain_v 0
->amh $n[cs=acc] Cawt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $a $n ; ^ entertain_v 0
->amh $a[cs=acc] $n nagd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $n ; ^ entertain_v 0
->amh $n[cs=acc] nagd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $a $n ; ^ entertain_v 0
->amh $a[cs=acc] $n ds_t_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $n ; ^ entertain_v 0
->amh $n[cs=acc] ds_t_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $a $n ; ^ entertain_v 0
->amh $a[cs=acc] $n zn'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entertain_v $n ; ^ entertain_v 0
->amh $n[cs=acc] zn'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entomb_v $a $n ; ^ entomb_v 0
->amh $a[cs=acc] $n qbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entomb_v $n ; ^ entomb_v 0
->amh $n[cs=acc] qbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entreat_v $a $n ; ^ entreat_v 0
->amh $a[cs=acc] $n lm_T_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entreat_v $n ; ^ entreat_v 0
->amh $n[cs=acc] lm_T_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entwine_v $a $n ; ^ entwine_v 0
->amh $a[cs=acc] $n gm_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** entwine_v $n ; ^ entwine_v 0
->amh $n[cs=acc] gm_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enumerate_v $a $n ; ^ enumerate_v 0
->amh $a[cs=acc] $n zrzr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enumerate_v $n ; ^ enumerate_v 0
->amh $n[cs=acc] zrzr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enumerate_v $a $n ; ^ enumerate_v 0
->amh $a[cs=acc] $n drdr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** enumerate_v $n ; ^ enumerate_v 0
->amh $n[cs=acc] drdr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** equalize_v $a $n ; ^ equalize_v 0
->amh $a[cs=acc] $n 'k_l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** equalize_v $n ; ^ equalize_v 0
->amh $n[cs=acc] 'k_l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** eradicate_v $a $n ; ^ eradicate_v 0
->amh $a[cs=acc] $n Tf'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** eradicate_v $n ; ^ eradicate_v 0
->amh $n[cs=acc] Tf'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erect_v $a $n ; ^ erect_v 0
->amh $a[cs=acc] $n qwm_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erect_v $n ; ^ erect_v 0
->amh $n[cs=acc] qwm_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erode_v $a $n ; ^ erode_v 0
->amh $a[cs=acc] $n xrxr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erode_v $n ; ^ erode_v 0
->amh $n[cs=acc] xrxr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erode_v $a $n ; ^ erode_v 0
->amh $a[cs=acc] $n bWrbWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erode_v $n ; ^ erode_v 0
->amh $n[cs=acc] bWrbWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erode_v $a $n ; ^ erode_v 0
->amh $a[cs=acc] $n 'Tb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** erode_v $n ; ^ erode_v 0
->amh $n[cs=acc] 'Tb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** escape_v $a $n ; ^ escape_v 0
->amh $a[cs=acc] $n mlT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** escape_v $n ; ^ escape_v 0
->amh $n[cs=acc] mlT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** escort_v $a $n ; ^ escort_v 0
->amh $a[cs=acc] $n 'j_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** escort_v $n ; ^ escort_v 0
->amh $n[cs=acc] 'j_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** establish_v $a $n ; ^ establish_v 0
->amh $a[cs=acc] $n msrt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** establish_v $n ; ^ establish_v 0
->amh $n[cs=acc] msrt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** establish_v $a $n ; ^ establish_v 0
->amh $a[cs=acc] $n qWrqWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** establish_v $n ; ^ establish_v 0
->amh $n[cs=acc] qWrqWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** establish_v $a $n ; ^ establish_v 0
->amh $a[cs=acc] $n qwm_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** establish_v $n ; ^ establish_v 0
->amh $n[cs=acc] qwm_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** estimate_v $a $n ; ^ estimate_v 0
->amh $a[cs=acc] $n gm_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** estimate_v $n ; ^ estimate_v 0
->amh $n[cs=acc] gm_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $a $n ; ^ evaluate_v 0
->amh $a[cs=acc] $n tm_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $n ; ^ evaluate_v 0
->amh $n[cs=acc] tm_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $a $n ; ^ evaluate_v 0
->amh $a[cs=acc] $n gmgm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $n ; ^ evaluate_v 0
->amh $n[cs=acc] gmgm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $a $n ; ^ evaluate_v 0
->amh $a[cs=acc] $n mz_n_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $n ; ^ evaluate_v 0
->amh $n[cs=acc] mz_n_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $a $n ; ^ evaluate_v 0
->amh $a[cs=acc] $n gm_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evaluate_v $n ; ^ evaluate_v 0
->amh $n[cs=acc] gm_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evict_v $a $n ; ^ evict_v 0
->amh $a[cs=acc] $n nql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** evict_v $n ; ^ evict_v 0
->amh $n[cs=acc] nql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exaggerate_v $a $n ; ^ exaggerate_v 0
->amh $a[cs=acc] $n ngs_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exaggerate_v $n ; ^ exaggerate_v 0
->amh $n[cs=acc] ngs_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exaggerate_v $a $n ; ^ exaggerate_v 0
->amh $a[cs=acc] $n dnq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exaggerate_v $n ; ^ exaggerate_v 0
->amh $n[cs=acc] dnq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exaggerate_v $a $n ; ^ exaggerate_v 0
->amh $a[cs=acc] $n gnn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exaggerate_v $n ; ^ exaggerate_v 0
->amh $n[cs=acc] gnn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exalt_v $a $n ; ^ exalt_v 0
->amh $a[cs=acc] $n fnTz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exalt_v $n ; ^ exalt_v 0
->amh $n[cs=acc] fnTz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** examine_v $a $n ; ^ examine_v 0
->amh $a[cs=acc] $n ft_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** examine_v $n ; ^ examine_v 0
->amh $n[cs=acc] ft_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** examine_v $a $n ; ^ examine_v 0
->amh $a[cs=acc] $n mrmr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** examine_v $n ; ^ examine_v 0
->amh $n[cs=acc] mrmr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exceed_v $a $n ; ^ exceed_v 0
->amh $a[cs=acc] $n blT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exceed_v $n ; ^ exceed_v 0
->amh $n[cs=acc] blT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exceed_v $a $n ; ^ exceed_v 0
->amh $a[cs=acc] $n bz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exceed_v $n ; ^ exceed_v 0
->amh $n[cs=acc] bz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** excel_v $a $n ; ^ excel_v 0
->amh $a[cs=acc] $n l'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** excel_v $n ; ^ excel_v 0
->amh $n[cs=acc] l'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exchange_v $a $n ; ^ exchange_v 0
->amh $a[cs=acc] $n lw_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exchange_v $n ; ^ exchange_v 0
->amh $n[cs=acc] lw_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exclude_v $a $n ; ^ exclude_v 0
->amh $a[cs=acc] $n qr*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exclude_v $n ; ^ exclude_v 0
->amh $n[cs=acc] qr*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** excrete_v $a $n ; ^ excrete_v 0
->amh $a[cs=acc] $n 'r'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** excrete_v $n ; ^ excrete_v 0
->amh $n[cs=acc] 'r'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** excrete_v $a $n ; ^ excrete_v 0
->amh $a[cs=acc] $n kWs'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** excrete_v $n ; ^ excrete_v 0
->amh $n[cs=acc] kWs'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** execute_v $a $n ; ^ execute_v 0
->amh $a[cs=acc] $n fS_m_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** execute_v $n ; ^ execute_v 0
->amh $n[cs=acc] fS_m_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhale_v $a $n ; ^ exhale_v 0
->amh $a[cs=acc] $n tnfs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhale_v $n ; ^ exhale_v 0
->amh $n[cs=acc] tnfs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhaust_v $a $n ; ^ exhaust_v 0
->amh $a[cs=acc] $n dkm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhaust_v $n ; ^ exhaust_v 0
->amh $n[cs=acc] dkm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhaust_v $a $n ; ^ exhaust_v 0
->amh $a[cs=acc] $n nbz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhaust_v $n ; ^ exhaust_v 0
->amh $n[cs=acc] nbz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhaust_v $a $n ; ^ exhaust_v 0
->amh $a[cs=acc] $n z'l_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhaust_v $n ; ^ exhaust_v 0
->amh $n[cs=acc] z'l_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhibit_v $a $n ; ^ exhibit_v 0
->amh $a[cs=acc] $n 'y*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exhibit_v $n ; ^ exhibit_v 0
->amh $n[cs=acc] 'y*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exile_v $a $n ; ^ exile_v 0
->amh $a[cs=acc] $n g'z_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exile_v $n ; ^ exile_v 0
->amh $n[cs=acc] g'z_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expand_v $a $n ; ^ expand_v 0
->amh $a[cs=acc] $n sf'_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expand_v $n ; ^ expand_v 0
->amh $n[cs=acc] sf'_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expect_v $a $n ; ^ expect_v 0
->amh $a[cs=acc] $n fl_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expect_v $n ; ^ expect_v 0
->amh $n[cs=acc] fl_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explain_v $a $n ; ^ explain_v 0
->amh $a[cs=acc] $n rd'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explain_v $n ; ^ explain_v 0
->amh $n[cs=acc] rd'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explain_v $a $n ; ^ explain_v 0
->amh $a[cs=acc] $n glS_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explain_v $n ; ^ explain_v 0
->amh $n[cs=acc] glS_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explain_v $a $n ; ^ explain_v 0
->amh $a[cs=acc] $n br'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explain_v $n ; ^ explain_v 0
->amh $n[cs=acc] br'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explode_v $a $n ; ^ explode_v 0
->amh $a[cs=acc] $n fnd'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explode_v $n ; ^ explode_v 0
->amh $n[cs=acc] fnd'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explode_v $a $n ; ^ explode_v 0
->amh $a[cs=acc] $n nbW_C_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explode_v $n ; ^ explode_v 0
->amh $n[cs=acc] nbW_C_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explode_v $a $n ; ^ explode_v 0
->amh $a[cs=acc] $n fnd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** explode_v $n ; ^ explode_v 0
->amh $n[cs=acc] fnd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exploit_v $a $n ; ^ exploit_v 0
->amh $a[cs=acc] $n bzbz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exploit_v $n ; ^ exploit_v 0
->amh $n[cs=acc] bzbz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exploit_v $a $n ; ^ exploit_v 0
->amh $a[cs=acc] $n mzbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exploit_v $n ; ^ exploit_v 0
->amh $n[cs=acc] mzbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expose_v $a $n ; ^ expose_v 0
->amh $a[cs=acc] $n glS_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expose_v $n ; ^ expose_v 0
->amh $n[cs=acc] glS_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expose_v $a $n ; ^ expose_v 0
->amh $a[cs=acc] $n glS_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** expose_v $n ; ^ expose_v 0
->amh $n[cs=acc] glS_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** extend_v $a $n ; ^ extend_v 0
->amh $a[cs=acc] $n zrg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** extend_v $n ; ^ extend_v 0
->amh $n[cs=acc] zrg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $a $n ; ^ exterminate_v 0
->amh $a[cs=acc] $n Tf'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $n ; ^ exterminate_v 0
->amh $n[cs=acc] Tf'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $a $n ; ^ exterminate_v 0
->amh $a[cs=acc] $n fj*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $n ; ^ exterminate_v 0
->amh $n[cs=acc] fj*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $a $n ; ^ exterminate_v 0
->amh $a[cs=acc] $n dmss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $n ; ^ exterminate_v 0
->amh $n[cs=acc] dmss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $a $n ; ^ exterminate_v 0
->amh $a[cs=acc] $n CfCf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $n ; ^ exterminate_v 0
->amh $n[cs=acc] CfCf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $a $n ; ^ exterminate_v 0
->amh $a[cs=acc] $n Cr_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** exterminate_v $n ; ^ exterminate_v 0
->amh $n[cs=acc] Cr_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** extinguish_v $a $n ; ^ extinguish_v 0
->amh $a[cs=acc] $n Tf'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** extinguish_v $n ; ^ extinguish_v 0
->amh $n[cs=acc] Tf'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** extract_v $a $n ; ^ extract_v 0
->amh $a[cs=acc] $n qsm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** extract_v $n ; ^ extract_v 0
->amh $n[cs=acc] qsm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $a $n ; ^ fade_v 0
->amh $a[cs=acc] $n dbzz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $n ; ^ fade_v 0
->amh $n[cs=acc] dbzz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $a $n ; ^ fade_v 0
->amh $a[cs=acc] $n dbzz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $n ; ^ fade_v 0
->amh $n[cs=acc] dbzz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $a $n ; ^ fade_v 0
->amh $a[cs=acc] $n Twlg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $n ; ^ fade_v 0
->amh $n[cs=acc] Twlg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $a $n ; ^ fade_v 0
->amh $a[cs=acc] $n ksm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $n ; ^ fade_v 0
->amh $n[cs=acc] ksm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $a $n ; ^ fade_v 0
->amh $a[cs=acc] $n ksm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fade_v $n ; ^ fade_v 0
->amh $n[cs=acc] ksm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fail_v $a $n ; ^ fail_v 0
->amh $a[cs=acc] $n fWrx_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fail_v $n ; ^ fail_v 0
->amh $n[cs=acc] fWrx_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** falter_v $a $n ; ^ falter_v 0
->amh $a[cs=acc] $n dnaqf_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** falter_v $n ; ^ falter_v 0
->amh $n[cs=acc] dnaqf_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fan_v $a $n ; ^ fan_v 0
->amh $a[cs=acc] $n rgb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fan_v $n ; ^ fan_v 0
->amh $n[cs=acc] rgb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fasten_v $a $n ; ^ fasten_v 0
->amh $a[cs=acc] $n Tbq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fasten_v $n ; ^ fasten_v 0
->amh $n[cs=acc] Tbq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $a $n ; ^ fatigue_v 0
->amh $a[cs=acc] $n dkm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $n ; ^ fatigue_v 0
->amh $n[cs=acc] dkm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $a $n ; ^ fatigue_v 0
->amh $a[cs=acc] $n dkm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $n ; ^ fatigue_v 0
->amh $n[cs=acc] dkm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $a $n ; ^ fatigue_v 0
->amh $a[cs=acc] $n Twlg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $n ; ^ fatigue_v 0
->amh $n[cs=acc] Twlg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $a $n ; ^ fatigue_v 0
->amh $a[cs=acc] $n dakr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $n ; ^ fatigue_v 0
->amh $n[cs=acc] dakr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $a $n ; ^ fatigue_v 0
->amh $a[cs=acc] $n lf'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatigue_v $n ; ^ fatigue_v 0
->amh $n[cs=acc] lf'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $a $n ; ^ fatten_v 0
->amh $a[cs=acc] $n sb'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $n ; ^ fatten_v 0
->amh $n[cs=acc] sb'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $a $n ; ^ fatten_v 0
->amh $a[cs=acc] $n wd_l_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $n ; ^ fatten_v 0
->amh $n[cs=acc] wd_l_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $a $n ; ^ fatten_v 0
->amh $a[cs=acc] $n dlb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $n ; ^ fatten_v 0
->amh $n[cs=acc] dlb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $a $n ; ^ fatten_v 0
->amh $a[cs=acc] $n wf_r_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fatten_v $n ; ^ fatten_v 0
->amh $n[cs=acc] wf_r_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** favour_v $a $n ; ^ favour_v 0
->amh $a[cs=acc] $n blT_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** favour_v $n ; ^ favour_v 0
->amh $n[cs=acc] blT_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** favour_v $a $n ; ^ favour_v 0
->amh $a[cs=acc] $n dg_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** favour_v $n ; ^ favour_v 0
->amh $n[cs=acc] dg_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fear_v $a $n ; ^ fear_v 0
->amh $a[cs=acc] $n fr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fear_v $n ; ^ fear_v 0
->amh $n[cs=acc] fr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feed_v $a $n ; ^ feed_v 0
->amh $a[cs=acc] $n bl'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feed_v $n ; ^ feed_v 0
->amh $n[cs=acc] bl'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feed_v $a $n ; ^ feed_v 0
->amh $a[cs=acc] $n bl'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feed_v $n ; ^ feed_v 0
->amh $n[cs=acc] bl'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feed_v $a $n ; ^ feed_v 0
->amh $a[cs=acc] $n mg_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feed_v $n ; ^ feed_v 0
->amh $n[cs=acc] mg_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feel_v $a $n ; ^ feel_v 0
->amh $a[cs=acc] $n dabs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** feel_v $n ; ^ feel_v 0
->amh $n[cs=acc] dabs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fence_v $a $n ; ^ fence_v 0
->amh $a[cs=acc] $n grgd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fence_v $n ; ^ fence_v 0
->amh $n[cs=acc] grgd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fertilize_v $a $n ; ^ fertilize_v 0
->amh $a[cs=acc] $n dabr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fertilize_v $n ; ^ fertilize_v 0
->amh $n[cs=acc] dabr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fight_v $a $n ; ^ fight_v 0
->amh $a[cs=acc] $n wg'_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fight_v $n ; ^ fight_v 0
->amh $n[cs=acc] wg'_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fight_v $a $n ; ^ fight_v 0
->amh $a[cs=acc] $n gdl_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fight_v $n ; ^ fight_v 0
->amh $n[cs=acc] gdl_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** file_v $a $n ; ^ file_v 0
->amh $a[cs=acc] $n mWr_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** file_v $n ; ^ file_v 0
->amh $n[cs=acc] mWr_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** file_v $a $n ; ^ file_v 0
->amh $a[cs=acc] $n fy_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** file_v $n ; ^ file_v 0
->amh $n[cs=acc] fy_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** filter_v $a $n ; ^ filter_v 0
->amh $a[cs=acc] $n Tr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** filter_v $n ; ^ filter_v 0
->amh $n[cs=acc] Tr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** filter_v $a $n ; ^ filter_v 0
->amh $a[cs=acc] $n Tl_l_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** filter_v $n ; ^ filter_v 0
->amh $n[cs=acc] Tl_l_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** find_v $a $n ; ^ find_v 0
->amh $a[cs=acc] $n gN*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** find_v $n ; ^ find_v 0
->amh $n[cs=acc] gN*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** finish_v $a $n ; ^ finish_v 0
->amh $a[cs=acc] $n Cr_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** finish_v $n ; ^ finish_v 0
->amh $n[cs=acc] Cr_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** finish_v $a $n ; ^ finish_v 0
->amh $a[cs=acc] $n dmdm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** finish_v $n ; ^ finish_v 0
->amh $n[cs=acc] dmdm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fire_v $a $n ; ^ fire_v 0
->amh $a[cs=acc] $n snbt_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fire_v $n ; ^ fire_v 0
->amh $n[cs=acc] snbt_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fire_v $a $n ; ^ fire_v 0
->amh $a[cs=acc] $n tkW_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fire_v $n ; ^ fire_v 0
->amh $n[cs=acc] tkW_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fire_v $a $n ; ^ fire_v 0
->amh $a[cs=acc] $n g'm_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fire_v $n ; ^ fire_v 0
->amh $n[cs=acc] g'm_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fix_v $a $n ; ^ fix_v 0
->amh $a[cs=acc] $n gTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fix_v $n ; ^ fix_v 0
->amh $n[cs=acc] gTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fix_v $a $n ; ^ fix_v 0
->amh $a[cs=acc] $n Tg_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fix_v $n ; ^ fix_v 0
->amh $n[cs=acc] Tg_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flagellate_v $a $n ; ^ flagellate_v 0
->amh $a[cs=acc] $n grf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flagellate_v $n ; ^ flagellate_v 0
->amh $n[cs=acc] grf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatten_v $a $n ; ^ flatten_v 0
->amh $a[cs=acc] $n lxlx_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatten_v $n ; ^ flatten_v 0
->amh $n[cs=acc] lxlx_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatter_v $a $n ; ^ flatter_v 0
->amh $a[cs=acc] $n dl_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatter_v $n ; ^ flatter_v 0
->amh $n[cs=acc] dl_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatter_v $a $n ; ^ flatter_v 0
->amh $a[cs=acc] $n qWlamT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatter_v $n ; ^ flatter_v 0
->amh $n[cs=acc] qWlamT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatter_v $a $n ; ^ flatter_v 0
->amh $a[cs=acc] $n sbk_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flatter_v $n ; ^ flatter_v 0
->amh $n[cs=acc] sbk_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flavour_v $a $n ; ^ flavour_v 0
->amh $a[cs=acc] $n TafT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flavour_v $n ; ^ flavour_v 0
->amh $n[cs=acc] TafT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flick_v $a $n ; ^ flick_v 0
->amh $a[cs=acc] $n fnTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flick_v $n ; ^ flick_v 0
->amh $n[cs=acc] fnTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flip_v $a $n ; ^ flip_v 0
->amh $a[cs=acc] $n fnTr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flip_v $n ; ^ flip_v 0
->amh $n[cs=acc] fnTr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** float_v $a $n ; ^ float_v 0
->amh $a[cs=acc] $n sff_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** float_v $n ; ^ float_v 0
->amh $n[cs=acc] sff_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flood_v $a $n ; ^ flood_v 0
->amh $a[cs=acc] $n T|lqlq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flood_v $n ; ^ flood_v 0
->amh $n[cs=acc] T|lqlq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flourish_v $a $n ; ^ flourish_v 0
->amh $a[cs=acc] $n sf'_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flourish_v $n ; ^ flourish_v 0
->amh $n[cs=acc] sf'_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flush_v $a $n ; ^ flush_v 0
->amh $a[cs=acc] $n cl_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flush_v $n ; ^ flush_v 0
->amh $n[cs=acc] cl_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flutter_v $a $n ; ^ flutter_v 0
->amh $a[cs=acc] $n r|gbgb_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** flutter_v $n ; ^ flutter_v 0
->amh $n[cs=acc] r|gbgb_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fly_v $a $n ; ^ fly_v 0
->amh $a[cs=acc] $n brr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fly_v $n ; ^ fly_v 0
->amh $n[cs=acc] brr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** foil_v $a $n ; ^ foil_v 0
->amh $a[cs=acc] $n CngWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** foil_v $n ; ^ foil_v 0
->amh $n[cs=acc] CngWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** foil_v $a $n ; ^ foil_v 0
->amh $a[cs=acc] $n Cngf_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** foil_v $n ; ^ foil_v 0
->amh $n[cs=acc] Cngf_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fold_v $a $n ; ^ fold_v 0
->amh $a[cs=acc] $n 'Tf_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fold_v $n ; ^ fold_v 0
->amh $n[cs=acc] 'Tf_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fold_v $a $n ; ^ fold_v 0
->amh $a[cs=acc] $n Tm_r_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fold_v $n ; ^ fold_v 0
->amh $n[cs=acc] Tm_r_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fold_v $a $n ; ^ fold_v 0
->amh $a[cs=acc] $n 'Tf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fold_v $n ; ^ fold_v 0
->amh $n[cs=acc] 'Tf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** follow_v $a $n ; ^ follow_v 0
->amh $a[cs=acc] $n kt_l_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** follow_v $n ; ^ follow_v 0
->amh $n[cs=acc] kt_l_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fondle_v $a $n ; ^ fondle_v 0
->amh $a[cs=acc] $n dabs_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fondle_v $n ; ^ fondle_v 0
->amh $n[cs=acc] dabs_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fool_v $a $n ; ^ fool_v 0
->amh $a[cs=acc] $n mWN_*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fool_v $n ; ^ fool_v 0
->amh $n[cs=acc] mWN_*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fool_v $a $n ; ^ fool_v 0
->amh $a[cs=acc] $n laC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fool_v $n ; ^ fool_v 0
->amh $n[cs=acc] laC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** force_v $a $n ; ^ force_v 0
->amh $a[cs=acc] $n gdd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** force_v $n ; ^ force_v 0
->amh $n[cs=acc] gdd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forget_v $a $n ; ^ forget_v 0
->amh $a[cs=acc] $n zng'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forget_v $n ; ^ forget_v 0
->amh $n[cs=acc] zng'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forget_v $a $n ; ^ forget_v 0
->amh $a[cs=acc] $n rs'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forget_v $n ; ^ forget_v 0
->amh $n[cs=acc] rs'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forgive_v $a $n ; ^ forgive_v 0
->amh $a[cs=acc] $n m'r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forgive_v $n ; ^ forgive_v 0
->amh $n[cs=acc] m'r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forsake_v $a $n ; ^ forsake_v 0
->amh $a[cs=acc] $n k'd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** forsake_v $n ; ^ forsake_v 0
->amh $n[cs=acc] k'd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fortify_v $a $n ; ^ fortify_v 0
->amh $a[cs=acc] $n Tnkr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fortify_v $n ; ^ fortify_v 0
->amh $n[cs=acc] Tnkr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** foster_v $a $n ; ^ foster_v 0
->amh $a[cs=acc] $n 'dg_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** foster_v $n ; ^ foster_v 0
->amh $n[cs=acc] 'dg_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** found_v $a $n ; ^ found_v 0
->amh $a[cs=acc] $n msrt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** found_v $n ; ^ found_v 0
->amh $n[cs=acc] msrt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frequent_v $a $n ; ^ frequent_v 0
->amh $a[cs=acc] $n zwtr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frequent_v $n ; ^ frequent_v 0
->amh $n[cs=acc] zwtr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $a $n ; ^ frighten_v 0
->amh $a[cs=acc] $n fr'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $n ; ^ frighten_v 0
->amh $n[cs=acc] fr'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $a $n ; ^ frighten_v 0
->amh $a[cs=acc] $n dngT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $n ; ^ frighten_v 0
->amh $n[cs=acc] dngT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $a $n ; ^ frighten_v 0
->amh $a[cs=acc] $n brgg_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $n ; ^ frighten_v 0
->amh $n[cs=acc] brgg_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $a $n ; ^ frighten_v 0
->amh $a[cs=acc] $n r'd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $n ; ^ frighten_v 0
->amh $n[cs=acc] r'd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $a $n ; ^ frighten_v 0
->amh $a[cs=acc] $n dnbr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frighten_v $n ; ^ frighten_v 0
->amh $n[cs=acc] dnbr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frustrate_v $a $n ; ^ frustrate_v 0
->amh $a[cs=acc] $n nTb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** frustrate_v $n ; ^ frustrate_v 0
->amh $n[cs=acc] nTb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fry_v $a $n ; ^ fry_v 0
->amh $a[cs=acc] $n Tbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fry_v $n ; ^ fry_v 0
->amh $n[cs=acc] Tbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fuel_v $a $n ; ^ fuel_v 0
->amh $a[cs=acc] $n magd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fuel_v $n ; ^ fuel_v 0
->amh $n[cs=acc] magd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fumigate_v $a $n ; ^ fumigate_v 0
->amh $a[cs=acc] $n 'Tn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** fumigate_v $n ; ^ fumigate_v 0
->amh $n[cs=acc] 'Tn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gabble_v $a $n ; ^ gabble_v 0
->amh $a[cs=acc] $n qbajr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gabble_v $n ; ^ gabble_v 0
->amh $n[cs=acc] qbajr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gash_v $a $n ; ^ gash_v 0
->amh $a[cs=acc] $n xrkt_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gash_v $n ; ^ gash_v 0
->amh $n[cs=acc] xrkt_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $a $n ; ^ gather_v 0
->amh $a[cs=acc] $n kmac*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $n ; ^ gather_v 0
->amh $n[cs=acc] kmac*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $a $n ; ^ gather_v 0
->amh $a[cs=acc] $n lqq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $n ; ^ gather_v 0
->amh $n[cs=acc] lqq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $a $n ; ^ gather_v 0
->amh $a[cs=acc] $n kmac*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $n ; ^ gather_v 0
->amh $n[cs=acc] kmac*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $a $n ; ^ gather_v 0
->amh $a[cs=acc] $n Trqm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $n ; ^ gather_v 0
->amh $n[cs=acc] Trqm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $a $n ; ^ gather_v 0
->amh $a[cs=acc] $n sbsb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $n ; ^ gather_v 0
->amh $n[cs=acc] sbsb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $a $n ; ^ gather_v 0
->amh $a[cs=acc] $n lqm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $n ; ^ gather_v 0
->amh $n[cs=acc] lqm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $a $n ; ^ gather_v 0
->amh $a[cs=acc] $n kt_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gather_v $n ; ^ gather_v 0
->amh $n[cs=acc] kt_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** generate_v $a $n ; ^ generate_v 0
->amh $a[cs=acc] $n flq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** generate_v $n ; ^ generate_v 0
->amh $n[cs=acc] flq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** germinate_v $a $n ; ^ germinate_v 0
->amh $a[cs=acc] $n gWnqWl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** germinate_v $n ; ^ germinate_v 0
->amh $n[cs=acc] gWnqWl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** germinate_v $a $n ; ^ germinate_v 0
->amh $a[cs=acc] $n bql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** germinate_v $n ; ^ germinate_v 0
->amh $n[cs=acc] bql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** germinate_v $a $n ; ^ germinate_v 0
->amh $a[cs=acc] $n gWnqWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** germinate_v $n ; ^ germinate_v 0
->amh $n[cs=acc] gWnqWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $a $n ; ^ give_v 0
->amh $a[cs=acc] $n Z|gWdgWd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $n ; ^ give_v 0
->amh $n[cs=acc] Z|gWdgWd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $a $n ; ^ give_v 0
->amh $a[cs=acc] $n Cm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $n ; ^ give_v 0
->amh $n[cs=acc] Cm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $a $n ; ^ give_v 0
->amh $a[cs=acc] $n mTwt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $n ; ^ give_v 0
->amh $n[cs=acc] mTwt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $a $n ; ^ give_v 0
->amh $a[cs=acc] $n naN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $n ; ^ give_v 0
->amh $n[cs=acc] naN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $a $n ; ^ give_v 0
->amh $a[cs=acc] $n sT*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** give_v $n ; ^ give_v 0
->amh $n[cs=acc] sT*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glare_v $a $n ; ^ glare_v 0
->amh $a[cs=acc] $n T|brbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glare_v $n ; ^ glare_v 0
->amh $n[cs=acc] T|brbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glare_v $a $n ; ^ glare_v 0
->amh $a[cs=acc] $n n|Sbarq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glare_v $n ; ^ glare_v 0
->amh $n[cs=acc] n|Sbarq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glean_v $a $n ; ^ glean_v 0
->amh $a[cs=acc] $n marr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glean_v $n ; ^ glean_v 0
->amh $n[cs=acc] marr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glean_v $a $n ; ^ glean_v 0
->amh $a[cs=acc] $n qarm_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glean_v $n ; ^ glean_v 0
->amh $n[cs=acc] qarm_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glue_v $a $n ; ^ glue_v 0
->amh $a[cs=acc] $n Tbq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** glue_v $n ; ^ glue_v 0
->amh $n[cs=acc] Tbq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gnash_v $a $n ; ^ gnash_v 0
->amh $a[cs=acc] $n fC*_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gnash_v $n ; ^ gnash_v 0
->amh $n[cs=acc] fC*_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gore_v $a $n ; ^ gore_v 0
->amh $a[cs=acc] $n wg'_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gore_v $n ; ^ gore_v 0
->amh $n[cs=acc] wg'_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $a $n ; ^ grab_v 0
->amh $a[cs=acc] $n Cb_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $n ; ^ grab_v 0
->amh $n[cs=acc] Cb_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $a $n ; ^ grab_v 0
->amh $a[cs=acc] $n qm_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $n ; ^ grab_v 0
->amh $n[cs=acc] qm_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $a $n ; ^ grab_v 0
->amh $a[cs=acc] $n mntf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $n ; ^ grab_v 0
->amh $n[cs=acc] mntf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $a $n ; ^ grab_v 0
->amh $a[cs=acc] $n Cmdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $n ; ^ grab_v 0
->amh $n[cs=acc] Cmdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $a $n ; ^ grab_v 0
->amh $a[cs=acc] $n mnCq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $n ; ^ grab_v 0
->amh $n[cs=acc] mnCq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $a $n ; ^ grab_v 0
->amh $a[cs=acc] $n mWClf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $n ; ^ grab_v 0
->amh $n[cs=acc] mWClf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $a $n ; ^ grab_v 0
->amh $a[cs=acc] $n CbWd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grab_v $n ; ^ grab_v 0
->amh $n[cs=acc] CbWd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graft_v $a $n ; ^ graft_v 0
->amh $a[cs=acc] $n gr_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graft_v $n ; ^ graft_v 0
->amh $n[cs=acc] gr_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grasp_v $a $n ; ^ grasp_v 0
->amh $a[cs=acc] $n Cb_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grasp_v $n ; ^ grasp_v 0
->amh $n[cs=acc] Cb_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grasp_v $a $n ; ^ grasp_v 0
->amh $a[cs=acc] $n y'z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grasp_v $n ; ^ grasp_v 0
->amh $n[cs=acc] y'z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grate_v $a $n ; ^ grate_v 0
->amh $a[cs=acc] $n sqTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grate_v $n ; ^ grate_v 0
->amh $n[cs=acc] sqTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $a $n ; ^ graze_v 0
->amh $a[cs=acc] $n g'T_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $n ; ^ graze_v 0
->amh $n[cs=acc] g'T_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $a $n ; ^ graze_v 0
->amh $a[cs=acc] $n g'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $n ; ^ graze_v 0
->amh $n[cs=acc] g'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $a $n ; ^ graze_v 0
->amh $a[cs=acc] $n lqm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $n ; ^ graze_v 0
->amh $n[cs=acc] lqm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $a $n ; ^ graze_v 0
->amh $a[cs=acc] $n xkW_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** graze_v $n ; ^ graze_v 0
->amh $n[cs=acc] xkW_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grease_v $a $n ; ^ grease_v 0
->amh $a[cs=acc] $n 's_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grease_v $n ; ^ grease_v 0
->amh $n[cs=acc] 's_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** greet_v $a $n ; ^ greet_v 0
->amh $a[cs=acc] $n slm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** greet_v $n ; ^ greet_v 0
->amh $n[cs=acc] slm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** greet_v $a $n ; ^ greet_v 0
->amh $a[cs=acc] $n zy_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** greet_v $n ; ^ greet_v 0
->amh $n[cs=acc] zy_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grill_v $a $n ; ^ grill_v 0
->amh $a[cs=acc] $n Tbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grill_v $n ; ^ grill_v 0
->amh $n[cs=acc] Tbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grind_v $a $n ; ^ grind_v 0
->amh $a[cs=acc] $n fC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grind_v $n ; ^ grind_v 0
->amh $n[cs=acc] fC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grind_v $a $n ; ^ grind_v 0
->amh $a[cs=acc] $n kk_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grind_v $n ; ^ grind_v 0
->amh $n[cs=acc] kk_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grind_v $a $n ; ^ grind_v 0
->amh $a[cs=acc] $n qWrTm_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grind_v $n ; ^ grind_v 0
->amh $n[cs=acc] qWrTm_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grip_v $a $n ; ^ grip_v 0
->amh $a[cs=acc] $n sq_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grip_v $n ; ^ grip_v 0
->amh $n[cs=acc] sq_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $a $n ; ^ groan_v 0
->amh $a[cs=acc] $n gWagWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $n ; ^ groan_v 0
->amh $n[cs=acc] gWagWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $a $n ; ^ groan_v 0
->amh $a[cs=acc] $n gWr'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $n ; ^ groan_v 0
->amh $n[cs=acc] gWr'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $a $n ; ^ groan_v 0
->amh $a[cs=acc] $n gWr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $n ; ^ groan_v 0
->amh $n[cs=acc] gWr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $a $n ; ^ groan_v 0
->amh $a[cs=acc] $n qs_t_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** groan_v $n ; ^ groan_v 0
->amh $n[cs=acc] qs_t_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grope_v $a $n ; ^ grope_v 0
->amh $a[cs=acc] $n dabs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grope_v $n ; ^ grope_v 0
->amh $n[cs=acc] dabs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ground_v $a $n ; ^ ground_v 0
->amh $a[cs=acc] $n dqW_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ground_v $n ; ^ ground_v 0
->amh $n[cs=acc] dqW_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grow_v $a $n ; ^ grow_v 0
->amh $a[cs=acc] $n zr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grow_v $n ; ^ grow_v 0
->amh $n[cs=acc] zr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grow_v $a $n ; ^ grow_v 0
->amh $a[cs=acc] $n bql_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grow_v $n ; ^ grow_v 0
->amh $n[cs=acc] bql_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grow_v $a $n ; ^ grow_v 0
->amh $a[cs=acc] $n gnn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grow_v $n ; ^ grow_v 0
->amh $n[cs=acc] gnn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grumble_v $a $n ; ^ grumble_v 0
->amh $a[cs=acc] $n l|gWmgWm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grumble_v $n ; ^ grumble_v 0
->amh $n[cs=acc] l|gWmgWm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grumble_v $a $n ; ^ grumble_v 0
->amh $a[cs=acc] $n n|gWragWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grumble_v $n ; ^ grumble_v 0
->amh $n[cs=acc] n|gWragWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grumble_v $a $n ; ^ grumble_v 0
->amh $a[cs=acc] $n gW|rmrm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grumble_v $n ; ^ grumble_v 0
->amh $n[cs=acc] gW|rmrm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grunt_v $a $n ; ^ grunt_v 0
->amh $a[cs=acc] $n gW|rmrm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** grunt_v $n ; ^ grunt_v 0
->amh $n[cs=acc] gW|rmrm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** guarantee_v $a $n ; ^ guarantee_v 0
->amh $a[cs=acc] $n 'lf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** guarantee_v $n ; ^ guarantee_v 0
->amh $n[cs=acc] 'lf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** guide_v $a $n ; ^ guide_v 0
->amh $a[cs=acc] $n gWbN*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** guide_v $n ; ^ guide_v 0
->amh $n[cs=acc] gWbN*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gulp_v $a $n ; ^ gulp_v 0
->amh $a[cs=acc] $n w'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gulp_v $n ; ^ gulp_v 0
->amh $n[cs=acc] w'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gulp_v $a $n ; ^ gulp_v 0
->amh $a[cs=acc] $n gsr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** gulp_v $n ; ^ gulp_v 0
->amh $n[cs=acc] gsr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** guzzle_v $a $n ; ^ guzzle_v 0
->amh $a[cs=acc] $n l'f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** guzzle_v $n ; ^ guzzle_v 0
->amh $n[cs=acc] l'f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hack_v $a $n ; ^ hack_v 0
->amh $a[cs=acc] $n gmdl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hack_v $n ; ^ hack_v 0
->amh $n[cs=acc] gmdl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** halt_v $a $n ; ^ halt_v 0
->amh $a[cs=acc] $n qwm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** halt_v $n ; ^ halt_v 0
->amh $n[cs=acc] qwm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hammer_v $a $n ; ^ hammer_v 0
->amh $a[cs=acc] $n qTqT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hammer_v $n ; ^ hammer_v 0
->amh $n[cs=acc] qTqT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hammer_v $a $n ; ^ hammer_v 0
->amh $a[cs=acc] $n qWrqWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hammer_v $n ; ^ hammer_v 0
->amh $n[cs=acc] qWrqWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hang_v $a $n ; ^ hang_v 0
->amh $a[cs=acc] $n sql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hang_v $n ; ^ hang_v 0
->amh $n[cs=acc] sql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harbour_v $a $n ; ^ harbour_v 0
->amh $a[cs=acc] $n xx*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harbour_v $n ; ^ harbour_v 0
->amh $n[cs=acc] xx*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harbour_v $a $n ; ^ harbour_v 0
->amh $a[cs=acc] $n Tg'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harbour_v $n ; ^ harbour_v 0
->amh $n[cs=acc] Tg'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $a $n ; ^ harden_v 0
->amh $a[cs=acc] $n TT_r_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $n ; ^ harden_v 0
->amh $n[cs=acc] TT_r_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $a $n ; ^ harden_v 0
->amh $a[cs=acc] $n Tn'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $n ; ^ harden_v 0
->amh $n[cs=acc] Tn'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $a $n ; ^ harden_v 0
->amh $a[cs=acc] $n TT_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $n ; ^ harden_v 0
->amh $n[cs=acc] TT_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $a $n ; ^ harden_v 0
->amh $a[cs=acc] $n dd_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harden_v $n ; ^ harden_v 0
->amh $n[cs=acc] dd_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harm_v $a $n ; ^ harm_v 0
->amh $a[cs=acc] $n gWd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harm_v $n ; ^ harm_v 0
->amh $n[cs=acc] gWd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harness_v $a $n ; ^ harness_v 0
->amh $a[cs=acc] $n kt_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harness_v $n ; ^ harness_v 0
->amh $n[cs=acc] kt_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harrow_v $a $n ; ^ harrow_v 0
->amh $a[cs=acc] $n ksks_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harrow_v $n ; ^ harrow_v 0
->amh $n[cs=acc] ksks_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harvest_v $a $n ; ^ harvest_v 0
->amh $a[cs=acc] $n sbsb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harvest_v $n ; ^ harvest_v 0
->amh $n[cs=acc] sbsb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harvest_v $a $n ; ^ harvest_v 0
->amh $a[cs=acc] $n mrt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** harvest_v $n ; ^ harvest_v 0
->amh $n[cs=acc] mrt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hasten_v $a $n ; ^ hasten_v 0
->amh $a[cs=acc] $n Tdf_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hasten_v $n ; ^ hasten_v 0
->amh $n[cs=acc] Tdf_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hasten_v $a $n ; ^ hasten_v 0
->amh $a[cs=acc] $n ckW_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hasten_v $n ; ^ hasten_v 0
->amh $n[cs=acc] ckW_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hasten_v $a $n ; ^ hasten_v 0
->amh $a[cs=acc] $n fTn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hasten_v $n ; ^ hasten_v 0
->amh $n[cs=acc] fTn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hatch_v $a $n ; ^ hatch_v 0
->amh $a[cs=acc] $n flfl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hatch_v $n ; ^ hatch_v 0
->amh $n[cs=acc] flfl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hatch_v $a $n ; ^ hatch_v 0
->amh $a[cs=acc] $n qfqf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hatch_v $n ; ^ hatch_v 0
->amh $n[cs=acc] qfqf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hate_v $a $n ; ^ hate_v 0
->amh $a[cs=acc] $n Tl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hate_v $n ; ^ hate_v 0
->amh $n[cs=acc] Tl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** haul_v $a $n ; ^ haul_v 0
->amh $a[cs=acc] $n qd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** haul_v $n ; ^ haul_v 0
->amh $n[cs=acc] qd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heal_v $a $n ; ^ heal_v 0
->amh $a[cs=acc] $n fw_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heal_v $n ; ^ heal_v 0
->amh $n[cs=acc] fw_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heal_v $a $n ; ^ heal_v 0
->amh $a[cs=acc] $n d'n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heal_v $n ; ^ heal_v 0
->amh $n[cs=acc] d'n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heap_v $a $n ; ^ heap_v 0
->amh $a[cs=acc] $n qWl_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heap_v $n ; ^ heap_v 0
->amh $n[cs=acc] qWl_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hear_v $a $n ; ^ hear_v 0
->amh $a[cs=acc] $n sm'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hear_v $n ; ^ hear_v 0
->amh $n[cs=acc] sm'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heat_v $a $n ; ^ heat_v 0
->amh $a[cs=acc] $n g'l_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** heat_v $n ; ^ heat_v 0
->amh $n[cs=acc] g'l_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** help_v $a $n ; ^ help_v 0
->amh $a[cs=acc] $n rd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** help_v $n ; ^ help_v 0
->amh $n[cs=acc] rd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** help_v $a $n ; ^ help_v 0
->amh $a[cs=acc] $n 'g_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** help_v $n ; ^ help_v 0
->amh $n[cs=acc] 'g_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** herald_v $a $n ; ^ herald_v 0
->amh $a[cs=acc] $n bsr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** herald_v $n ; ^ herald_v 0
->amh $n[cs=acc] bsr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** herald_v $a $n ; ^ herald_v 0
->amh $a[cs=acc] $n lf_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** herald_v $n ; ^ herald_v 0
->amh $n[cs=acc] lf_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hide_v $a $n ; ^ hide_v 0
->amh $a[cs=acc] $n db_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hide_v $n ; ^ hide_v 0
->amh $n[cs=acc] db_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hide_v $a $n ; ^ hide_v 0
->amh $a[cs=acc] $n xx_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hide_v $n ; ^ hide_v 0
->amh $n[cs=acc] xx_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hide_v $a $n ; ^ hide_v 0
->amh $a[cs=acc] $n sw_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hide_v $n ; ^ hide_v 0
->amh $n[cs=acc] sw_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hijack_v $a $n ; ^ hijack_v 0
->amh $a[cs=acc] $n Tlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hijack_v $n ; ^ hijack_v 0
->amh $n[cs=acc] Tlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n 'gW_l_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] 'gW_l_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n 'g_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] 'g_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n wlakf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] wlakf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n nTb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] nTb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n klkl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] klkl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n Cngf_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] Cngf_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n CngWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] CngWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $a $n ; ^ hinder_v 0
->amh $a[cs=acc] $n snkl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hinder_v $n ; ^ hinder_v 0
->amh $n[cs=acc] snkl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hint_v $a $n ; ^ hint_v 0
->amh $a[cs=acc] $n 'kk_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hint_v $n ; ^ hint_v 0
->amh $n[cs=acc] 'kk_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $a $n ; ^ hit_v 0
->amh $a[cs=acc] $n Zl_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $n ; ^ hit_v 0
->amh $n[cs=acc] Zl_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $a $n ; ^ hit_v 0
->amh $a[cs=acc] $n mt'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $n ; ^ hit_v 0
->amh $n[cs=acc] mt'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $a $n ; ^ hit_v 0
->amh $a[cs=acc] $n Tl_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $n ; ^ hit_v 0
->amh $n[cs=acc] Tl_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $a $n ; ^ hit_v 0
->amh $a[cs=acc] $n ql'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hit_v $n ; ^ hit_v 0
->amh $n[cs=acc] ql'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $a $n ; ^ hobble_v 0
->amh $a[cs=acc] $n qy_d_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $n ; ^ hobble_v 0
->amh $n[cs=acc] qy_d_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $a $n ; ^ hobble_v 0
->amh $a[cs=acc] $n qy_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $n ; ^ hobble_v 0
->amh $n[cs=acc] qy_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $a $n ; ^ hobble_v 0
->amh $a[cs=acc] $n xnkf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $n ; ^ hobble_v 0
->amh $n[cs=acc] xnkf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $a $n ; ^ hobble_v 0
->amh $a[cs=acc] $n snkl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hobble_v $n ; ^ hobble_v 0
->amh $n[cs=acc] snkl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hold_v $a $n ; ^ hold_v 0
->amh $a[cs=acc] $n y'z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hold_v $n ; ^ hold_v 0
->amh $n[cs=acc] y'z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** honour_v $a $n ; ^ honour_v 0
->amh $a[cs=acc] $n kbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** honour_v $n ; ^ honour_v 0
->amh $n[cs=acc] kbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** horrify_v $a $n ; ^ horrify_v 0
->amh $a[cs=acc] $n sq_q_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** horrify_v $n ; ^ horrify_v 0
->amh $n[cs=acc] sq_q_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** horrify_v $a $n ; ^ horrify_v 0
->amh $a[cs=acc] $n sq_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** horrify_v $n ; ^ horrify_v 0
->amh $n[cs=acc] sq_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hound_v $a $n ; ^ hound_v 0
->amh $a[cs=acc] $n wkb_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hound_v $n ; ^ hound_v 0
->amh $n[cs=acc] wkb_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** huddle_v $a $n ; ^ huddle_v 0
->amh $a[cs=acc] $n 'gW_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** huddle_v $n ; ^ huddle_v 0
->amh $n[cs=acc] 'gW_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hum_v $a $n ; ^ hum_v 0
->amh $a[cs=acc] $n n|gWragWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hum_v $n ; ^ hum_v 0
->amh $n[cs=acc] n|gWragWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** humiliate_v $a $n ; ^ humiliate_v 0
->amh $a[cs=acc] $n wrd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** humiliate_v $n ; ^ humiliate_v 0
->amh $n[cs=acc] wrd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** humiliate_v $a $n ; ^ humiliate_v 0
->amh $a[cs=acc] $n 'fr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** humiliate_v $n ; ^ humiliate_v 0
->amh $n[cs=acc] 'fr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hunt_v $a $n ; ^ hunt_v 0
->amh $a[cs=acc] $n 'd_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hunt_v $n ; ^ hunt_v 0
->amh $n[cs=acc] 'd_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $a $n ; ^ hurry_v 0
->amh $a[cs=acc] $n q|lblb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $n ; ^ hurry_v 0
->amh $n[cs=acc] q|lblb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $a $n ; ^ hurry_v 0
->amh $a[cs=acc] $n gsgs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $n ; ^ hurry_v 0
->amh $n[cs=acc] gsgs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $a $n ; ^ hurry_v 0
->amh $a[cs=acc] $n Tdf_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $n ; ^ hurry_v 0
->amh $n[cs=acc] Tdf_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $a $n ; ^ hurry_v 0
->amh $a[cs=acc] $n fTn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurry_v $n ; ^ hurry_v 0
->amh $n[cs=acc] fTn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurt_v $a $n ; ^ hurt_v 0
->amh $a[cs=acc] $n 'mm_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurt_v $n ; ^ hurt_v 0
->amh $n[cs=acc] 'mm_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurt_v $a $n ; ^ hurt_v 0
->amh $a[cs=acc] $n gWd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hurt_v $n ; ^ hurt_v 0
->amh $n[cs=acc] gWd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hustle_v $a $n ; ^ hustle_v 0
->amh $a[cs=acc] $n k|lflf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hustle_v $n ; ^ hustle_v 0
->amh $n[cs=acc] k|lflf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hustle_v $a $n ; ^ hustle_v 0
->amh $a[cs=acc] $n klb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** hustle_v $n ; ^ hustle_v 0
->amh $n[cs=acc] klb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** identify_v $a $n ; ^ identify_v 0
->amh $a[cs=acc] $n ly_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** identify_v $n ; ^ identify_v 0
->amh $n[cs=acc] ly_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ignite_v $a $n ; ^ ignite_v 0
->amh $a[cs=acc] $n lkW_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ignite_v $n ; ^ ignite_v 0
->amh $n[cs=acc] lkW_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ignore_v $a $n ; ^ ignore_v 0
->amh $a[cs=acc] $n gx_x_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ignore_v $n ; ^ ignore_v 0
->amh $n[cs=acc] gx_x_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ignore_v $a $n ; ^ ignore_v 0
->amh $a[cs=acc] $n n'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ignore_v $n ; ^ ignore_v 0
->amh $n[cs=acc] n'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impale_v $a $n ; ^ impale_v 0
->amh $a[cs=acc] $n sk_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impale_v $n ; ^ impale_v 0
->amh $n[cs=acc] sk_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impart_v $a $n ; ^ impart_v 0
->amh $a[cs=acc] $n kfl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impart_v $n ; ^ impart_v 0
->amh $n[cs=acc] kfl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impede_v $a $n ; ^ impede_v 0
->amh $a[cs=acc] $n klkl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impede_v $n ; ^ impede_v 0
->amh $n[cs=acc] klkl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** implicate_v $a $n ; ^ implicate_v 0
->amh $a[cs=acc] $n bk_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** implicate_v $n ; ^ implicate_v 0
->amh $n[cs=acc] bk_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** implore_v $a $n ; ^ implore_v 0
->amh $a[cs=acc] $n mall_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** implore_v $n ; ^ implore_v 0
->amh $n[cs=acc] mall_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** implore_v $a $n ; ^ implore_v 0
->amh $a[cs=acc] $n lm_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** implore_v $n ; ^ implore_v 0
->amh $n[cs=acc] lm_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** importune_v $a $n ; ^ importune_v 0
->amh $a[cs=acc] $n mnck_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** importune_v $n ; ^ importune_v 0
->amh $n[cs=acc] mnck_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** importune_v $a $n ; ^ importune_v 0
->amh $a[cs=acc] $n wtwt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** importune_v $n ; ^ importune_v 0
->amh $n[cs=acc] wtwt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impound_v $a $n ; ^ impound_v 0
->amh $a[cs=acc] $n y'z_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impound_v $n ; ^ impound_v 0
->amh $n[cs=acc] y'z_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impoverish_v $a $n ; ^ impoverish_v 0
->amh $a[cs=acc] $n dxy*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impoverish_v $n ; ^ impoverish_v 0
->amh $n[cs=acc] dxy*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impregnate_v $a $n ; ^ impregnate_v 0
->amh $a[cs=acc] $n rgz_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impregnate_v $n ; ^ impregnate_v 0
->amh $n[cs=acc] rgz_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impress_v $a $n ; ^ impress_v 0
->amh $a[cs=acc] $n grm_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** impress_v $n ; ^ impress_v 0
->amh $n[cs=acc] grm_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** imprison_v $a $n ; ^ imprison_v 0
->amh $a[cs=acc] $n 'sr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** imprison_v $n ; ^ imprison_v 0
->amh $n[cs=acc] 'sr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** improve_v $a $n ; ^ improve_v 0
->amh $a[cs=acc] $n x'l_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** improve_v $n ; ^ improve_v 0
->amh $n[cs=acc] x'l_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** improve_v $a $n ; ^ improve_v 0
->amh $a[cs=acc] $n x'l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** improve_v $n ; ^ improve_v 0
->amh $n[cs=acc] x'l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inaugurate_v $a $n ; ^ inaugurate_v 0
->amh $a[cs=acc] $n mr_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inaugurate_v $n ; ^ inaugurate_v 0
->amh $n[cs=acc] mr_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incline_v $a $n ; ^ incline_v 0
->amh $a[cs=acc] $n znbl_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incline_v $n ; ^ incline_v 0
->amh $n[cs=acc] znbl_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incline_v $a $n ; ^ incline_v 0
->amh $a[cs=acc] $n zmm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incline_v $n ; ^ incline_v 0
->amh $n[cs=acc] zmm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incline_v $a $n ; ^ incline_v 0
->amh $a[cs=acc] $n zmm_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incline_v $n ; ^ incline_v 0
->amh $n[cs=acc] zmm_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** increase_v $a $n ; ^ increase_v 0
->amh $a[cs=acc] $n bz'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** increase_v $n ; ^ increase_v 0
->amh $n[cs=acc] bz'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** increase_v $a $n ; ^ increase_v 0
->amh $a[cs=acc] $n f'f'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** increase_v $n ; ^ increase_v 0
->amh $n[cs=acc] f'f'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** increase_v $a $n ; ^ increase_v 0
->amh $a[cs=acc] $n blT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** increase_v $n ; ^ increase_v 0
->amh $n[cs=acc] blT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incriminate_v $a $n ; ^ incriminate_v 0
->amh $a[cs=acc] $n wnjl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** incriminate_v $n ; ^ incriminate_v 0
->amh $n[cs=acc] wnjl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** indemnify_v $a $n ; ^ indemnify_v 0
->amh $a[cs=acc] $n k's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** indemnify_v $n ; ^ indemnify_v 0
->amh $n[cs=acc] k's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** indulge_v $a $n ; ^ indulge_v 0
->amh $a[cs=acc] $n n|dlaqq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** indulge_v $n ; ^ indulge_v 0
->amh $n[cs=acc] n|dlaqq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infect_v $a $n ; ^ infect_v 0
->amh $a[cs=acc] $n mWqmWq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infect_v $n ; ^ infect_v 0
->amh $n[cs=acc] mWqmWq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infest_v $a $n ; ^ infest_v 0
->amh $a[cs=acc] $n wrr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infest_v $n ; ^ infest_v 0
->amh $n[cs=acc] wrr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infiltrate_v $a $n ; ^ infiltrate_v 0
->amh $a[cs=acc] $n br_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infiltrate_v $n ; ^ infiltrate_v 0
->amh $n[cs=acc] br_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inflate_v $a $n ; ^ inflate_v 0
->amh $a[cs=acc] $n qt_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inflate_v $n ; ^ inflate_v 0
->amh $n[cs=acc] qt_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inflate_v $a $n ; ^ inflate_v 0
->amh $a[cs=acc] $n n'r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inflate_v $n ; ^ inflate_v 0
->amh $n[cs=acc] n'r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inflict_v $a $n ; ^ inflict_v 0
->amh $a[cs=acc] $n ktkt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inflict_v $n ; ^ inflict_v 0
->amh $n[cs=acc] ktkt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inform_v $a $n ; ^ inform_v 0
->amh $a[cs=acc] $n 'wq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inform_v $n ; ^ inform_v 0
->amh $n[cs=acc] 'wq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inform_v $a $n ; ^ inform_v 0
->amh $a[cs=acc] $n wr'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inform_v $n ; ^ inform_v 0
->amh $n[cs=acc] wr'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inform_v $a $n ; ^ inform_v 0
->amh $a[cs=acc] $n 'wq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inform_v $n ; ^ inform_v 0
->amh $n[cs=acc] 'wq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infuriate_v $a $n ; ^ infuriate_v 0
->amh $a[cs=acc] $n db_n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** infuriate_v $n ; ^ infuriate_v 0
->amh $n[cs=acc] db_n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inherit_v $a $n ; ^ inherit_v 0
->amh $a[cs=acc] $n wrs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inherit_v $n ; ^ inherit_v 0
->amh $n[cs=acc] wrs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** initiate_v $a $n ; ^ initiate_v 0
->amh $a[cs=acc] $n ns'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** initiate_v $n ; ^ initiate_v 0
->amh $n[cs=acc] ns'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** injure_v $a $n ; ^ injure_v 0
->amh $a[cs=acc] $n gWd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** injure_v $n ; ^ injure_v 0
->amh $n[cs=acc] gWd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inquire_v $a $n ; ^ inquire_v 0
->amh $a[cs=acc] $n Ty_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inquire_v $n ; ^ inquire_v 0
->amh $n[cs=acc] Ty_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $a $n ; ^ insert_v 0
->amh $a[cs=acc] $n gb'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $n ; ^ insert_v 0
->amh $n[cs=acc] gb'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $a $n ; ^ insert_v 0
->amh $a[cs=acc] $n wx_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $n ; ^ insert_v 0
->amh $n[cs=acc] wx_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $a $n ; ^ insert_v 0
->amh $a[cs=acc] $n zrnq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $n ; ^ insert_v 0
->amh $n[cs=acc] zrnq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $a $n ; ^ insert_v 0
->amh $a[cs=acc] $n dwl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $n ; ^ insert_v 0
->amh $n[cs=acc] dwl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $a $n ; ^ insert_v 0
->amh $a[cs=acc] $n gb'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insert_v $n ; ^ insert_v 0
->amh $n[cs=acc] gb'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inspect_v $a $n ; ^ inspect_v 0
->amh $a[cs=acc] $n gWbN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inspect_v $n ; ^ inspect_v 0
->amh $n[cs=acc] gWbN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inspire_v $a $n ; ^ inspire_v 0
->amh $a[cs=acc] $n xn_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** inspire_v $n ; ^ inspire_v 0
->amh $n[cs=acc] xn_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** instigate_v $a $n ; ^ instigate_v 0
->amh $a[cs=acc] $n g'l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** instigate_v $n ; ^ instigate_v 0
->amh $n[cs=acc] g'l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** instigate_v $a $n ; ^ instigate_v 0
->amh $a[cs=acc] $n gf'_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** instigate_v $n ; ^ instigate_v 0
->amh $n[cs=acc] gf'_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** institute_v $a $n ; ^ institute_v 0
->amh $a[cs=acc] $n dngg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** institute_v $n ; ^ institute_v 0
->amh $n[cs=acc] dngg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** institutionalize_v $a $n ; ^ institutionalize_v 0
->amh $a[cs=acc] $n drj*_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** institutionalize_v $n ; ^ institutionalize_v 0
->amh $n[cs=acc] drj*_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insult_v $a $n ; ^ insult_v 0
->amh $a[cs=acc] $n sdb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** insult_v $n ; ^ insult_v 0
->amh $n[cs=acc] sdb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interchange_v $a $n ; ^ interchange_v 0
->amh $a[cs=acc] $n qy_r_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interchange_v $n ; ^ interchange_v 0
->amh $n[cs=acc] qy_r_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interlock_v $a $n ; ^ interlock_v 0
->amh $a[cs=acc] $n qWl_f_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interlock_v $n ; ^ interlock_v 0
->amh $n[cs=acc] qWl_f_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interlock_v $a $n ; ^ interlock_v 0
->amh $a[cs=acc] $n sk_'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interlock_v $n ; ^ interlock_v 0
->amh $n[cs=acc] sk_'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interpret_v $a $n ; ^ interpret_v 0
->amh $a[cs=acc] $n trgWm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interpret_v $n ; ^ interpret_v 0
->amh $n[cs=acc] trgWm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrogate_v $a $n ; ^ interrogate_v 0
->amh $a[cs=acc] $n lflf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrogate_v $n ; ^ interrogate_v 0
->amh $n[cs=acc] lflf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrupt_v $a $n ; ^ interrupt_v 0
->amh $a[cs=acc] $n 'gW_l_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrupt_v $n ; ^ interrupt_v 0
->amh $n[cs=acc] 'gW_l_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrupt_v $a $n ; ^ interrupt_v 0
->amh $a[cs=acc] $n dnaqf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrupt_v $n ; ^ interrupt_v 0
->amh $n[cs=acc] dnaqf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrupt_v $a $n ; ^ interrupt_v 0
->amh $a[cs=acc] $n qWrT_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** interrupt_v $n ; ^ interrupt_v 0
->amh $n[cs=acc] qWrT_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intertwine_v $a $n ; ^ intertwine_v 0
->amh $a[cs=acc] $n qWl_f_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intertwine_v $n ; ^ intertwine_v 0
->amh $n[cs=acc] qWl_f_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intertwine_v $a $n ; ^ intertwine_v 0
->amh $a[cs=acc] $n qWl_f_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intertwine_v $n ; ^ intertwine_v 0
->amh $n[cs=acc] qWl_f_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intertwine_v $a $n ; ^ intertwine_v 0
->amh $a[cs=acc] $n t't'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intertwine_v $n ; ^ intertwine_v 0
->amh $n[cs=acc] t't'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intoxicate_v $a $n ; ^ intoxicate_v 0
->amh $a[cs=acc] $n skr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intoxicate_v $n ; ^ intoxicate_v 0
->amh $n[cs=acc] skr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intoxicate_v $a $n ; ^ intoxicate_v 0
->amh $a[cs=acc] $n skr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intoxicate_v $n ; ^ intoxicate_v 0
->amh $n[cs=acc] skr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intrigue_v $a $n ; ^ intrigue_v 0
->amh $a[cs=acc] $n dWl_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** intrigue_v $n ; ^ intrigue_v 0
->amh $n[cs=acc] dWl_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** introduce_v $a $n ; ^ introduce_v 0
->amh $a[cs=acc] $n 'wq_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** introduce_v $n ; ^ introduce_v 0
->amh $n[cs=acc] 'wq_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** introduce_v $a $n ; ^ introduce_v 0
->amh $a[cs=acc] $n gb'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** introduce_v $n ; ^ introduce_v 0
->amh $n[cs=acc] gb'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** invade_v $a $n ; ^ invade_v 0
->amh $a[cs=acc] $n wrr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** invade_v $n ; ^ invade_v 0
->amh $n[cs=acc] wrr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** invent_v $a $n ; ^ invent_v 0
->amh $a[cs=acc] $n fTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** invent_v $n ; ^ invent_v 0
->amh $n[cs=acc] fTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** investigate_v $a $n ; ^ investigate_v 0
->amh $a[cs=acc] $n mrmr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** investigate_v $n ; ^ investigate_v 0
->amh $n[cs=acc] mrmr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** irrigate_v $a $n ; ^ irrigate_v 0
->amh $a[cs=acc] $n TT_'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** irrigate_v $n ; ^ irrigate_v 0
->amh $n[cs=acc] TT_'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** itemize_v $a $n ; ^ itemize_v 0
->amh $a[cs=acc] $n zrzr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** itemize_v $n ; ^ itemize_v 0
->amh $n[cs=acc] zrzr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jabber_v $a $n ; ^ jabber_v 0
->amh $a[cs=acc] $n zlabd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jabber_v $n ; ^ jabber_v 0
->amh $n[cs=acc] zlabd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jam_v $a $n ; ^ jam_v 0
->amh $a[cs=acc] $n Tbb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jam_v $n ; ^ jam_v 0
->amh $n[cs=acc] Tbb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jam_v $a $n ; ^ jam_v 0
->amh $a[cs=acc] $n qrqr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jam_v $n ; ^ jam_v 0
->amh $n[cs=acc] qrqr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jerk_v $a $n ; ^ jerk_v 0
->amh $a[cs=acc] $n gWn_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jerk_v $n ; ^ jerk_v 0
->amh $n[cs=acc] gWn_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jingle_v $a $n ; ^ jingle_v 0
->amh $a[cs=acc] $n q|ClCl_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jingle_v $n ; ^ jingle_v 0
->amh $n[cs=acc] q|ClCl_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** join_v $a $n ; ^ join_v 0
->amh $a[cs=acc] $n gTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** join_v $n ; ^ join_v 0
->amh $n[cs=acc] gTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** join_v $a $n ; ^ join_v 0
->amh $a[cs=acc] $n Tm_r_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** join_v $n ; ^ join_v 0
->amh $n[cs=acc] Tm_r_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jolt_v $a $n ; ^ jolt_v 0
->amh $a[cs=acc] $n n|gCagC_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jolt_v $n ; ^ jolt_v 0
->amh $n[cs=acc] n|gCagC_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jostle_v $a $n ; ^ jostle_v 0
->amh $a[cs=acc] $n trams_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jostle_v $n ; ^ jostle_v 0
->amh $n[cs=acc] trams_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jostle_v $a $n ; ^ jostle_v 0
->amh $a[cs=acc] $n trams_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jostle_v $n ; ^ jostle_v 0
->amh $n[cs=acc] trams_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** judge_v $a $n ; ^ judge_v 0
->amh $a[cs=acc] $n frd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** judge_v $n ; ^ judge_v 0
->amh $n[cs=acc] frd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** judge_v $a $n ; ^ judge_v 0
->amh $a[cs=acc] $n daN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** judge_v $n ; ^ judge_v 0
->amh $n[cs=acc] daN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jump_v $a $n ; ^ jump_v 0
->amh $a[cs=acc] $n dnbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jump_v $n ; ^ jump_v 0
->amh $n[cs=acc] dnbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jump_v $a $n ; ^ jump_v 0
->amh $a[cs=acc] $n zll_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** jump_v $n ; ^ jump_v 0
->amh $n[cs=acc] zll_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kick_v $a $n ; ^ kick_v 0
->amh $a[cs=acc] $n rgT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kick_v $n ; ^ kick_v 0
->amh $n[cs=acc] rgT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kidnap_v $a $n ; ^ kidnap_v 0
->amh $a[cs=acc] $n 'f_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kidnap_v $n ; ^ kidnap_v 0
->amh $n[cs=acc] 'f_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kidnap_v $a $n ; ^ kidnap_v 0
->amh $a[cs=acc] $n Tlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kidnap_v $n ; ^ kidnap_v 0
->amh $n[cs=acc] Tlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kill_v $a $n ; ^ kill_v 0
->amh $a[cs=acc] $n gdl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kill_v $n ; ^ kill_v 0
->amh $n[cs=acc] gdl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kindle_v $a $n ; ^ kindle_v 0
->amh $a[cs=acc] $n y'z_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kindle_v $n ; ^ kindle_v 0
->amh $n[cs=acc] y'z_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kiss_v $a $n ; ^ kiss_v 0
->amh $a[cs=acc] $n s'm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** kiss_v $n ; ^ kiss_v 0
->amh $n[cs=acc] s'm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** knock_v $a $n ; ^ knock_v 0
->amh $a[cs=acc] $n gC*_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** knock_v $n ; ^ knock_v 0
->amh $n[cs=acc] gC*_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** know_v $a $n ; ^ know_v 0
->amh $a[cs=acc] $n 'wq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** know_v $n ; ^ know_v 0
->amh $n[cs=acc] 'wq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lack_v $a $n ; ^ lack_v 0
->amh $a[cs=acc] $n cg_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lack_v $n ; ^ lack_v 0
->amh $n[cs=acc] cg_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** laminate_v $a $n ; ^ laminate_v 0
->amh $a[cs=acc] $n dr_b_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** laminate_v $n ; ^ laminate_v 0
->amh $n[cs=acc] dr_b_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** land_v $a $n ; ^ land_v 0
->amh $a[cs=acc] $n 'rf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** land_v $n ; ^ land_v 0
->amh $n[cs=acc] 'rf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** land_v $a $n ; ^ land_v 0
->amh $a[cs=acc] $n 'rf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** land_v $n ; ^ land_v 0
->amh $n[cs=acc] 'rf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lash_v $a $n ; ^ lash_v 0
->amh $a[cs=acc] $n xnqWT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lash_v $n ; ^ lash_v 0
->amh $n[cs=acc] xnqWT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lash_v $a $n ; ^ lash_v 0
->amh $a[cs=acc] $n qWndd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lash_v $n ; ^ lash_v 0
->amh $n[cs=acc] qWndd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lather_v $a $n ; ^ lather_v 0
->amh $a[cs=acc] $n gWrf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lather_v $n ; ^ lather_v 0
->amh $n[cs=acc] gWrf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** laugh_v $a $n ; ^ laugh_v 0
->amh $a[cs=acc] $n s'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** laugh_v $n ; ^ laugh_v 0
->amh $n[cs=acc] s'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** launch_v $a $n ; ^ launch_v 0
->amh $a[cs=acc] $n mTq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** launch_v $n ; ^ launch_v 0
->amh $n[cs=acc] mTq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lay_v $a $n ; ^ lay_v 0
->amh $a[cs=acc] $n rbrb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lay_v $n ; ^ lay_v 0
->amh $n[cs=acc] rbrb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lead_v $a $n ; ^ lead_v 0
->amh $a[cs=acc] $n mr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lead_v $n ; ^ lead_v 0
->amh $n[cs=acc] mr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** leak_v $a $n ; ^ leak_v 0
->amh $a[cs=acc] $n fss_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** leak_v $n ; ^ leak_v 0
->amh $n[cs=acc] fss_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lean_v $a $n ; ^ lean_v 0
->amh $a[cs=acc] $n 'kk_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lean_v $n ; ^ lean_v 0
->amh $n[cs=acc] 'kk_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** leap_v $a $n ; ^ leap_v 0
->amh $a[cs=acc] $n zll_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** leap_v $n ; ^ leap_v 0
->amh $n[cs=acc] zll_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lease_v $a $n ; ^ lease_v 0
->amh $a[cs=acc] $n gz'_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lease_v $n ; ^ lease_v 0
->amh $n[cs=acc] gz'_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** leave_v $a $n ; ^ leave_v 0
->amh $a[cs=acc] $n tw_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** leave_v $n ; ^ leave_v 0
->amh $n[cs=acc] tw_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lend_v $a $n ; ^ lend_v 0
->amh $a[cs=acc] $n w's_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lend_v $n ; ^ lend_v 0
->amh $n[cs=acc] w's_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lend_v $a $n ; ^ lend_v 0
->amh $a[cs=acc] $n zmm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lend_v $n ; ^ lend_v 0
->amh $n[cs=acc] zmm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lend_v $a $n ; ^ lend_v 0
->amh $a[cs=acc] $n bd_r_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lend_v $n ; ^ lend_v 0
->amh $n[cs=acc] bd_r_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** let_v $a $n ; ^ let_v 0
->amh $a[cs=acc] $n kray*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** let_v $n ; ^ let_v 0
->amh $n[cs=acc] kray*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** level_v $a $n ; ^ level_v 0
->amh $a[cs=acc] $n mdmd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** level_v $n ; ^ level_v 0
->amh $n[cs=acc] mdmd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** levy_v $a $n ; ^ levy_v 0
->amh $a[cs=acc] $n qrT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** levy_v $n ; ^ levy_v 0
->amh $n[cs=acc] qrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lick_v $a $n ; ^ lick_v 0
->amh $a[cs=acc] $n tnfs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lick_v $n ; ^ lick_v 0
->amh $n[cs=acc] tnfs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lick_v $a $n ; ^ lick_v 0
->amh $a[cs=acc] $n l's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lick_v $n ; ^ lick_v 0
->amh $n[cs=acc] l's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lift_v $a $n ; ^ lift_v 0
->amh $a[cs=acc] $n ns'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lift_v $n ; ^ lift_v 0
->amh $n[cs=acc] ns'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lift_v $a $n ; ^ lift_v 0
->amh $a[cs=acc] $n sqsq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lift_v $n ; ^ lift_v 0
->amh $n[cs=acc] sqsq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $a $n ; ^ light_v 0
->amh $a[cs=acc] $n br'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $n ; ^ light_v 0
->amh $n[cs=acc] br'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $a $n ; ^ light_v 0
->amh $a[cs=acc] $n lkW_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $n ; ^ light_v 0
->amh $n[cs=acc] lkW_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $a $n ; ^ light_v 0
->amh $a[cs=acc] $n ndd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $n ; ^ light_v 0
->amh $n[cs=acc] ndd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $a $n ; ^ light_v 0
->amh $a[cs=acc] $n br'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** light_v $n ; ^ light_v 0
->amh $n[cs=acc] br'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** like_v $a $n ; ^ like_v 0
->amh $a[cs=acc] $n fl_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** like_v $n ; ^ like_v 0
->amh $n[cs=acc] fl_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** like_v $a $n ; ^ like_v 0
->amh $a[cs=acc] $n wdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** like_v $n ; ^ like_v 0
->amh $n[cs=acc] wdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** limit_v $a $n ; ^ limit_v 0
->amh $a[cs=acc] $n ws_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** limit_v $n ; ^ limit_v 0
->amh $n[cs=acc] ws_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lisp_v $a $n ; ^ lisp_v 0
->amh $a[cs=acc] $n gWladf_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lisp_v $n ; ^ lisp_v 0
->amh $n[cs=acc] gWladf_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lisp_v $a $n ; ^ lisp_v 0
->amh $a[cs=acc] $n kWlatf_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lisp_v $n ; ^ lisp_v 0
->amh $n[cs=acc] kWlatf_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** litter_v $a $n ; ^ litter_v 0
->amh $a[cs=acc] $n qWx_x_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** litter_v $n ; ^ litter_v 0
->amh $n[cs=acc] qWx_x_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** live_v $a $n ; ^ live_v 0
->amh $a[cs=acc] $n nwr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** live_v $n ; ^ live_v 0
->amh $n[cs=acc] nwr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** load_v $a $n ; ^ load_v 0
->amh $a[cs=acc] $n gWrs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** load_v $n ; ^ load_v 0
->amh $n[cs=acc] gWrs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** load_v $a $n ; ^ load_v 0
->amh $a[cs=acc] $n C'n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** load_v $n ; ^ load_v 0
->amh $n[cs=acc] C'n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loaf_v $a $n ; ^ loaf_v 0
->amh $a[cs=acc] $n zTzT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loaf_v $n ; ^ loaf_v 0
->amh $n[cs=acc] zTzT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loathe_v $a $n ; ^ loathe_v 0
->amh $a[cs=acc] $n n|gxgx_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loathe_v $n ; ^ loathe_v 0
->amh $n[cs=acc] n|gxgx_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lock_v $a $n ; ^ lock_v 0
->amh $a[cs=acc] $n qWl_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lock_v $n ; ^ lock_v 0
->amh $n[cs=acc] qWl_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loosen_v $a $n ; ^ loosen_v 0
->amh $a[cs=acc] $n qrf_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loosen_v $n ; ^ loosen_v 0
->amh $n[cs=acc] qrf_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loot_v $a $n ; ^ loot_v 0
->amh $a[cs=acc] $n mzbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** loot_v $n ; ^ loot_v 0
->amh $n[cs=acc] mzbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lop_v $a $n ; ^ lop_v 0
->amh $a[cs=acc] $n CfCf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lop_v $n ; ^ lop_v 0
->amh $n[cs=acc] CfCf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lose_v $a $n ; ^ lose_v 0
->amh $a[cs=acc] $n T'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lose_v $n ; ^ lose_v 0
->amh $n[cs=acc] T'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** love_v $a $n ; ^ love_v 0
->amh $a[cs=acc] $n fqr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** love_v $n ; ^ love_v 0
->amh $n[cs=acc] fqr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** love_v $a $n ; ^ love_v 0
->amh $a[cs=acc] $n wdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** love_v $n ; ^ love_v 0
->amh $n[cs=acc] wdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lower_v $a $n ; ^ lower_v 0
->amh $a[cs=acc] $n qn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** lower_v $n ; ^ lower_v 0
->amh $n[cs=acc] qn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** madden_v $a $n ; ^ madden_v 0
->amh $a[cs=acc] $n ndd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** madden_v $n ; ^ madden_v 0
->amh $n[cs=acc] ndd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** madden_v $a $n ; ^ madden_v 0
->amh $a[cs=acc] $n 'bd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** madden_v $n ; ^ madden_v 0
->amh $n[cs=acc] 'bd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** magnify_v $a $n ; ^ magnify_v 0
->amh $a[cs=acc] $n gWl'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** magnify_v $n ; ^ magnify_v 0
->amh $n[cs=acc] gWl'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** make_v $a $n ; ^ make_v 0
->amh $a[cs=acc] $n sr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** make_v $n ; ^ make_v 0
->amh $n[cs=acc] sr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** maltreat_v $a $n ; ^ maltreat_v 0
->amh $a[cs=acc] $n Tq'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** maltreat_v $n ; ^ maltreat_v 0
->amh $n[cs=acc] Tq'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** maltreat_v $a $n ; ^ maltreat_v 0
->amh $a[cs=acc] $n n|glat'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** maltreat_v $n ; ^ maltreat_v 0
->amh $n[cs=acc] n|glat'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** manifest_v $a $n ; ^ manifest_v 0
->amh $a[cs=acc] $n ks_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** manifest_v $n ; ^ manifest_v 0
->amh $n[cs=acc] ks_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** manufacture_v $a $n ; ^ manufacture_v 0
->amh $a[cs=acc] $n sr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** manufacture_v $n ; ^ manufacture_v 0
->amh $n[cs=acc] sr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mark_v $a $n ; ^ mark_v 0
->amh $a[cs=acc] $n 'r_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mark_v $n ; ^ mark_v 0
->amh $n[cs=acc] 'r_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** marry_v $a $n ; ^ marry_v 0
->amh $a[cs=acc] $n gb'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** marry_v $n ; ^ marry_v 0
->amh $n[cs=acc] gb'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** marry_v $a $n ; ^ marry_v 0
->amh $a[cs=acc] $n d'r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** marry_v $n ; ^ marry_v 0
->amh $n[cs=acc] d'r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mash_v $a $n ; ^ mash_v 0
->amh $a[cs=acc] $n d'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mash_v $n ; ^ mash_v 0
->amh $n[cs=acc] d'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** massacre_v $a $n ; ^ massacre_v 0
->amh $a[cs=acc] $n gdl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** massacre_v $n ; ^ massacre_v 0
->amh $n[cs=acc] gdl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** massage_v $a $n ; ^ massage_v 0
->amh $a[cs=acc] $n 'x*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** massage_v $n ; ^ massage_v 0
->amh $n[cs=acc] 'x*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** match_v $a $n ; ^ match_v 0
->amh $a[cs=acc] $n gTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** match_v $n ; ^ match_v 0
->amh $n[cs=acc] gTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mate_v $a $n ; ^ mate_v 0
->amh $a[cs=acc] $n Tq'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mate_v $n ; ^ mate_v 0
->amh $n[cs=acc] Tq'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mate_v $a $n ; ^ mate_v 0
->amh $a[cs=acc] $n srr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mate_v $n ; ^ mate_v 0
->amh $n[cs=acc] srr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mature_v $a $n ; ^ mature_v 0
->amh $a[cs=acc] $n gWlms_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mature_v $n ; ^ mature_v 0
->amh $n[cs=acc] gWlms_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** maximize_v $a $n ; ^ maximize_v 0
->amh $a[cs=acc] $n gnn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** maximize_v $n ; ^ maximize_v 0
->amh $n[cs=acc] gnn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** measure_v $a $n ; ^ measure_v 0
->amh $a[cs=acc] $n mtr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** measure_v $n ; ^ measure_v 0
->amh $n[cs=acc] mtr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** measure_v $a $n ; ^ measure_v 0
->amh $a[cs=acc] $n lk_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** measure_v $n ; ^ measure_v 0
->amh $n[cs=acc] lk_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** measure_v $a $n ; ^ measure_v 0
->amh $a[cs=acc] $n sfr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** measure_v $n ; ^ measure_v 0
->amh $n[cs=acc] sfr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** meet_v $a $n ; ^ meet_v 0
->amh $a[cs=acc] $n gN*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** meet_v $n ; ^ meet_v 0
->amh $n[cs=acc] gN*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** melt_v $a $n ; ^ melt_v 0
->amh $a[cs=acc] $n qlT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** melt_v $n ; ^ melt_v 0
->amh $n[cs=acc] qlT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** melt_v $a $n ; ^ melt_v 0
->amh $a[cs=acc] $n qlT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** melt_v $n ; ^ melt_v 0
->amh $n[cs=acc] qlT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mend_v $a $n ; ^ mend_v 0
->amh $a[cs=acc] $n Tg_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mend_v $n ; ^ mend_v 0
->amh $n[cs=acc] Tg_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mend_v $a $n ; ^ mend_v 0
->amh $a[cs=acc] $n bj_*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mend_v $n ; ^ mend_v 0
->amh $n[cs=acc] bj_*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mention_v $a $n ; ^ mention_v 0
->amh $a[cs=acc] $n ws_'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mention_v $n ; ^ mention_v 0
->amh $n[cs=acc] ws_'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** milk_v $a $n ; ^ milk_v 0
->amh $a[cs=acc] $n 'lb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** milk_v $n ; ^ milk_v 0
->amh $n[cs=acc] 'lb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mince_v $a $n ; ^ mince_v 0
->amh $a[cs=acc] $n qrTf_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mince_v $n ; ^ mince_v 0
->amh $n[cs=acc] qrTf_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mishandle_v $a $n ; ^ mishandle_v 0
->amh $a[cs=acc] $n gWsqWl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mishandle_v $n ; ^ mishandle_v 0
->amh $n[cs=acc] gWsqWl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** miss_v $a $n ; ^ miss_v 0
->amh $a[cs=acc] $n nafq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** miss_v $n ; ^ miss_v 0
->amh $n[cs=acc] nafq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** miss_v $a $n ; ^ miss_v 0
->amh $a[cs=acc] $n s't_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** miss_v $n ; ^ miss_v 0
->amh $n[cs=acc] s't_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** misuse_v $a $n ; ^ misuse_v 0
->amh $a[cs=acc] $n gWsqWl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** misuse_v $n ; ^ misuse_v 0
->amh $n[cs=acc] gWsqWl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $a $n ; ^ mix_v 0
->amh $a[cs=acc] $n qlaql_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $n ; ^ mix_v 0
->amh $n[cs=acc] qlaql_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $a $n ; ^ mix_v 0
->amh $a[cs=acc] $n dblq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $n ; ^ mix_v 0
->amh $n[cs=acc] dblq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $a $n ; ^ mix_v 0
->amh $a[cs=acc] $n qlaql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $n ; ^ mix_v 0
->amh $n[cs=acc] qlaql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $a $n ; ^ mix_v 0
->amh $a[cs=acc] $n dblq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $n ; ^ mix_v 0
->amh $n[cs=acc] dblq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $a $n ; ^ mix_v 0
->amh $a[cs=acc] $n qy_T_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $n ; ^ mix_v 0
->amh $n[cs=acc] qy_T_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $a $n ; ^ mix_v 0
->amh $a[cs=acc] $n qy_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mix_v $n ; ^ mix_v 0
->amh $n[cs=acc] qy_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** moan_v $a $n ; ^ moan_v 0
->amh $a[cs=acc] $n qs_t_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** moan_v $n ; ^ moan_v 0
->amh $n[cs=acc] qs_t_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n fyz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] fyz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n lgT_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] lgT_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n ql_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] ql_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n tr_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] tr_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n lm_T_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] lm_T_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n Tyq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] Tyq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n xwf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] xwf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $a $n ; ^ mock_v 0
->amh $a[cs=acc] $n xrdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mock_v $n ; ^ mock_v 0
->amh $n[cs=acc] xrdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** modernize_v $a $n ; ^ modernize_v 0
->amh $a[cs=acc] $n zb_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** modernize_v $n ; ^ modernize_v 0
->amh $n[cs=acc] zb_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** moisten_v $a $n ; ^ moisten_v 0
->amh $a[cs=acc] $n rTb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** moisten_v $n ; ^ moisten_v 0
->amh $n[cs=acc] rTb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** moisten_v $a $n ; ^ moisten_v 0
->amh $a[cs=acc] $n r's_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** moisten_v $n ; ^ moisten_v 0
->amh $n[cs=acc] r's_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** molest_v $a $n ; ^ molest_v 0
->amh $a[cs=acc] $n Cnq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** molest_v $n ; ^ molest_v 0
->amh $n[cs=acc] Cnq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mop_v $a $n ; ^ mop_v 0
->amh $a[cs=acc] $n Trg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mop_v $n ; ^ mop_v 0
->amh $n[cs=acc] Trg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** motivate_v $a $n ; ^ motivate_v 0
->amh $a[cs=acc] $n gf'_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** motivate_v $n ; ^ motivate_v 0
->amh $n[cs=acc] gf'_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mould_v $a $n ; ^ mould_v 0
->amh $a[cs=acc] $n 'r_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mould_v $n ; ^ mould_v 0
->amh $n[cs=acc] 'r_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mourn_v $a $n ; ^ mourn_v 0
->amh $a[cs=acc] $n 'zn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mourn_v $n ; ^ mourn_v 0
->amh $n[cs=acc] 'zn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** move_v $a $n ; ^ move_v 0
->amh $a[cs=acc] $n n|qsaqs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** move_v $n ; ^ move_v 0
->amh $n[cs=acc] n|qsaqs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mow_v $a $n ; ^ mow_v 0
->amh $a[cs=acc] $n 'Cd_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mow_v $n ; ^ mow_v 0
->amh $n[cs=acc] 'Cd_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mow_v $a $n ; ^ mow_v 0
->amh $a[cs=acc] $n 'Cd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** mow_v $n ; ^ mow_v 0
->amh $n[cs=acc] 'Cd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** muffle_v $a $n ; ^ muffle_v 0
->amh $a[cs=acc] $n jbW_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** muffle_v $n ; ^ muffle_v 0
->amh $n[cs=acc] jbW_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $a $n ; ^ multiply_v 0
->amh $a[cs=acc] $n bz'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $n ; ^ multiply_v 0
->amh $n[cs=acc] bz'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $a $n ; ^ multiply_v 0
->amh $a[cs=acc] $n bz'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $n ; ^ multiply_v 0
->amh $n[cs=acc] bz'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $a $n ; ^ multiply_v 0
->amh $a[cs=acc] $n bz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $n ; ^ multiply_v 0
->amh $n[cs=acc] bz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $a $n ; ^ multiply_v 0
->amh $a[cs=acc] $n rb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** multiply_v $n ; ^ multiply_v 0
->amh $n[cs=acc] rb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** munch_v $a $n ; ^ munch_v 0
->amh $a[cs=acc] $n gWrdm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** munch_v $n ; ^ munch_v 0
->amh $n[cs=acc] gWrdm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murder_v $a $n ; ^ murder_v 0
->amh $a[cs=acc] $n gdl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murder_v $n ; ^ murder_v 0
->amh $n[cs=acc] gdl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $a $n ; ^ murmur_v 0
->amh $a[cs=acc] $n nbnb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $n ; ^ murmur_v 0
->amh $n[cs=acc] nbnb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $a $n ; ^ murmur_v 0
->amh $a[cs=acc] $n n|gWragWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $n ; ^ murmur_v 0
->amh $n[cs=acc] n|gWragWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $a $n ; ^ murmur_v 0
->amh $a[cs=acc] $n gW|tmtm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $n ; ^ murmur_v 0
->amh $n[cs=acc] gW|tmtm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $a $n ; ^ murmur_v 0
->amh $a[cs=acc] $n gW|rmrm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** murmur_v $n ; ^ murmur_v 0
->amh $n[cs=acc] gW|rmrm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** muzzle_v $a $n ; ^ muzzle_v 0
->amh $a[cs=acc] $n xb_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** muzzle_v $n ; ^ muzzle_v 0
->amh $n[cs=acc] xb_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $a $n ; ^ nag_v 0
->amh $a[cs=acc] $n CqCq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $n ; ^ nag_v 0
->amh $n[cs=acc] CqCq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $a $n ; ^ nag_v 0
->amh $a[cs=acc] $n ntrk_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $n ; ^ nag_v 0
->amh $n[cs=acc] ntrk_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $a $n ; ^ nag_v 0
->amh $a[cs=acc] $n Cnq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $n ; ^ nag_v 0
->amh $n[cs=acc] Cnq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $a $n ; ^ nag_v 0
->amh $a[cs=acc] $n nznz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $n ; ^ nag_v 0
->amh $n[cs=acc] nznz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $a $n ; ^ nag_v 0
->amh $a[cs=acc] $n slc*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nag_v $n ; ^ nag_v 0
->amh $n[cs=acc] slc*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nail_v $a $n ; ^ nail_v 0
->amh $a[cs=acc] $n cnkr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nail_v $n ; ^ nail_v 0
->amh $n[cs=acc] cnkr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** name_v $a $n ; ^ name_v 0
->amh $a[cs=acc] $n sy_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** name_v $n ; ^ name_v 0
->amh $n[cs=acc] sy_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrate_v $a $n ; ^ narrate_v 0
->amh $a[cs=acc] $n wg'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrate_v $n ; ^ narrate_v 0
->amh $n[cs=acc] wg'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrate_v $a $n ; ^ narrate_v 0
->amh $a[cs=acc] $n wr'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrate_v $n ; ^ narrate_v 0
->amh $n[cs=acc] wr'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrate_v $a $n ; ^ narrate_v 0
->amh $a[cs=acc] $n tr_k_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrate_v $n ; ^ narrate_v 0
->amh $n[cs=acc] tr_k_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrow_v $a $n ; ^ narrow_v 0
->amh $a[cs=acc] $n Tbb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** narrow_v $n ; ^ narrow_v 0
->amh $n[cs=acc] Tbb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** navigate_v $a $n ; ^ navigate_v 0
->amh $a[cs=acc] $n brr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** navigate_v $n ; ^ navigate_v 0
->amh $n[cs=acc] brr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** negotiate_v $a $n ; ^ negotiate_v 0
->amh $a[cs=acc] $n drdr_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** negotiate_v $n ; ^ negotiate_v 0
->amh $n[cs=acc] drdr_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nick_v $a $n ; ^ nick_v 0
->amh $a[cs=acc] $n snbT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nick_v $n ; ^ nick_v 0
->amh $n[cs=acc] snbT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nominate_v $a $n ; ^ nominate_v 0
->amh $a[cs=acc] $n TqW_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** nominate_v $n ; ^ nominate_v 0
->amh $n[cs=acc] TqW_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** notify_v $a $n ; ^ notify_v 0
->amh $a[cs=acc] $n 'wq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** notify_v $n ; ^ notify_v 0
->amh $n[cs=acc] 'wq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** notify_v $a $n ; ^ notify_v 0
->amh $a[cs=acc] $n mlkt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** notify_v $n ; ^ notify_v 0
->amh $n[cs=acc] mlkt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** numb_v $a $n ; ^ numb_v 0
->amh $a[cs=acc] $n dnzz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** numb_v $n ; ^ numb_v 0
->amh $n[cs=acc] dnzz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** obey_v $a $n ; ^ obey_v 0
->amh $a[cs=acc] $n 'zz_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** obey_v $n ; ^ obey_v 0
->amh $n[cs=acc] 'zz_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** object_v $a $n ; ^ object_v 0
->amh $a[cs=acc] $n qwm_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** object_v $n ; ^ object_v 0
->amh $n[cs=acc] qwm_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** observe_v $a $n ; ^ observe_v 0
->amh $a[cs=acc] $n w'l_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** observe_v $n ; ^ observe_v 0
->amh $n[cs=acc] w'l_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** observe_v $a $n ; ^ observe_v 0
->amh $a[cs=acc] $n 'y*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** observe_v $n ; ^ observe_v 0
->amh $n[cs=acc] 'y*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** obstruct_v $a $n ; ^ obstruct_v 0
->amh $a[cs=acc] $n zg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** obstruct_v $n ; ^ obstruct_v 0
->amh $n[cs=acc] zg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** obstruct_v $a $n ; ^ obstruct_v 0
->amh $a[cs=acc] $n dnaqf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** obstruct_v $n ; ^ obstruct_v 0
->amh $n[cs=acc] dnaqf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offend_v $a $n ; ^ offend_v 0
->amh $a[cs=acc] $n qy_m_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offend_v $n ; ^ offend_v 0
->amh $n[cs=acc] qy_m_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offer_v $a $n ; ^ offer_v 0
->amh $a[cs=acc] $n qrb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offer_v $n ; ^ offer_v 0
->amh $n[cs=acc] qrb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offer_v $a $n ; ^ offer_v 0
->amh $a[cs=acc] $n gabz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offer_v $n ; ^ offer_v 0
->amh $n[cs=acc] gabz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offer_v $a $n ; ^ offer_v 0
->amh $a[cs=acc] $n brkt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** offer_v $n ; ^ offer_v 0
->amh $n[cs=acc] brkt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** omit_v $a $n ; ^ omit_v 0
->amh $a[cs=acc] $n qr*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** omit_v $n ; ^ omit_v 0
->amh $n[cs=acc] qr*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ooze_v $a $n ; ^ ooze_v 0
->amh $a[cs=acc] $n 'Z*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ooze_v $n ; ^ ooze_v 0
->amh $n[cs=acc] 'Z*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** open_v $a $n ; ^ open_v 0
->amh $a[cs=acc] $n glS_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** open_v $n ; ^ open_v 0
->amh $n[cs=acc] glS_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** open_v $a $n ; ^ open_v 0
->amh $a[cs=acc] $n kft_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** open_v $n ; ^ open_v 0
->amh $n[cs=acc] kft_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** operate_v $a $n ; ^ operate_v 0
->amh $a[cs=acc] $n n|qsaqs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** operate_v $n ; ^ operate_v 0
->amh $n[cs=acc] n|qsaqs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** operate_v $a $n ; ^ operate_v 0
->amh $a[cs=acc] $n sr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** operate_v $n ; ^ operate_v 0
->amh $n[cs=acc] sr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** oppress_v $a $n ; ^ oppress_v 0
->amh $a[cs=acc] $n CqW_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** oppress_v $n ; ^ oppress_v 0
->amh $n[cs=acc] CqW_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** oppress_v $a $n ; ^ oppress_v 0
->amh $a[cs=acc] $n Tq'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** oppress_v $n ; ^ oppress_v 0
->amh $n[cs=acc] Tq'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** oppress_v $a $n ; ^ oppress_v 0
->amh $a[cs=acc] $n qbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** oppress_v $n ; ^ oppress_v 0
->amh $n[cs=acc] qbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ordain_v $a $n ; ^ ordain_v 0
->amh $a[cs=acc] $n k'n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ordain_v $n ; ^ ordain_v 0
->amh $n[cs=acc] k'n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** order_v $a $n ; ^ order_v 0
->amh $a[cs=acc] $n 'zz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** order_v $n ; ^ order_v 0
->amh $n[cs=acc] 'zz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** organize_v $a $n ; ^ organize_v 0
->amh $a[cs=acc] $n qnbr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** organize_v $n ; ^ organize_v 0
->amh $n[cs=acc] qnbr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** organize_v $a $n ; ^ organize_v 0
->amh $a[cs=acc] $n qnbr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** organize_v $n ; ^ organize_v 0
->amh $n[cs=acc] qnbr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** originate_v $a $n ; ^ originate_v 0
->amh $a[cs=acc] $n flq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** originate_v $n ; ^ originate_v 0
->amh $n[cs=acc] flq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overcharge_v $a $n ; ^ overcharge_v 0
->amh $a[cs=acc] $n gWd'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overcharge_v $n ; ^ overcharge_v 0
->amh $n[cs=acc] gWd'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overdo_v $a $n ; ^ overdo_v 0
->amh $a[cs=acc] $n bsbs_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overdo_v $n ; ^ overdo_v 0
->amh $n[cs=acc] bsbs_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overflow_v $a $n ; ^ overflow_v 0
->amh $a[cs=acc] $n T|lqlq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overflow_v $n ; ^ overflow_v 0
->amh $n[cs=acc] T|lqlq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overhang_v $a $n ; ^ overhang_v 0
->amh $a[cs=acc] $n dbb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overhang_v $n ; ^ overhang_v 0
->amh $n[cs=acc] dbb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overpower_v $a $n ; ^ overpower_v 0
->amh $a[cs=acc] $n 'y_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overpower_v $n ; ^ overpower_v 0
->amh $n[cs=acc] 'y_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overstate_v $a $n ; ^ overstate_v 0
->amh $a[cs=acc] $n gnn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overstate_v $n ; ^ overstate_v 0
->amh $n[cs=acc] gnn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overtake_v $a $n ; ^ overtake_v 0
->amh $a[cs=acc] $n qdm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overtake_v $n ; ^ overtake_v 0
->amh $n[cs=acc] qdm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overthrow_v $a $n ; ^ overthrow_v 0
->amh $a[cs=acc] $n fngl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overthrow_v $n ; ^ overthrow_v 0
->amh $n[cs=acc] fngl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overthrow_v $a $n ; ^ overthrow_v 0
->amh $a[cs=acc] $n glbT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overthrow_v $n ; ^ overthrow_v 0
->amh $n[cs=acc] glbT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overturn_v $a $n ; ^ overturn_v 0
->amh $a[cs=acc] $n fngl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overturn_v $n ; ^ overturn_v 0
->amh $n[cs=acc] fngl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overturn_v $a $n ; ^ overturn_v 0
->amh $a[cs=acc] $n zqzq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overturn_v $n ; ^ overturn_v 0
->amh $n[cs=acc] zqzq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overwhelm_v $a $n ; ^ overwhelm_v 0
->amh $a[cs=acc] $n T|lqlq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** overwhelm_v $n ; ^ overwhelm_v 0
->amh $n[cs=acc] T|lqlq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pacify_v $a $n ; ^ pacify_v 0
->amh $a[cs=acc] $n rg'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pacify_v $n ; ^ pacify_v 0
->amh $n[cs=acc] rg'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pack_v $a $n ; ^ pack_v 0
->amh $a[cs=acc] $n 'x_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pack_v $n ; ^ pack_v 0
->amh $n[cs=acc] 'x_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pack_v $a $n ; ^ pack_v 0
->amh $a[cs=acc] $n 'k_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pack_v $n ; ^ pack_v 0
->amh $n[cs=acc] 'k_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** paint_v $a $n ; ^ paint_v 0
->amh $a[cs=acc] $n s'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** paint_v $n ; ^ paint_v 0
->amh $n[cs=acc] s'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** paint_v $a $n ; ^ paint_v 0
->amh $a[cs=acc] $n qb_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** paint_v $n ; ^ paint_v 0
->amh $n[cs=acc] qb_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pant_v $a $n ; ^ pant_v 0
->amh $a[cs=acc] $n lklk_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pant_v $n ; ^ pant_v 0
->amh $n[cs=acc] lklk_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pant_v $a $n ; ^ pant_v 0
->amh $a[cs=acc] $n qs_t_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pant_v $n ; ^ pant_v 0
->amh $n[cs=acc] qs_t_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** parade_v $a $n ; ^ parade_v 0
->amh $a[cs=acc] $n sl_f_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** parade_v $n ; ^ parade_v 0
->amh $n[cs=acc] sl_f_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** partake_v $a $n ; ^ partake_v 0
->amh $a[cs=acc] $n qms_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** partake_v $n ; ^ partake_v 0
->amh $n[cs=acc] qms_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** partake_v $a $n ; ^ partake_v 0
->amh $a[cs=acc] $n satf_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** partake_v $n ; ^ partake_v 0
->amh $n[cs=acc] satf_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pass_v $a $n ; ^ pass_v 0
->amh $a[cs=acc] $n 'lf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pass_v $n ; ^ pass_v 0
->amh $n[cs=acc] 'lf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pasture_v $a $n ; ^ pasture_v 0
->amh $a[cs=acc] $n g'T_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pasture_v $n ; ^ pasture_v 0
->amh $n[cs=acc] g'T_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pasture_v $a $n ; ^ pasture_v 0
->amh $a[cs=acc] $n g'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pasture_v $n ; ^ pasture_v 0
->amh $n[cs=acc] g'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pat_v $a $n ; ^ pat_v 0
->amh $a[cs=acc] $n dabs_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pat_v $n ; ^ pat_v 0
->amh $n[cs=acc] dabs_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pat_v $a $n ; ^ pat_v 0
->amh $a[cs=acc] $n TbTb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pat_v $n ; ^ pat_v 0
->amh $n[cs=acc] TbTb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** patch_v $a $n ; ^ patch_v 0
->amh $a[cs=acc] $n dr_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** patch_v $n ; ^ patch_v 0
->amh $n[cs=acc] dr_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** peel_v $a $n ; ^ peel_v 0
->amh $a[cs=acc] $n glff_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** peel_v $n ; ^ peel_v 0
->amh $n[cs=acc] glff_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** peel_v $a $n ; ^ peel_v 0
->amh $a[cs=acc] $n l'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** peel_v $n ; ^ peel_v 0
->amh $n[cs=acc] l'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** peel_v $a $n ; ^ peel_v 0
->amh $a[cs=acc] $n mWxlq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** peel_v $n ; ^ peel_v 0
->amh $n[cs=acc] mWxlq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** penetrate_v $a $n ; ^ penetrate_v 0
->amh $a[cs=acc] $n zlq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** penetrate_v $n ; ^ penetrate_v 0
->amh $n[cs=acc] zlq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perambulate_v $a $n ; ^ perambulate_v 0
->amh $a[cs=acc] $n n|gWradd_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perambulate_v $n ; ^ perambulate_v 0
->amh $n[cs=acc] n|gWradd_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perceive_v $a $n ; ^ perceive_v 0
->amh $a[cs=acc] $n gnzb_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perceive_v $n ; ^ perceive_v 0
->amh $n[cs=acc] gnzb_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perforate_v $a $n ; ^ perforate_v 0
->amh $a[cs=acc] $n ndl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perforate_v $n ; ^ perforate_v 0
->amh $n[cs=acc] ndl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perplex_v $a $n ; ^ perplex_v 0
->amh $a[cs=acc] $n dnagr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perplex_v $n ; ^ perplex_v 0
->amh $n[cs=acc] dnagr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** persecute_v $a $n ; ^ persecute_v 0
->amh $a[cs=acc] $n sdd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** persecute_v $n ; ^ persecute_v 0
->amh $n[cs=acc] sdd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** persuade_v $a $n ; ^ persuade_v 0
->amh $a[cs=acc] $n dl_l_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** persuade_v $n ; ^ persuade_v 0
->amh $n[cs=acc] dl_l_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perturb_v $a $n ; ^ perturb_v 0
->amh $a[cs=acc] $n dnagr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** perturb_v $n ; ^ perturb_v 0
->amh $n[cs=acc] dnagr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pester_v $a $n ; ^ pester_v 0
->amh $a[cs=acc] $n CqCq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pester_v $n ; ^ pester_v 0
->amh $n[cs=acc] CqCq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pester_v $a $n ; ^ pester_v 0
->amh $a[cs=acc] $n Cnq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pester_v $n ; ^ pester_v 0
->amh $n[cs=acc] Cnq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pick_v $a $n ; ^ pick_v 0
->amh $a[cs=acc] $n lqm_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pick_v $n ; ^ pick_v 0
->amh $n[cs=acc] lqm_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pick_v $a $n ; ^ pick_v 0
->amh $a[cs=acc] $n lqm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pick_v $n ; ^ pick_v 0
->amh $n[cs=acc] lqm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pierce_v $a $n ; ^ pierce_v 0
->amh $a[cs=acc] $n wg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pierce_v $n ; ^ pierce_v 0
->amh $n[cs=acc] wg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pillage_v $a $n ; ^ pillage_v 0
->amh $a[cs=acc] $n mzbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pillage_v $n ; ^ pillage_v 0
->amh $n[cs=acc] mzbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pilot_v $a $n ; ^ pilot_v 0
->amh $a[cs=acc] $n brr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pilot_v $n ; ^ pilot_v 0
->amh $n[cs=acc] brr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pilot_v $a $n ; ^ pilot_v 0
->amh $a[cs=acc] $n brr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pilot_v $n ; ^ pilot_v 0
->amh $n[cs=acc] brr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pinch_v $a $n ; ^ pinch_v 0
->amh $a[cs=acc] $n qWnTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pinch_v $n ; ^ pinch_v 0
->amh $n[cs=acc] qWnTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** place_v $a $n ; ^ place_v 0
->amh $a[cs=acc] $n nwr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** place_v $n ; ^ place_v 0
->amh $n[cs=acc] nwr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plague_v $a $n ; ^ plague_v 0
->amh $a[cs=acc] $n sqy*_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plague_v $n ; ^ plague_v 0
->amh $n[cs=acc] sqy*_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plait_v $a $n ; ^ plait_v 0
->amh $a[cs=acc] $n gWngWn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plait_v $n ; ^ plait_v 0
->amh $n[cs=acc] gWngWn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plait_v $a $n ; ^ plait_v 0
->amh $a[cs=acc] $n qWaC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plait_v $n ; ^ plait_v 0
->amh $n[cs=acc] qWaC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plan_v $a $n ; ^ plan_v 0
->amh $a[cs=acc] $n qy_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plan_v $n ; ^ plan_v 0
->amh $n[cs=acc] qy_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plan_v $a $n ; ^ plan_v 0
->amh $a[cs=acc] $n 'q_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plan_v $n ; ^ plan_v 0
->amh $n[cs=acc] 'q_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plane_v $a $n ; ^ plane_v 0
->amh $a[cs=acc] $n l'g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plane_v $n ; ^ plane_v 0
->amh $n[cs=acc] l'g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plant_v $a $n ; ^ plant_v 0
->amh $a[cs=acc] $n tkl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plant_v $n ; ^ plant_v 0
->amh $n[cs=acc] tkl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plaster_v $a $n ; ^ plaster_v 0
->amh $a[cs=acc] $n ls_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plaster_v $n ; ^ plaster_v 0
->amh $n[cs=acc] ls_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plaster_v $a $n ; ^ plaster_v 0
->amh $a[cs=acc] $n mrg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plaster_v $n ; ^ plaster_v 0
->amh $n[cs=acc] mrg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** play_v $a $n ; ^ play_v 0
->amh $a[cs=acc] $n Cawt_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** play_v $n ; ^ play_v 0
->amh $n[cs=acc] Cawt_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plead_v $a $n ; ^ plead_v 0
->amh $a[cs=acc] $n lm_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plead_v $n ; ^ plead_v 0
->amh $n[cs=acc] lm_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** please_v $a $n ; ^ please_v 0
->amh $a[cs=acc] $n ds_t_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** please_v $n ; ^ please_v 0
->amh $n[cs=acc] ds_t_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $a $n ; ^ plot_v 0
->amh $a[cs=acc] $n 'd_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $n ; ^ plot_v 0
->amh $n[cs=acc] 'd_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $a $n ; ^ plot_v 0
->amh $a[cs=acc] $n xm_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $n ; ^ plot_v 0
->amh $n[cs=acc] xm_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $a $n ; ^ plot_v 0
->amh $a[cs=acc] $n dWl_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $n ; ^ plot_v 0
->amh $n[cs=acc] dWl_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $a $n ; ^ plot_v 0
->amh $a[cs=acc] $n syr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plot_v $n ; ^ plot_v 0
->amh $n[cs=acc] syr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plough_v $a $n ; ^ plough_v 0
->amh $a[cs=acc] $n 'rs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plough_v $n ; ^ plough_v 0
->amh $n[cs=acc] 'rs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plough_v $a $n ; ^ plough_v 0
->amh $a[cs=acc] $n tlm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plough_v $n ; ^ plough_v 0
->amh $n[cs=acc] tlm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pluck_v $a $n ; ^ pluck_v 0
->amh $a[cs=acc] $n qTf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pluck_v $n ; ^ pluck_v 0
->amh $n[cs=acc] qTf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plug_v $a $n ; ^ plug_v 0
->amh $a[cs=acc] $n wt_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plug_v $n ; ^ plug_v 0
->amh $n[cs=acc] wt_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plunder_v $a $n ; ^ plunder_v 0
->amh $a[cs=acc] $n zrf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plunder_v $n ; ^ plunder_v 0
->amh $n[cs=acc] zrf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plunder_v $a $n ; ^ plunder_v 0
->amh $a[cs=acc] $n bzbz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** plunder_v $n ; ^ plunder_v 0
->amh $n[cs=acc] bzbz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** point_v $a $n ; ^ point_v 0
->amh $a[cs=acc] $n dg_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** point_v $n ; ^ point_v 0
->amh $n[cs=acc] dg_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poison_v $a $n ; ^ poison_v 0
->amh $a[cs=acc] $n mr_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poison_v $n ; ^ poison_v 0
->amh $n[cs=acc] mr_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poke_v $a $n ; ^ poke_v 0
->amh $a[cs=acc] $n qWsqWs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poke_v $n ; ^ poke_v 0
->amh $n[cs=acc] qWsqWs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poke_v $a $n ; ^ poke_v 0
->amh $a[cs=acc] $n gWagWT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poke_v $n ; ^ poke_v 0
->amh $n[cs=acc] gWagWT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poke_v $a $n ; ^ poke_v 0
->amh $a[cs=acc] $n gWrgWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** poke_v $n ; ^ poke_v 0
->amh $n[cs=acc] gWrgWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** polish_v $a $n ; ^ polish_v 0
->amh $a[cs=acc] $n kWl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** polish_v $n ; ^ polish_v 0
->amh $n[cs=acc] kWl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** polish_v $a $n ; ^ polish_v 0
->amh $a[cs=acc] $n wlwl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** polish_v $n ; ^ polish_v 0
->amh $n[cs=acc] wlwl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pollute_v $a $n ; ^ pollute_v 0
->amh $a[cs=acc] $n 'df_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pollute_v $n ; ^ pollute_v 0
->amh $n[cs=acc] 'df_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $a $n ; ^ ponder_v 0
->amh $a[cs=acc] $n w'l_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $n ; ^ ponder_v 0
->amh $n[cs=acc] w'l_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $a $n ; ^ ponder_v 0
->amh $a[cs=acc] $n bl'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $n ; ^ ponder_v 0
->amh $n[cs=acc] bl'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $a $n ; ^ ponder_v 0
->amh $a[cs=acc] $n slsl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $n ; ^ ponder_v 0
->amh $n[cs=acc] slsl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $a $n ; ^ ponder_v 0
->amh $a[cs=acc] $n Tyn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ponder_v $n ; ^ ponder_v 0
->amh $n[cs=acc] Tyn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pop_v $a $n ; ^ pop_v 0
->amh $a[cs=acc] $n fTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pop_v $n ; ^ pop_v 0
->amh $n[cs=acc] fTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** possess_v $a $n ; ^ possess_v 0
->amh $a[cs=acc] $n gnzb_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** possess_v $n ; ^ possess_v 0
->amh $n[cs=acc] gnzb_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** postpone_v $a $n ; ^ postpone_v 0
->amh $a[cs=acc] $n 'lf_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** postpone_v $n ; ^ postpone_v 0
->amh $n[cs=acc] 'lf_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** postpone_v $a $n ; ^ postpone_v 0
->amh $a[cs=acc] $n zgy*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** postpone_v $n ; ^ postpone_v 0
->amh $n[cs=acc] zgy*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pound_v $a $n ; ^ pound_v 0
->amh $a[cs=acc] $n dqW_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pound_v $n ; ^ pound_v 0
->amh $n[cs=acc] dqW_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pound_v $a $n ; ^ pound_v 0
->amh $a[cs=acc] $n dqq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pound_v $n ; ^ pound_v 0
->amh $n[cs=acc] dqq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pound_v $a $n ; ^ pound_v 0
->amh $a[cs=acc] $n wqT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pound_v $n ; ^ pound_v 0
->amh $n[cs=acc] wqT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pour_v $a $n ; ^ pour_v 0
->amh $a[cs=acc] $n fss_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pour_v $n ; ^ pour_v 0
->amh $n[cs=acc] fss_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pout_v $a $n ; ^ pout_v 0
->amh $a[cs=acc] $n bql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pout_v $n ; ^ pout_v 0
->amh $n[cs=acc] bql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** praise_v $a $n ; ^ praise_v 0
->amh $a[cs=acc] $n msgn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** praise_v $n ; ^ praise_v 0
->amh $n[cs=acc] msgn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** praise_v $a $n ; ^ praise_v 0
->amh $a[cs=acc] $n wd_s_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** praise_v $n ; ^ praise_v 0
->amh $n[cs=acc] wd_s_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pray_v $a $n ; ^ pray_v 0
->amh $a[cs=acc] $n Sl_y_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pray_v $n ; ^ pray_v 0
->amh $n[cs=acc] Sl_y_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** preach_v $a $n ; ^ preach_v 0
->amh $a[cs=acc] $n sbk_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** preach_v $n ; ^ preach_v 0
->amh $n[cs=acc] sbk_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prefer_v $a $n ; ^ prefer_v 0
->amh $a[cs=acc] $n mrT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prefer_v $n ; ^ prefer_v 0
->amh $n[cs=acc] mrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prefer_v $a $n ; ^ prefer_v 0
->amh $a[cs=acc] $n l'q_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prefer_v $n ; ^ prefer_v 0
->amh $n[cs=acc] l'q_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prefer_v $a $n ; ^ prefer_v 0
->amh $a[cs=acc] $n blT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prefer_v $n ; ^ prefer_v 0
->amh $n[cs=acc] blT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prepare_v $a $n ; ^ prepare_v 0
->amh $a[cs=acc] $n zgaj*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prepare_v $n ; ^ prepare_v 0
->amh $n[cs=acc] zgaj*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prepare_v $a $n ; ^ prepare_v 0
->amh $a[cs=acc] $n snad'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prepare_v $n ; ^ prepare_v 0
->amh $n[cs=acc] snad'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** present_v $a $n ; ^ present_v 0
->amh $a[cs=acc] $n qrb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** present_v $n ; ^ present_v 0
->amh $n[cs=acc] qrb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** present_v $a $n ; ^ present_v 0
->amh $a[cs=acc] $n 'y*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** present_v $n ; ^ present_v 0
->amh $n[cs=acc] 'y*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** preserve_v $a $n ; ^ preserve_v 0
->amh $a[cs=acc] $n qWy_*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** preserve_v $n ; ^ preserve_v 0
->amh $n[cs=acc] qWy_*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** press_v $a $n ; ^ press_v 0
->amh $a[cs=acc] $n C'n_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** press_v $n ; ^ press_v 0
->amh $n[cs=acc] C'n_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** press_v $a $n ; ^ press_v 0
->amh $a[cs=acc] $n gf'_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** press_v $n ; ^ press_v 0
->amh $n[cs=acc] gf'_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** presume_v $a $n ; ^ presume_v 0
->amh $a[cs=acc] $n gm_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** presume_v $n ; ^ presume_v 0
->amh $n[cs=acc] gm_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pretend_v $a $n ; ^ pretend_v 0
->amh $a[cs=acc] $n q'T'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pretend_v $n ; ^ pretend_v 0
->amh $n[cs=acc] q'T'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pretend_v $a $n ; ^ pretend_v 0
->amh $a[cs=acc] $n msl_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pretend_v $n ; ^ pretend_v 0
->amh $n[cs=acc] msl_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prevent_v $a $n ; ^ prevent_v 0
->amh $a[cs=acc] $n ns'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prevent_v $n ; ^ prevent_v 0
->amh $n[cs=acc] ns'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prevent_v $a $n ; ^ prevent_v 0
->amh $a[cs=acc] $n klkl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prevent_v $n ; ^ prevent_v 0
->amh $n[cs=acc] klkl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prick_v $a $n ; ^ prick_v 0
->amh $a[cs=acc] $n wg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prick_v $n ; ^ prick_v 0
->amh $n[cs=acc] wg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prick_v $a $n ; ^ prick_v 0
->amh $a[cs=acc] $n garT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prick_v $n ; ^ prick_v 0
->amh $n[cs=acc] garT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** print_v $a $n ; ^ print_v 0
->amh $a[cs=acc] $n 't_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** print_v $n ; ^ print_v 0
->amh $n[cs=acc] 't_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** produce_v $a $n ; ^ produce_v 0
->amh $a[cs=acc] $n gN*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** produce_v $n ; ^ produce_v 0
->amh $n[cs=acc] gN*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** produce_v $a $n ; ^ produce_v 0
->amh $a[cs=acc] $n flq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** produce_v $n ; ^ produce_v 0
->amh $n[cs=acc] flq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** produce_v $a $n ; ^ produce_v 0
->amh $a[cs=acc] $n mrt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** produce_v $n ; ^ produce_v 0
->amh $n[cs=acc] mrt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** profane_v $a $n ; ^ profane_v 0
->amh $a[cs=acc] $n rks_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** profane_v $n ; ^ profane_v 0
->amh $n[cs=acc] rks_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** profit_v $a $n ; ^ profit_v 0
->amh $a[cs=acc] $n ksb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** profit_v $n ; ^ profit_v 0
->amh $n[cs=acc] ksb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $a $n ; ^ project_v 0
->amh $a[cs=acc] $n fnTr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $n ; ^ project_v 0
->amh $n[cs=acc] fnTr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $a $n ; ^ project_v 0
->amh $a[cs=acc] $n fnTq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $n ; ^ project_v 0
->amh $n[cs=acc] fnTq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $a $n ; ^ project_v 0
->amh $a[cs=acc] $n 'q_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $n ; ^ project_v 0
->amh $n[cs=acc] 'q_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $a $n ; ^ project_v 0
->amh $a[cs=acc] $n fnTr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** project_v $n ; ^ project_v 0
->amh $n[cs=acc] fnTr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prolong_v $a $n ; ^ prolong_v 0
->amh $a[cs=acc] $n rzm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prolong_v $n ; ^ prolong_v 0
->amh $n[cs=acc] rzm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** promote_v $a $n ; ^ promote_v 0
->amh $a[cs=acc] $n xwm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** promote_v $n ; ^ promote_v 0
->amh $n[cs=acc] xwm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** promote_v $a $n ; ^ promote_v 0
->amh $a[cs=acc] $n 'dg_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** promote_v $n ; ^ promote_v 0
->amh $n[cs=acc] 'dg_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** propagate_v $a $n ; ^ propagate_v 0
->amh $a[cs=acc] $n sraC*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** propagate_v $n ; ^ propagate_v 0
->amh $n[cs=acc] sraC*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prosper_v $a $n ; ^ prosper_v 0
->amh $a[cs=acc] $n drj*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prosper_v $n ; ^ prosper_v 0
->amh $n[cs=acc] drj*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prostitute_v $a $n ; ^ prostitute_v 0
->amh $a[cs=acc] $n xrmWT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prostitute_v $n ; ^ prostitute_v 0
->amh $n[cs=acc] xrmWT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prostrate_v $a $n ; ^ prostrate_v 0
->amh $a[cs=acc] $n sgd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prostrate_v $n ; ^ prostrate_v 0
->amh $n[cs=acc] sgd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prove_v $a $n ; ^ prove_v 0
->amh $a[cs=acc] $n Ty_q_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prove_v $n ; ^ prove_v 0
->amh $n[cs=acc] Ty_q_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prune_v $a $n ; ^ prune_v 0
->amh $a[cs=acc] $n gr_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** prune_v $n ; ^ prune_v 0
->amh $n[cs=acc] gr_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** publicize_v $a $n ; ^ publicize_v 0
->amh $a[cs=acc] $n sraC*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** publicize_v $n ; ^ publicize_v 0
->amh $n[cs=acc] sraC*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** puff_v $a $n ; ^ puff_v 0
->amh $a[cs=acc] $n qs_t_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** puff_v $n ; ^ puff_v 0
->amh $n[cs=acc] qs_t_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pull_v $a $n ; ^ pull_v 0
->amh $a[cs=acc] $n gWt_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pull_v $n ; ^ pull_v 0
->amh $n[cs=acc] gWt_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pull_v $a $n ; ^ pull_v 0
->amh $a[cs=acc] $n s'b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pull_v $n ; ^ pull_v 0
->amh $n[cs=acc] s'b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pulverize_v $a $n ; ^ pulverize_v 0
->amh $a[cs=acc] $n dqW_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pulverize_v $n ; ^ pulverize_v 0
->amh $n[cs=acc] dqW_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** punish_v $a $n ; ^ punish_v 0
->amh $a[cs=acc] $n qWnTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** punish_v $n ; ^ punish_v 0
->amh $n[cs=acc] qWnTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** punish_v $a $n ; ^ punish_v 0
->amh $a[cs=acc] $n qT'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** punish_v $n ; ^ punish_v 0
->amh $n[cs=acc] qT'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purchase_v $a $n ; ^ purchase_v 0
->amh $a[cs=acc] $n gz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purchase_v $n ; ^ purchase_v 0
->amh $n[cs=acc] gz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purify_v $a $n ; ^ purify_v 0
->amh $a[cs=acc] $n Tr'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purify_v $n ; ^ purify_v 0
->amh $n[cs=acc] Tr'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purify_v $a $n ; ^ purify_v 0
->amh $a[cs=acc] $n Tl_l_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purify_v $n ; ^ purify_v 0
->amh $n[cs=acc] Tl_l_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purr_v $a $n ; ^ purr_v 0
->amh $a[cs=acc] $n kW|rfrf_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** purr_v $n ; ^ purr_v 0
->amh $n[cs=acc] kW|rfrf_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pursue_v $a $n ; ^ pursue_v 0
->amh $a[cs=acc] $n kt_l_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** pursue_v $n ; ^ pursue_v 0
->amh $n[cs=acc] kt_l_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** push_v $a $n ; ^ push_v 0
->amh $a[cs=acc] $n gf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** push_v $n ; ^ push_v 0
->amh $n[cs=acc] gf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** put_v $a $n ; ^ put_v 0
->amh $a[cs=acc] $n Cm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** put_v $n ; ^ put_v 0
->amh $n[cs=acc] Cm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** put_v $a $n ; ^ put_v 0
->amh $a[cs=acc] $n ktt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** put_v $n ; ^ put_v 0
->amh $n[cs=acc] ktt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** putrefy_v $a $n ; ^ putrefy_v 0
->amh $a[cs=acc] $n Tnb'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** putrefy_v $n ; ^ putrefy_v 0
->amh $n[cs=acc] Tnb'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** putrefy_v $a $n ; ^ putrefy_v 0
->amh $a[cs=acc] $n bxqT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** putrefy_v $n ; ^ putrefy_v 0
->amh $n[cs=acc] bxqT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** puzzle_v $a $n ; ^ puzzle_v 0
->amh $a[cs=acc] $n dnagr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** puzzle_v $n ; ^ puzzle_v 0
->amh $n[cs=acc] dnagr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** question_v $a $n ; ^ question_v 0
->amh $a[cs=acc] $n Ty_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** question_v $n ; ^ question_v 0
->amh $n[cs=acc] Ty_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** quicken_v $a $n ; ^ quicken_v 0
->amh $a[cs=acc] $n fTn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** quicken_v $n ; ^ quicken_v 0
->amh $n[cs=acc] fTn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** quote_v $a $n ; ^ quote_v 0
->amh $a[cs=acc] $n Tqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** quote_v $n ; ^ quote_v 0
->amh $n[cs=acc] Tqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rain_v $a $n ; ^ rain_v 0
->amh $a[cs=acc] $n blg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rain_v $n ; ^ rain_v 0
->amh $n[cs=acc] blg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rain_v $a $n ; ^ rain_v 0
->amh $a[cs=acc] $n znb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rain_v $n ; ^ rain_v 0
->amh $n[cs=acc] znb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** raise_v $a $n ; ^ raise_v 0
->amh $a[cs=acc] $n bql_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** raise_v $n ; ^ raise_v 0
->amh $n[cs=acc] bql_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** raise_v $a $n ; ^ raise_v 0
->amh $a[cs=acc] $n wT'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** raise_v $n ; ^ raise_v 0
->amh $n[cs=acc] wT'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** raise_v $a $n ; ^ raise_v 0
->amh $a[cs=acc] $n Cm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** raise_v $n ; ^ raise_v 0
->amh $n[cs=acc] Cm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rake_v $a $n ; ^ rake_v 0
->amh $a[cs=acc] $n n|gWall_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rake_v $n ; ^ rake_v 0
->amh $n[cs=acc] n|gWall_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ransack_v $a $n ; ^ ransack_v 0
->amh $a[cs=acc] $n zrf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ransack_v $n ; ^ ransack_v 0
->amh $n[cs=acc] zrf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ransom_v $a $n ; ^ ransom_v 0
->amh $a[cs=acc] $n waj*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ransom_v $n ; ^ ransom_v 0
->amh $n[cs=acc] waj*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rape_v $a $n ; ^ rape_v 0
->amh $a[cs=acc] $n df'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rape_v $n ; ^ rape_v 0
->amh $n[cs=acc] df'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rate_v $a $n ; ^ rate_v 0
->amh $a[cs=acc] $n gm_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rate_v $n ; ^ rate_v 0
->amh $n[cs=acc] gm_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ratify_v $a $n ; ^ ratify_v 0
->amh $a[cs=acc] $n Sdq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ratify_v $n ; ^ ratify_v 0
->amh $n[cs=acc] Sdq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ratify_v $a $n ; ^ ratify_v 0
->amh $a[cs=acc] $n Sn'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ratify_v $n ; ^ ratify_v 0
->amh $n[cs=acc] Sn'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rattle_v $a $n ; ^ rattle_v 0
->amh $a[cs=acc] $n n|gCagC_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rattle_v $n ; ^ rattle_v 0
->amh $n[cs=acc] n|gCagC_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ravish_v $a $n ; ^ ravish_v 0
->amh $a[cs=acc] $n mWClf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ravish_v $n ; ^ ravish_v 0
->amh $n[cs=acc] mWClf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reach_v $a $n ; ^ reach_v 0
->amh $a[cs=acc] $n drs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reach_v $n ; ^ reach_v 0
->amh $n[cs=acc] drs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** read_v $a $n ; ^ read_v 0
->amh $a[cs=acc] $n nb_b_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** read_v $n ; ^ read_v 0
->amh $n[cs=acc] nb_b_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** realize_v $a $n ; ^ realize_v 0
->amh $a[cs=acc] $n 'wq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** realize_v $n ; ^ realize_v 0
->amh $n[cs=acc] 'wq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reap_v $a $n ; ^ reap_v 0
->amh $a[cs=acc] $n lqm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reap_v $n ; ^ reap_v 0
->amh $n[cs=acc] lqm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reassemble_v $a $n ; ^ reassemble_v 0
->amh $a[cs=acc] $n gTm_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reassemble_v $n ; ^ reassemble_v 0
->amh $n[cs=acc] gTm_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rebuke_v $a $n ; ^ rebuke_v 0
->amh $a[cs=acc] $n zlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rebuke_v $n ; ^ rebuke_v 0
->amh $n[cs=acc] zlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** receive_v $a $n ; ^ receive_v 0
->amh $a[cs=acc] $n rkb_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** receive_v $n ; ^ receive_v 0
->amh $n[cs=acc] rkb_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** receive_v $a $n ; ^ receive_v 0
->amh $a[cs=acc] $n qb_l_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** receive_v $n ; ^ receive_v 0
->amh $n[cs=acc] qb_l_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recite_v $a $n ; ^ recite_v 0
->amh $a[cs=acc] $n dgm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recite_v $n ; ^ recite_v 0
->amh $n[cs=acc] dgm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recognize_v $a $n ; ^ recognize_v 0
->amh $a[cs=acc] $n ly_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recognize_v $n ; ^ recognize_v 0
->amh $n[cs=acc] ly_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recommend_v $a $n ; ^ recommend_v 0
->amh $a[cs=acc] $n 'C*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recommend_v $n ; ^ recommend_v 0
->amh $n[cs=acc] 'C*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $a $n ; ^ reconcile_v 0
->amh $a[cs=acc] $n 'r_q_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $n ; ^ reconcile_v 0
->amh $n[cs=acc] 'r_q_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $a $n ; ^ reconcile_v 0
->amh $a[cs=acc] $n qrb_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $n ; ^ reconcile_v 0
->amh $n[cs=acc] qrb_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $a $n ; ^ reconcile_v 0
->amh $a[cs=acc] $n qrb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $n ; ^ reconcile_v 0
->amh $n[cs=acc] qrb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $a $n ; ^ reconcile_v 0
->amh $a[cs=acc] $n sm'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reconcile_v $n ; ^ reconcile_v 0
->amh $n[cs=acc] sm'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** record_v $a $n ; ^ record_v 0
->amh $a[cs=acc] $n wrs_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** record_v $n ; ^ record_v 0
->amh $n[cs=acc] wrs_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** record_v $a $n ; ^ record_v 0
->amh $a[cs=acc] $n zgb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** record_v $n ; ^ record_v 0
->amh $n[cs=acc] zgb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recover_v $a $n ; ^ recover_v 0
->amh $a[cs=acc] $n d'n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recover_v $n ; ^ recover_v 0
->amh $n[cs=acc] d'n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rectify_v $a $n ; ^ rectify_v 0
->amh $a[cs=acc] $n 'k_l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rectify_v $n ; ^ rectify_v 0
->amh $n[cs=acc] 'k_l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recuperate_v $a $n ; ^ recuperate_v 0
->amh $a[cs=acc] $n Tnkr_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** recuperate_v $n ; ^ recuperate_v 0
->amh $n[cs=acc] Tnkr_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** redden_v $a $n ; ^ redden_v 0
->amh $a[cs=acc] $n ql'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** redden_v $n ; ^ redden_v 0
->amh $n[cs=acc] ql'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** redeem_v $a $n ; ^ redeem_v 0
->amh $a[cs=acc] $n d'n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** redeem_v $n ; ^ redeem_v 0
->amh $n[cs=acc] d'n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $a $n ; ^ reduce_v 0
->amh $a[cs=acc] $n nqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $n ; ^ reduce_v 0
->amh $n[cs=acc] nqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $a $n ; ^ reduce_v 0
->amh $a[cs=acc] $n 'ns_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $n ; ^ reduce_v 0
->amh $n[cs=acc] 'ns_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $a $n ; ^ reduce_v 0
->amh $a[cs=acc] $n qn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $n ; ^ reduce_v 0
->amh $n[cs=acc] qn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $a $n ; ^ reduce_v 0
->amh $a[cs=acc] $n 'ns_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reduce_v $n ; ^ reduce_v 0
->amh $n[cs=acc] 'ns_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refine_v $a $n ; ^ refine_v 0
->amh $a[cs=acc] $n nTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refine_v $n ; ^ refine_v 0
->amh $n[cs=acc] nTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refine_v $a $n ; ^ refine_v 0
->amh $a[cs=acc] $n nTr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refine_v $n ; ^ refine_v 0
->amh $n[cs=acc] nTr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refine_v $a $n ; ^ refine_v 0
->amh $a[cs=acc] $n ngWr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refine_v $n ; ^ refine_v 0
->amh $n[cs=acc] ngWr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reflect_v $a $n ; ^ reflect_v 0
->amh $a[cs=acc] $n n|Sbarq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reflect_v $n ; ^ reflect_v 0
->amh $n[cs=acc] n|Sbarq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refuse_v $a $n ; ^ refuse_v 0
->amh $a[cs=acc] $n Tmm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** refuse_v $n ; ^ refuse_v 0
->amh $n[cs=acc] Tmm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** register_v $a $n ; ^ register_v 0
->amh $a[cs=acc] $n mzgb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** register_v $n ; ^ register_v 0
->amh $n[cs=acc] mzgb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** regret_v $a $n ; ^ regret_v 0
->amh $a[cs=acc] $n qWC_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** regret_v $n ; ^ regret_v 0
->amh $n[cs=acc] qWC_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** regurgitate_v $a $n ; ^ regurgitate_v 0
->amh $a[cs=acc] $n qrx*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** regurgitate_v $n ; ^ regurgitate_v 0
->amh $n[cs=acc] qrx*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rehearse_v $a $n ; ^ rehearse_v 0
->amh $a[cs=acc] $n lz_b_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rehearse_v $n ; ^ rehearse_v 0
->amh $n[cs=acc] lz_b_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reimburse_v $a $n ; ^ reimburse_v 0
->amh $a[cs=acc] $n tk_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reimburse_v $n ; ^ reimburse_v 0
->amh $n[cs=acc] tk_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reinforce_v $a $n ; ^ reinforce_v 0
->amh $a[cs=acc] $n Tnkr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reinforce_v $n ; ^ reinforce_v 0
->amh $n[cs=acc] Tnkr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reinforce_v $a $n ; ^ reinforce_v 0
->amh $a[cs=acc] $n Tnkr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reinforce_v $n ; ^ reinforce_v 0
->amh $n[cs=acc] Tnkr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reject_v $a $n ; ^ reject_v 0
->amh $a[cs=acc] $n 'bl_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reject_v $n ; ^ reject_v 0
->amh $n[cs=acc] 'bl_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relax_v $a $n ; ^ relax_v 0
->amh $a[cs=acc] $n zn'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relax_v $n ; ^ relax_v 0
->amh $n[cs=acc] zn'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relax_v $a $n ; ^ relax_v 0
->amh $a[cs=acc] $n l'l'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relax_v $n ; ^ relax_v 0
->amh $n[cs=acc] l'l'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relax_v $a $n ; ^ relax_v 0
->amh $a[cs=acc] $n l'l'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relax_v $n ; ^ relax_v 0
->amh $n[cs=acc] l'l'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** release_v $a $n ; ^ release_v 0
->amh $a[cs=acc] $n ft'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** release_v $n ; ^ release_v 0
->amh $n[cs=acc] ft'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** release_v $a $n ; ^ release_v 0
->amh $a[cs=acc] $n lqq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** release_v $n ; ^ release_v 0
->amh $n[cs=acc] lqq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relieve_v $a $n ; ^ relieve_v 0
->amh $a[cs=acc] $n qy_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relieve_v $n ; ^ relieve_v 0
->amh $n[cs=acc] qy_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relish_v $a $n ; ^ relish_v 0
->amh $a[cs=acc] $n kWmkWm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** relish_v $n ; ^ relish_v 0
->amh $n[cs=acc] kWmkWm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remember_v $a $n ; ^ remember_v 0
->amh $a[cs=acc] $n 'ws_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remember_v $n ; ^ remember_v 0
->amh $n[cs=acc] 'ws_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remind_v $a $n ; ^ remind_v 0
->amh $a[cs=acc] $n 's_b_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remind_v $n ; ^ remind_v 0
->amh $n[cs=acc] 's_b_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remove_v $a $n ; ^ remove_v 0
->amh $a[cs=acc] $n r'q_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remove_v $n ; ^ remove_v 0
->amh $n[cs=acc] r'q_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remove_v $a $n ; ^ remove_v 0
->amh $a[cs=acc] $n qrf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** remove_v $n ; ^ remove_v 0
->amh $n[cs=acc] qrf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** renew_v $a $n ; ^ renew_v 0
->amh $a[cs=acc] $n 'd_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** renew_v $n ; ^ renew_v 0
->amh $n[cs=acc] 'd_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** renounce_v $a $n ; ^ renounce_v 0
->amh $a[cs=acc] $n k'd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** renounce_v $n ; ^ renounce_v 0
->amh $n[cs=acc] k'd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repair_v $a $n ; ^ repair_v 0
->amh $a[cs=acc] $n gTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repair_v $n ; ^ repair_v 0
->amh $n[cs=acc] gTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repair_v $a $n ; ^ repair_v 0
->amh $a[cs=acc] $n Tg_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repair_v $n ; ^ repair_v 0
->amh $n[cs=acc] Tg_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repair_v $a $n ; ^ repair_v 0
->amh $a[cs=acc] $n bj_*_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repair_v $n ; ^ repair_v 0
->amh $n[cs=acc] bj_*_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repeat_v $a $n ; ^ repeat_v 0
->amh $a[cs=acc] $n dgm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repeat_v $n ; ^ repeat_v 0
->amh $n[cs=acc] dgm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repent_v $a $n ; ^ repent_v 0
->amh $a[cs=acc] $n Tt_t_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repent_v $n ; ^ repent_v 0
->amh $n[cs=acc] Tt_t_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repent_v $a $n ; ^ repent_v 0
->amh $a[cs=acc] $n SS_t_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repent_v $n ; ^ repent_v 0
->amh $n[cs=acc] SS_t_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** report_v $a $n ; ^ report_v 0
->amh $a[cs=acc] $n wg'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** report_v $n ; ^ report_v 0
->amh $n[cs=acc] wg'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repose_v $a $n ; ^ repose_v 0
->amh $a[cs=acc] $n 'rf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repose_v $n ; ^ repose_v 0
->amh $n[cs=acc] 'rf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** represent_v $a $n ; ^ represent_v 0
->amh $a[cs=acc] $n wk_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** represent_v $n ; ^ represent_v 0
->amh $n[cs=acc] wk_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repress_v $a $n ; ^ repress_v 0
->amh $a[cs=acc] $n gt'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repress_v $n ; ^ repress_v 0
->amh $n[cs=acc] gt'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reprimand_v $a $n ; ^ reprimand_v 0
->amh $a[cs=acc] $n wqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reprimand_v $n ; ^ reprimand_v 0
->amh $n[cs=acc] wqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reprimand_v $a $n ; ^ reprimand_v 0
->amh $a[cs=acc] $n zlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reprimand_v $n ; ^ reprimand_v 0
->amh $n[cs=acc] zlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reproach_v $a $n ; ^ reproach_v 0
->amh $a[cs=acc] $n wqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reproach_v $n ; ^ reproach_v 0
->amh $n[cs=acc] wqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reproach_v $a $n ; ^ reproach_v 0
->amh $a[cs=acc] $n zlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reproach_v $n ; ^ reproach_v 0
->amh $n[cs=acc] zlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repudiate_v $a $n ; ^ repudiate_v 0
->amh $a[cs=acc] $n k'd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** repudiate_v $n ; ^ repudiate_v 0
->amh $n[cs=acc] k'd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rescue_v $a $n ; ^ rescue_v 0
->amh $a[cs=acc] $n d'n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rescue_v $n ; ^ rescue_v 0
->amh $n[cs=acc] d'n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resemble_v $a $n ; ^ resemble_v 0
->amh $a[cs=acc] $n msl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resemble_v $n ; ^ resemble_v 0
->amh $n[cs=acc] msl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resent_v $a $n ; ^ resent_v 0
->amh $a[cs=acc] $n xm_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resent_v $n ; ^ resent_v 0
->amh $n[cs=acc] xm_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resign_v $a $n ; ^ resign_v 0
->amh $a[cs=acc] $n snbt_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resign_v $n ; ^ resign_v 0
->amh $n[cs=acc] snbt_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resist_v $a $n ; ^ resist_v 0
->amh $a[cs=acc] $n qwm_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resist_v $n ; ^ resist_v 0
->amh $n[cs=acc] qwm_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resonate_v $a $n ; ^ resonate_v 0
->amh $a[cs=acc] $n nb_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** resonate_v $n ; ^ resonate_v 0
->amh $n[cs=acc] nb_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** respect_v $a $n ; ^ respect_v 0
->amh $a[cs=acc] $n fr'_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** respect_v $n ; ^ respect_v 0
->amh $n[cs=acc] fr'_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rest_v $a $n ; ^ rest_v 0
->amh $a[cs=acc] $n 'rf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rest_v $n ; ^ rest_v 0
->amh $n[cs=acc] 'rf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rest_v $a $n ; ^ rest_v 0
->amh $a[cs=acc] $n dg_f_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rest_v $n ; ^ rest_v 0
->amh $n[cs=acc] dg_f_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** retail_v $a $n ; ^ retail_v 0
->amh $a[cs=acc] $n xq_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** retail_v $n ; ^ retail_v 0
->amh $n[cs=acc] xq_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** retail_v $a $n ; ^ retail_v 0
->amh $a[cs=acc] $n crcr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** retail_v $n ; ^ retail_v 0
->amh $n[cs=acc] crcr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** retard_v $a $n ; ^ retard_v 0
->amh $a[cs=acc] $n qWy_*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** retard_v $n ; ^ retard_v 0
->amh $n[cs=acc] qWy_*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** return_v $a $n ; ^ return_v 0
->amh $a[cs=acc] $n ml_s_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** return_v $n ; ^ return_v 0
->amh $n[cs=acc] ml_s_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reveal_v $a $n ; ^ reveal_v 0
->amh $a[cs=acc] $n ks_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reveal_v $n ; ^ reveal_v 0
->amh $n[cs=acc] ks_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reverberate_v $a $n ; ^ reverberate_v 0
->amh $a[cs=acc] $n gb'_v[as=rc,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** reverberate_v $n ; ^ reverberate_v 0
->amh $n[cs=acc] gb'_v[as=rc,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revere_v $a $n ; ^ revere_v 0
->amh $a[cs=acc] $n kbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revere_v $n ; ^ revere_v 0
->amh $n[cs=acc] kbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** review_v $a $n ; ^ review_v 0
->amh $a[cs=acc] $n gWbN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** review_v $n ; ^ review_v 0
->amh $n[cs=acc] gWbN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revive_v $a $n ; ^ revive_v 0
->amh $a[cs=acc] $n nq'_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revive_v $n ; ^ revive_v 0
->amh $n[cs=acc] nq'_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revolt_v $a $n ; ^ revolt_v 0
->amh $a[cs=acc] $n 'mT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revolt_v $n ; ^ revolt_v 0
->amh $n[cs=acc] 'mT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revolve_v $a $n ; ^ revolve_v 0
->amh $a[cs=acc] $n zwr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** revolve_v $n ; ^ revolve_v 0
->amh $n[cs=acc] zwr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rhyme_v $a $n ; ^ rhyme_v 0
->amh $a[cs=acc] $n gTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rhyme_v $n ; ^ rhyme_v 0
->amh $n[cs=acc] gTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rhyme_v $a $n ; ^ rhyme_v 0
->amh $a[cs=acc] $n sn_N_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rhyme_v $n ; ^ rhyme_v 0
->amh $n[cs=acc] sn_N_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** riddle_v $a $n ; ^ riddle_v 0
->amh $a[cs=acc] $n bs'_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** riddle_v $n ; ^ riddle_v 0
->amh $n[cs=acc] bs'_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ridicule_v $a $n ; ^ ridicule_v 0
->amh $a[cs=acc] $n jyl_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ridicule_v $n ; ^ ridicule_v 0
->amh $n[cs=acc] jyl_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ring_v $a $n ; ^ ring_v 0
->amh $a[cs=acc] $n dw_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ring_v $n ; ^ ring_v 0
->amh $n[cs=acc] dw_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ring_v $a $n ; ^ ring_v 0
->amh $a[cs=acc] $n qaCl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ring_v $n ; ^ ring_v 0
->amh $n[cs=acc] qaCl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rinse_v $a $n ; ^ rinse_v 0
->amh $a[cs=acc] $n lqlq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rinse_v $n ; ^ rinse_v 0
->amh $n[cs=acc] lqlq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $a $n ; ^ rip_v 0
->amh $a[cs=acc] $n bWC_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $n ; ^ rip_v 0
->amh $n[cs=acc] bWC_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $a $n ; ^ rip_v 0
->amh $a[cs=acc] $n qWnSl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $n ; ^ rip_v 0
->amh $n[cs=acc] qWnSl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $a $n ; ^ rip_v 0
->amh $a[cs=acc] $n xrkt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $n ; ^ rip_v 0
->amh $n[cs=acc] xrkt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $a $n ; ^ rip_v 0
->amh $a[cs=acc] $n qdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rip_v $n ; ^ rip_v 0
->amh $n[cs=acc] qdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roam_v $a $n ; ^ roam_v 0
->amh $a[cs=acc] $n watt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roam_v $n ; ^ roam_v 0
->amh $n[cs=acc] watt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roam_v $a $n ; ^ roam_v 0
->amh $a[cs=acc] $n w|dldl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roam_v $n ; ^ roam_v 0
->amh $n[cs=acc] w|dldl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roar_v $a $n ; ^ roar_v 0
->amh $a[cs=acc] $n gs'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roar_v $n ; ^ roar_v 0
->amh $n[cs=acc] gs'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roast_v $a $n ; ^ roast_v 0
->amh $a[cs=acc] $n Tbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roast_v $n ; ^ roast_v 0
->amh $n[cs=acc] Tbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roast_v $a $n ; ^ roast_v 0
->amh $a[cs=acc] $n qWl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roast_v $n ; ^ roast_v 0
->amh $n[cs=acc] qWl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rob_v $a $n ; ^ rob_v 0
->amh $a[cs=acc] $n nTq_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rob_v $n ; ^ rob_v 0
->amh $n[cs=acc] nTq_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $a $n ; ^ roll_v 0
->amh $a[cs=acc] $n dfTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $n ; ^ roll_v 0
->amh $n[cs=acc] dfTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $a $n ; ^ roll_v 0
->amh $a[cs=acc] $n mlml_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $n ; ^ roll_v 0
->amh $n[cs=acc] mlml_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $a $n ; ^ roll_v 0
->amh $a[cs=acc] $n n|kball_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $n ; ^ roll_v 0
->amh $n[cs=acc] n|kball_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $a $n ; ^ roll_v 0
->amh $a[cs=acc] $n d|bWlbWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** roll_v $n ; ^ roll_v 0
->amh $n[cs=acc] d|bWlbWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rot_v $a $n ; ^ rot_v 0
->amh $a[cs=acc] $n gm'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rot_v $n ; ^ rot_v 0
->amh $n[cs=acc] gm'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rot_v $a $n ; ^ rot_v 0
->amh $a[cs=acc] $n bsbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rot_v $n ; ^ rot_v 0
->amh $n[cs=acc] bsbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rotate_v $a $n ; ^ rotate_v 0
->amh $a[cs=acc] $n zwr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rotate_v $n ; ^ rotate_v 0
->amh $n[cs=acc] zwr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** round_v $a $n ; ^ round_v 0
->amh $a[cs=acc] $n d|bWlbWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** round_v $n ; ^ round_v 0
->amh $n[cs=acc] d|bWlbWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rove_v $a $n ; ^ rove_v 0
->amh $a[cs=acc] $n n|kratt_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rove_v $n ; ^ rove_v 0
->amh $n[cs=acc] n|kratt_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** row_v $a $n ; ^ row_v 0
->amh $a[cs=acc] $n qzf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** row_v $n ; ^ row_v 0
->amh $n[cs=acc] qzf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $a $n ; ^ rub_v 0
->amh $a[cs=acc] $n ft_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $n ; ^ rub_v 0
->amh $n[cs=acc] ft_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $a $n ; ^ rub_v 0
->amh $a[cs=acc] $n 'x*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $n ; ^ rub_v 0
->amh $n[cs=acc] 'x*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $a $n ; ^ rub_v 0
->amh $a[cs=acc] $n fgfg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $n ; ^ rub_v 0
->amh $n[cs=acc] fgfg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $a $n ; ^ rub_v 0
->amh $a[cs=acc] $n f'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rub_v $n ; ^ rub_v 0
->amh $n[cs=acc] f'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ruffle_v $a $n ; ^ ruffle_v 0
->amh $a[cs=acc] $n qfrr_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ruffle_v $n ; ^ ruffle_v 0
->amh $n[cs=acc] qfrr_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ruin_v $a $n ; ^ ruin_v 0
->amh $a[cs=acc] $n frs_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ruin_v $n ; ^ ruin_v 0
->amh $n[cs=acc] frs_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rule_v $a $n ; ^ rule_v 0
->amh $a[cs=acc] $n smr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rule_v $n ; ^ rule_v 0
->amh $n[cs=acc] smr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** run_v $a $n ; ^ run_v 0
->amh $a[cs=acc] $n rwT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** run_v $n ; ^ run_v 0
->amh $n[cs=acc] rwT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rush_v $a $n ; ^ rush_v 0
->amh $a[cs=acc] $n Tdf_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rush_v $n ; ^ rush_v 0
->amh $n[cs=acc] Tdf_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rush_v $a $n ; ^ rush_v 0
->amh $a[cs=acc] $n q|lblb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rush_v $n ; ^ rush_v 0
->amh $n[cs=acc] q|lblb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rush_v $a $n ; ^ rush_v 0
->amh $a[cs=acc] $n xkxk_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rush_v $n ; ^ rush_v 0
->amh $n[cs=acc] xkxk_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rust_v $a $n ; ^ rust_v 0
->amh $a[cs=acc] $n z'g_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rust_v $n ; ^ rust_v 0
->amh $n[cs=acc] z'g_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rust_v $a $n ; ^ rust_v 0
->amh $a[cs=acc] $n z'g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** rust_v $n ; ^ rust_v 0
->amh $n[cs=acc] z'g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sack_v $a $n ; ^ sack_v 0
->amh $a[cs=acc] $n snbt_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sack_v $n ; ^ sack_v 0
->amh $n[cs=acc] snbt_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sacrifice_v $a $n ; ^ sacrifice_v 0
->amh $a[cs=acc] $n sw_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sacrifice_v $n ; ^ sacrifice_v 0
->amh $n[cs=acc] sw_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sadden_v $a $n ; ^ sadden_v 0
->amh $a[cs=acc] $n tk_z_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sadden_v $n ; ^ sadden_v 0
->amh $n[cs=acc] tk_z_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sanctify_v $a $n ; ^ sanctify_v 0
->amh $a[cs=acc] $n bark_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sanctify_v $n ; ^ sanctify_v 0
->amh $n[cs=acc] bark_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sanctify_v $a $n ; ^ sanctify_v 0
->amh $a[cs=acc] $n qd_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sanctify_v $n ; ^ sanctify_v 0
->amh $n[cs=acc] qd_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** satiate_v $a $n ; ^ satiate_v 0
->amh $a[cs=acc] $n Tgb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** satiate_v $n ; ^ satiate_v 0
->amh $n[cs=acc] Tgb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** satisfy_v $a $n ; ^ satisfy_v 0
->amh $a[cs=acc] $n x'r_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** satisfy_v $n ; ^ satisfy_v 0
->amh $n[cs=acc] x'r_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** satisfy_v $a $n ; ^ satisfy_v 0
->amh $a[cs=acc] $n rk'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** satisfy_v $n ; ^ satisfy_v 0
->amh $n[cs=acc] rk'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** save_v $a $n ; ^ save_v 0
->amh $a[cs=acc] $n Trqm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** save_v $n ; ^ save_v 0
->amh $n[cs=acc] Trqm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** save_v $a $n ; ^ save_v 0
->amh $a[cs=acc] $n trf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** save_v $n ; ^ save_v 0
->amh $n[cs=acc] trf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** save_v $a $n ; ^ save_v 0
->amh $a[cs=acc] $n d'n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** save_v $n ; ^ save_v 0
->amh $n[cs=acc] d'n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** saw_v $a $n ; ^ saw_v 0
->amh $a[cs=acc] $n krkr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** saw_v $n ; ^ saw_v 0
->amh $n[cs=acc] krkr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** say_v $a $n ; ^ say_v 0
->amh $a[cs=acc] $n b'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** say_v $n ; ^ say_v 0
->amh $n[cs=acc] b'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scale_v $a $n ; ^ scale_v 0
->amh $a[cs=acc] $n f'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scale_v $n ; ^ scale_v 0
->amh $n[cs=acc] f'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scare_v $a $n ; ^ scare_v 0
->amh $a[cs=acc] $n fr'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scare_v $n ; ^ scare_v 0
->amh $n[cs=acc] fr'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scare_v $a $n ; ^ scare_v 0
->amh $a[cs=acc] $n fr'_v[as=it,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scare_v $n ; ^ scare_v 0
->amh $n[cs=acc] fr'_v[as=it,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $a $n ; ^ scatter_v 0
->amh $a[cs=acc] $n n|TbTb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $n ; ^ scatter_v 0
->amh $n[cs=acc] n|TbTb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $a $n ; ^ scatter_v 0
->amh $a[cs=acc] $n bt_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $n ; ^ scatter_v 0
->amh $n[cs=acc] bt_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $a $n ; ^ scatter_v 0
->amh $a[cs=acc] $n naN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $n ; ^ scatter_v 0
->amh $n[cs=acc] naN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $a $n ; ^ scatter_v 0
->amh $a[cs=acc] $n nT_l_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $n ; ^ scatter_v 0
->amh $n[cs=acc] nT_l_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $a $n ; ^ scatter_v 0
->amh $a[cs=acc] $n mnqr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scatter_v $n ; ^ scatter_v 0
->amh $n[cs=acc] mnqr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scheme_v $a $n ; ^ scheme_v 0
->amh $a[cs=acc] $n Cwl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scheme_v $n ; ^ scheme_v 0
->amh $n[cs=acc] Cwl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scoop_v $a $n ; ^ scoop_v 0
->amh $a[cs=acc] $n 'fs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scoop_v $n ; ^ scoop_v 0
->amh $n[cs=acc] 'fs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scorch_v $a $n ; ^ scorch_v 0
->amh $a[cs=acc] $n lblb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scorch_v $n ; ^ scorch_v 0
->amh $n[cs=acc] lblb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scorch_v $a $n ; ^ scorch_v 0
->amh $a[cs=acc] $n n|gbgb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scorch_v $n ; ^ scorch_v 0
->amh $n[cs=acc] n|gbgb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** score_v $a $n ; ^ score_v 0
->amh $a[cs=acc] $n gb'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** score_v $n ; ^ score_v 0
->amh $n[cs=acc] gb'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scorn_v $a $n ; ^ scorn_v 0
->amh $a[cs=acc] $n n|qWaxx_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scorn_v $n ; ^ scorn_v 0
->amh $n[cs=acc] n|qWaxx_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scour_v $a $n ; ^ scour_v 0
->amh $a[cs=acc] $n fqfq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scour_v $n ; ^ scour_v 0
->amh $n[cs=acc] fqfq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $a $n ; ^ scrape_v 0
->amh $a[cs=acc] $n f'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $n ; ^ scrape_v 0
->amh $n[cs=acc] f'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $a $n ; ^ scrape_v 0
->amh $a[cs=acc] $n C'r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $n ; ^ scrape_v 0
->amh $n[cs=acc] C'r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $a $n ; ^ scrape_v 0
->amh $a[cs=acc] $n fgfg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $n ; ^ scrape_v 0
->amh $n[cs=acc] fgfg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $a $n ; ^ scrape_v 0
->amh $a[cs=acc] $n qff_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $n ; ^ scrape_v 0
->amh $n[cs=acc] qff_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $a $n ; ^ scrape_v 0
->amh $a[cs=acc] $n 'f_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrape_v $n ; ^ scrape_v 0
->amh $n[cs=acc] 'f_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scratch_v $a $n ; ^ scratch_v 0
->amh $a[cs=acc] $n C'r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scratch_v $n ; ^ scratch_v 0
->amh $n[cs=acc] C'r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scratch_v $a $n ; ^ scratch_v 0
->amh $a[cs=acc] $n fWk_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scratch_v $n ; ^ scratch_v 0
->amh $n[cs=acc] fWk_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scratch_v $a $n ; ^ scratch_v 0
->amh $a[cs=acc] $n bWaCr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scratch_v $n ; ^ scratch_v 0
->amh $n[cs=acc] bWaCr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrawl_v $a $n ; ^ scrawl_v 0
->amh $a[cs=acc] $n C'r_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrawl_v $n ; ^ scrawl_v 0
->amh $n[cs=acc] C'r_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scream_v $a $n ; ^ scream_v 0
->amh $a[cs=acc] $n gWr'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scream_v $n ; ^ scream_v 0
->amh $n[cs=acc] gWr'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scream_v $a $n ; ^ scream_v 0
->amh $a[cs=acc] $n Cwh_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scream_v $n ; ^ scream_v 0
->amh $n[cs=acc] Cwh_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** screech_v $a $n ; ^ screech_v 0
->amh $a[cs=acc] $n sqTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** screech_v $n ; ^ screech_v 0
->amh $n[cs=acc] sqTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** screen_v $a $n ; ^ screen_v 0
->amh $a[cs=acc] $n gard_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** screen_v $n ; ^ screen_v 0
->amh $n[cs=acc] gard_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** screen_v $a $n ; ^ screen_v 0
->amh $a[cs=acc] $n kl_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** screen_v $n ; ^ screen_v 0
->amh $n[cs=acc] kl_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scribble_v $a $n ; ^ scribble_v 0
->amh $a[cs=acc] $n C'r_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scribble_v $n ; ^ scribble_v 0
->amh $n[cs=acc] C'r_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scribble_v $a $n ; ^ scribble_v 0
->amh $a[cs=acc] $n C'r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scribble_v $n ; ^ scribble_v 0
->amh $n[cs=acc] C'r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scribble_v $a $n ; ^ scribble_v 0
->amh $a[cs=acc] $n mWaCr_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scribble_v $n ; ^ scribble_v 0
->amh $n[cs=acc] mWaCr_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrounge_v $a $n ; ^ scrounge_v 0
->amh $a[cs=acc] $n n|sWlsWl_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrounge_v $n ; ^ scrounge_v 0
->amh $n[cs=acc] n|sWlsWl_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrub_v $a $n ; ^ scrub_v 0
->amh $a[cs=acc] $n fqfq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrub_v $n ; ^ scrub_v 0
->amh $n[cs=acc] fqfq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrub_v $a $n ; ^ scrub_v 0
->amh $a[cs=acc] $n ft_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrub_v $n ; ^ scrub_v 0
->amh $n[cs=acc] ft_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrutinize_v $a $n ; ^ scrutinize_v 0
->amh $a[cs=acc] $n glbT_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scrutinize_v $n ; ^ scrutinize_v 0
->amh $n[cs=acc] glbT_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scuff_v $a $n ; ^ scuff_v 0
->amh $a[cs=acc] $n xkW_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** scuff_v $n ; ^ scuff_v 0
->amh $n[cs=acc] xkW_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sculpture_v $a $n ; ^ sculpture_v 0
->amh $a[cs=acc] $n qrS_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sculpture_v $n ; ^ sculpture_v 0
->amh $n[cs=acc] qrS_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seal_v $a $n ; ^ seal_v 0
->amh $a[cs=acc] $n 'x_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seal_v $n ; ^ seal_v 0
->amh $n[cs=acc] 'x_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** search_v $a $n ; ^ search_v 0
->amh $a[cs=acc] $n gWrgWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** search_v $n ; ^ search_v 0
->amh $n[cs=acc] gWrgWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** secure_v $a $n ; ^ secure_v 0
->amh $a[cs=acc] $n qrqb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** secure_v $n ; ^ secure_v 0
->amh $n[cs=acc] qrqb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** see_v $a $n ; ^ see_v 0
->amh $a[cs=acc] $n 'y*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** see_v $n ; ^ see_v 0
->amh $n[cs=acc] 'y*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seek_v $a $n ; ^ seek_v 0
->amh $a[cs=acc] $n fl_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seek_v $n ; ^ seek_v 0
->amh $n[cs=acc] fl_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seethe_v $a $n ; ^ seethe_v 0
->amh $a[cs=acc] $n n|fqfq_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seethe_v $n ; ^ seethe_v 0
->amh $n[cs=acc] n|fqfq_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seize_v $a $n ; ^ seize_v 0
->amh $a[cs=acc] $n bWC_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seize_v $n ; ^ seize_v 0
->amh $n[cs=acc] bWC_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seize_v $a $n ; ^ seize_v 0
->amh $a[cs=acc] $n y'z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** seize_v $n ; ^ seize_v 0
->amh $n[cs=acc] y'z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** select_v $a $n ; ^ select_v 0
->amh $a[cs=acc] $n mrT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** select_v $n ; ^ select_v 0
->amh $n[cs=acc] mrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sell_v $a $n ; ^ sell_v 0
->amh $a[cs=acc] $n xyT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sell_v $n ; ^ sell_v 0
->amh $n[cs=acc] xyT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** send_v $a $n ; ^ send_v 0
->amh $a[cs=acc] $n l'k_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** send_v $n ; ^ send_v 0
->amh $n[cs=acc] l'k_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** send_v $a $n ; ^ send_v 0
->amh $a[cs=acc] $n sdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** send_v $n ; ^ send_v 0
->amh $n[cs=acc] sdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** separate_v $a $n ; ^ separate_v 0
->amh $a[cs=acc] $n ly_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** separate_v $n ; ^ separate_v 0
->amh $n[cs=acc] ly_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** separate_v $a $n ; ^ separate_v 0
->amh $a[cs=acc] $n ly_*_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** separate_v $n ; ^ separate_v 0
->amh $n[cs=acc] ly_*_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $a $n ; ^ serve_v 0
->amh $a[cs=acc] $n glgl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $n ; ^ serve_v 0
->amh $n[cs=acc] glgl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $a $n ; ^ serve_v 0
->amh $a[cs=acc] $n qrb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $n ; ^ serve_v 0
->amh $n[cs=acc] qrb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $a $n ; ^ serve_v 0
->amh $a[cs=acc] $n sf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $n ; ^ serve_v 0
->amh $n[cs=acc] sf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $a $n ; ^ serve_v 0
->amh $a[cs=acc] $n kadm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** serve_v $n ; ^ serve_v 0
->amh $n[cs=acc] kadm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** set_v $a $n ; ^ set_v 0
->amh $a[cs=acc] $n rbrb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** set_v $n ; ^ set_v 0
->amh $n[cs=acc] rbrb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** set_v $a $n ; ^ set_v 0
->amh $a[cs=acc] $n 'k_l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** set_v $n ; ^ set_v 0
->amh $n[cs=acc] 'k_l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** settle_v $a $n ; ^ settle_v 0
->amh $a[cs=acc] $n sk_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** settle_v $n ; ^ settle_v 0
->amh $n[cs=acc] sk_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $a $n ; ^ shake_v 0
->amh $a[cs=acc] $n r'd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $n ; ^ shake_v 0
->amh $n[cs=acc] r'd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $a $n ; ^ shake_v 0
->amh $a[cs=acc] $n nqnq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $n ; ^ shake_v 0
->amh $n[cs=acc] nqnq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $a $n ; ^ shake_v 0
->amh $a[cs=acc] $n ng'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $n ; ^ shake_v 0
->amh $n[cs=acc] ng'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $a $n ; ^ shake_v 0
->amh $a[cs=acc] $n nqnq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $n ; ^ shake_v 0
->amh $n[cs=acc] nqnq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $a $n ; ^ shake_v 0
->amh $a[cs=acc] $n wzwz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $n ; ^ shake_v 0
->amh $n[cs=acc] wzwz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $a $n ; ^ shake_v 0
->amh $a[cs=acc] $n wzwz_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shake_v $n ; ^ shake_v 0
->amh $n[cs=acc] wzwz_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** share_v $a $n ; ^ share_v 0
->amh $a[cs=acc] $n gr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** share_v $n ; ^ share_v 0
->amh $n[cs=acc] gr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sharpen_v $a $n ; ^ sharpen_v 0
->amh $a[cs=acc] $n qrS_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sharpen_v $n ; ^ sharpen_v 0
->amh $n[cs=acc] qrS_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sharpen_v $a $n ; ^ sharpen_v 0
->amh $a[cs=acc] $n fC*_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sharpen_v $n ; ^ sharpen_v 0
->amh $n[cs=acc] fC*_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sharpen_v $a $n ; ^ sharpen_v 0
->amh $a[cs=acc] $n xwl_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sharpen_v $n ; ^ sharpen_v 0
->amh $n[cs=acc] xwl_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shave_v $a $n ; ^ shave_v 0
->amh $a[cs=acc] $n laC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shave_v $n ; ^ shave_v 0
->amh $n[cs=acc] laC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shear_v $a $n ; ^ shear_v 0
->amh $a[cs=acc] $n xl_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shear_v $n ; ^ shear_v 0
->amh $n[cs=acc] xl_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shell_v $a $n ; ^ shell_v 0
->amh $a[cs=acc] $n flfl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shell_v $n ; ^ shell_v 0
->amh $n[cs=acc] flfl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shelter_v $a $n ; ^ shelter_v 0
->amh $a[cs=acc] $n db_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shelter_v $n ; ^ shelter_v 0
->amh $n[cs=acc] db_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shelter_v $a $n ; ^ shelter_v 0
->amh $a[cs=acc] $n Tg'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shelter_v $n ; ^ shelter_v 0
->amh $n[cs=acc] Tg'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shelter_v $a $n ; ^ shelter_v 0
->amh $a[cs=acc] $n Tl_l_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shelter_v $n ; ^ shelter_v 0
->amh $n[cs=acc] Tl_l_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shift_v $a $n ; ^ shift_v 0
->amh $a[cs=acc] $n lw_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shift_v $n ; ^ shift_v 0
->amh $n[cs=acc] lw_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shine_v $a $n ; ^ shine_v 0
->amh $a[cs=acc] $n b|rqrq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shine_v $n ; ^ shine_v 0
->amh $n[cs=acc] b|rqrq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shiver_v $a $n ; ^ shiver_v 0
->amh $a[cs=acc] $n r|btbt_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shiver_v $n ; ^ shiver_v 0
->amh $n[cs=acc] r|btbt_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shock_v $a $n ; ^ shock_v 0
->amh $a[cs=acc] $n dngT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shock_v $n ; ^ shock_v 0
->amh $n[cs=acc] dngT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shock_v $a $n ; ^ shock_v 0
->amh $a[cs=acc] $n dngT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shock_v $n ; ^ shock_v 0
->amh $n[cs=acc] dngT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shock_v $a $n ; ^ shock_v 0
->amh $a[cs=acc] $n sq_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shock_v $n ; ^ shock_v 0
->amh $n[cs=acc] sq_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shorten_v $a $n ; ^ shorten_v 0
->amh $a[cs=acc] $n krkm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shorten_v $n ; ^ shorten_v 0
->amh $n[cs=acc] krkm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shorten_v $a $n ; ^ shorten_v 0
->amh $a[cs=acc] $n 'Tr_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shorten_v $n ; ^ shorten_v 0
->amh $n[cs=acc] 'Tr_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shout_v $a $n ; ^ shout_v 0
->amh $a[cs=acc] $n wk'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shout_v $n ; ^ shout_v 0
->amh $n[cs=acc] wk'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shove_v $a $n ; ^ shove_v 0
->amh $a[cs=acc] $n gf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shove_v $n ; ^ shove_v 0
->amh $n[cs=acc] gf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shove_v $a $n ; ^ shove_v 0
->amh $a[cs=acc] $n gftr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shove_v $n ; ^ shove_v 0
->amh $n[cs=acc] gftr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shovel_v $a $n ; ^ shovel_v 0
->amh $a[cs=acc] $n z'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shovel_v $n ; ^ shovel_v 0
->amh $n[cs=acc] z'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** show_v $a $n ; ^ show_v 0
->amh $a[cs=acc] $n 'y*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** show_v $n ; ^ show_v 0
->amh $n[cs=acc] 'y*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shower_v $a $n ; ^ shower_v 0
->amh $a[cs=acc] $n znb_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shower_v $n ; ^ shower_v 0
->amh $n[cs=acc] znb_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shrink_v $a $n ; ^ shrink_v 0
->amh $a[cs=acc] $n 'Tr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shrink_v $n ; ^ shrink_v 0
->amh $n[cs=acc] 'Tr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shrivel_v $a $n ; ^ shrivel_v 0
->amh $a[cs=acc] $n kWramt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shrivel_v $n ; ^ shrivel_v 0
->amh $n[cs=acc] kWramt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shroud_v $a $n ; ^ shroud_v 0
->amh $a[cs=acc] $n gnz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shroud_v $n ; ^ shroud_v 0
->amh $n[cs=acc] gnz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shuffle_v $a $n ; ^ shuffle_v 0
->amh $a[cs=acc] $n bw_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shuffle_v $n ; ^ shuffle_v 0
->amh $n[cs=acc] bw_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shuffle_v $a $n ; ^ shuffle_v 0
->amh $a[cs=acc] $n 'm_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shuffle_v $n ; ^ shuffle_v 0
->amh $n[cs=acc] 'm_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shut_v $a $n ; ^ shut_v 0
->amh $a[cs=acc] $n Cf_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shut_v $n ; ^ shut_v 0
->amh $n[cs=acc] Cf_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shy_v $a $n ; ^ shy_v 0
->amh $a[cs=acc] $n brgg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shy_v $n ; ^ shy_v 0
->amh $n[cs=acc] brgg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shy_v $a $n ; ^ shy_v 0
->amh $a[cs=acc] $n dnbr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** shy_v $n ; ^ shy_v 0
->amh $n[cs=acc] dnbr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sift_v $a $n ; ^ sift_v 0
->amh $a[cs=acc] $n Tnff_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sift_v $n ; ^ sift_v 0
->amh $n[cs=acc] Tnff_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sign_v $a $n ; ^ sign_v 0
->amh $a[cs=acc] $n fr_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sign_v $n ; ^ sign_v 0
->amh $n[cs=acc] fr_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sign_v $a $n ; ^ sign_v 0
->amh $a[cs=acc] $n l'f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sign_v $n ; ^ sign_v 0
->amh $n[cs=acc] l'f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** signify_v $a $n ; ^ signify_v 0
->amh $a[cs=acc] $n mlkt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** signify_v $n ; ^ signify_v 0
->amh $n[cs=acc] mlkt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** simmer_v $a $n ; ^ simmer_v 0
->amh $a[cs=acc] $n n|fqfq_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** simmer_v $n ; ^ simmer_v 0
->amh $n[cs=acc] n|fqfq_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** simmer_v $a $n ; ^ simmer_v 0
->amh $a[cs=acc] $n n|tktk_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** simmer_v $n ; ^ simmer_v 0
->amh $n[cs=acc] n|tktk_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** simplify_v $a $n ; ^ simplify_v 0
->amh $a[cs=acc] $n qll_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** simplify_v $n ; ^ simplify_v 0
->amh $n[cs=acc] qll_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sing_v $a $n ; ^ sing_v 0
->amh $a[cs=acc] $n zym_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sing_v $n ; ^ sing_v 0
->amh $n[cs=acc] zym_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sing_v $a $n ; ^ sing_v 0
->amh $a[cs=acc] $n zm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sing_v $n ; ^ sing_v 0
->amh $n[cs=acc] zm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sing_v $a $n ; ^ sing_v 0
->amh $a[cs=acc] $n zfn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sing_v $n ; ^ sing_v 0
->amh $n[cs=acc] zfn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** singe_v $a $n ; ^ singe_v 0
->amh $a[cs=acc] $n tntg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** singe_v $n ; ^ singe_v 0
->amh $n[cs=acc] tntg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** singe_v $a $n ; ^ singe_v 0
->amh $a[cs=acc] $n lblb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** singe_v $n ; ^ singe_v 0
->amh $n[cs=acc] lblb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $a $n ; ^ sink_v 0
->amh $a[cs=acc] $n zq_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $n ; ^ sink_v 0
->amh $n[cs=acc] zq_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $a $n ; ^ sink_v 0
->amh $a[cs=acc] $n Tlq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $n ; ^ sink_v 0
->amh $n[cs=acc] Tlq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $a $n ; ^ sink_v 0
->amh $a[cs=acc] $n sTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $n ; ^ sink_v 0
->amh $n[cs=acc] sTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $a $n ; ^ sink_v 0
->amh $a[cs=acc] $n smT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sink_v $n ; ^ sink_v 0
->amh $n[cs=acc] smT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $a $n ; ^ sip_v 0
->amh $a[cs=acc] $n qsm_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $n ; ^ sip_v 0
->amh $n[cs=acc] qsm_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $a $n ; ^ sip_v 0
->amh $a[cs=acc] $n n|dqdq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $n ; ^ sip_v 0
->amh $n[cs=acc] n|dqdq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $a $n ; ^ sip_v 0
->amh $a[cs=acc] $n qsm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $n ; ^ sip_v 0
->amh $n[cs=acc] qsm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $a $n ; ^ sip_v 0
->amh $a[cs=acc] $n m'g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sip_v $n ; ^ sip_v 0
->amh $n[cs=acc] m'g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** skim_v $a $n ; ^ skim_v 0
->amh $a[cs=acc] $n gff_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** skim_v $n ; ^ skim_v 0
->amh $n[cs=acc] gff_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slacken_v $a $n ; ^ slacken_v 0
->amh $a[cs=acc] $n gWt_t_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slacken_v $n ; ^ slacken_v 0
->amh $n[cs=acc] gWt_t_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slam_v $a $n ; ^ slam_v 0
->amh $a[cs=acc] $n Trqm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slam_v $n ; ^ slam_v 0
->amh $n[cs=acc] Trqm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slam_v $a $n ; ^ slam_v 0
->amh $a[cs=acc] $n drgm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slam_v $n ; ^ slam_v 0
->amh $n[cs=acc] drgm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slander_v $a $n ; ^ slander_v 0
->amh $a[cs=acc] $n g'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slander_v $n ; ^ slander_v 0
->amh $n[cs=acc] g'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slant_v $a $n ; ^ slant_v 0
->amh $a[cs=acc] $n znbl_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slant_v $n ; ^ slant_v 0
->amh $n[cs=acc] znbl_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slant_v $a $n ; ^ slant_v 0
->amh $a[cs=acc] $n znn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slant_v $n ; ^ slant_v 0
->amh $n[cs=acc] znn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slant_v $a $n ; ^ slant_v 0
->amh $a[cs=acc] $n dn_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slant_v $n ; ^ slant_v 0
->amh $n[cs=acc] dn_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slap_v $a $n ; ^ slap_v 0
->amh $a[cs=acc] $n g'g'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slap_v $n ; ^ slap_v 0
->amh $n[cs=acc] g'g'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slaughter_v $a $n ; ^ slaughter_v 0
->amh $a[cs=acc] $n 'rd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slaughter_v $n ; ^ slaughter_v 0
->amh $n[cs=acc] 'rd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sleep_v $a $n ; ^ sleep_v 0
->amh $a[cs=acc] $n tN_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sleep_v $n ; ^ sleep_v 0
->amh $n[cs=acc] tN_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slide_v $a $n ; ^ slide_v 0
->amh $a[cs=acc] $n dalT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slide_v $n ; ^ slide_v 0
->amh $n[cs=acc] dalT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slide_v $a $n ; ^ slide_v 0
->amh $a[cs=acc] $n dalT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slide_v $n ; ^ slide_v 0
->amh $n[cs=acc] dalT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sling_v $a $n ; ^ sling_v 0
->amh $a[cs=acc] $n wnCf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sling_v $n ; ^ sling_v 0
->amh $n[cs=acc] wnCf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $a $n ; ^ slip_v 0
->amh $a[cs=acc] $n mWl_C_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $n ; ^ slip_v 0
->amh $n[cs=acc] mWl_C_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $a $n ; ^ slip_v 0
->amh $a[cs=acc] $n dalT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $n ; ^ slip_v 0
->amh $n[cs=acc] dalT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $a $n ; ^ slip_v 0
->amh $a[cs=acc] $n dalT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $n ; ^ slip_v 0
->amh $n[cs=acc] dalT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $a $n ; ^ slip_v 0
->amh $a[cs=acc] $n n|xatt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slip_v $n ; ^ slip_v 0
->amh $n[cs=acc] n|xatt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slit_v $a $n ; ^ slit_v 0
->amh $a[cs=acc] $n snbT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** slit_v $n ; ^ slit_v 0
->amh $n[cs=acc] snbT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smash_v $a $n ; ^ smash_v 0
->amh $a[cs=acc] $n nkt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smash_v $n ; ^ smash_v 0
->amh $n[cs=acc] nkt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smear_v $a $n ; ^ smear_v 0
->amh $a[cs=acc] $n lqlq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smear_v $n ; ^ smear_v 0
->amh $n[cs=acc] lqlq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smear_v $a $n ; ^ smear_v 0
->amh $a[cs=acc] $n qb_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smear_v $n ; ^ smear_v 0
->amh $n[cs=acc] qb_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smile_v $a $n ; ^ smile_v 0
->amh $a[cs=acc] $n fk'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smile_v $n ; ^ smile_v 0
->amh $n[cs=acc] fk'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smile_v $a $n ; ^ smile_v 0
->amh $a[cs=acc] $n fgg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smile_v $n ; ^ smile_v 0
->amh $n[cs=acc] fgg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smoke_v $a $n ; ^ smoke_v 0
->amh $a[cs=acc] $n Tys_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smoke_v $n ; ^ smoke_v 0
->amh $n[cs=acc] Tys_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smoke_v $a $n ; ^ smoke_v 0
->amh $a[cs=acc] $n Tys_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smoke_v $n ; ^ smoke_v 0
->amh $n[cs=acc] Tys_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smoke_v $a $n ; ^ smoke_v 0
->amh $a[cs=acc] $n TT_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smoke_v $n ; ^ smoke_v 0
->amh $n[cs=acc] TT_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smooth_v $a $n ; ^ smooth_v 0
->amh $a[cs=acc] $n lsls_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smooth_v $n ; ^ smooth_v 0
->amh $n[cs=acc] lsls_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smooth_v $a $n ; ^ smooth_v 0
->amh $a[cs=acc] $n lmss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smooth_v $n ; ^ smooth_v 0
->amh $n[cs=acc] lmss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smooth_v $a $n ; ^ smooth_v 0
->amh $a[cs=acc] $n lz_b_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smooth_v $n ; ^ smooth_v 0
->amh $n[cs=acc] lz_b_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smudge_v $a $n ; ^ smudge_v 0
->amh $a[cs=acc] $n Cmalq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** smudge_v $n ; ^ smudge_v 0
->amh $n[cs=acc] Cmalq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snap_v $a $n ; ^ snap_v 0
->amh $a[cs=acc] $n bT_s_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snap_v $n ; ^ snap_v 0
->amh $n[cs=acc] bT_s_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snap_v $a $n ; ^ snap_v 0
->amh $a[cs=acc] $n bT_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snap_v $n ; ^ snap_v 0
->amh $n[cs=acc] bT_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $a $n ; ^ snatch_v 0
->amh $a[cs=acc] $n qm_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $n ; ^ snatch_v 0
->amh $n[cs=acc] qm_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $a $n ; ^ snatch_v 0
->amh $a[cs=acc] $n mntf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $n ; ^ snatch_v 0
->amh $n[cs=acc] mntf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $a $n ; ^ snatch_v 0
->amh $a[cs=acc] $n mnCq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $n ; ^ snatch_v 0
->amh $n[cs=acc] mnCq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $a $n ; ^ snatch_v 0
->amh $a[cs=acc] $n ktlb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $n ; ^ snatch_v 0
->amh $n[cs=acc] ktlb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $a $n ; ^ snatch_v 0
->amh $a[cs=acc] $n nTq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snatch_v $n ; ^ snatch_v 0
->amh $n[cs=acc] nTq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sniff_v $a $n ; ^ sniff_v 0
->amh $a[cs=acc] $n nfnf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sniff_v $n ; ^ sniff_v 0
->amh $n[cs=acc] nfnf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snuff_v $a $n ; ^ snuff_v 0
->amh $a[cs=acc] $n trkWs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snuff_v $n ; ^ snuff_v 0
->amh $n[cs=acc] trkWs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snuff_v $a $n ; ^ snuff_v 0
->amh $a[cs=acc] $n kWstr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** snuff_v $n ; ^ snuff_v 0
->amh $n[cs=acc] kWstr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $a $n ; ^ soak_v 0
->amh $a[cs=acc] $n r's_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $n ; ^ soak_v 0
->amh $n[cs=acc] r's_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $a $n ; ^ soak_v 0
->amh $a[cs=acc] $n 'j_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $n ; ^ soak_v 0
->amh $n[cs=acc] 'j_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $a $n ; ^ soak_v 0
->amh $a[cs=acc] $n r's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $n ; ^ soak_v 0
->amh $n[cs=acc] r's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $a $n ; ^ soak_v 0
->amh $a[cs=acc] $n bxqT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $n ; ^ soak_v 0
->amh $n[cs=acc] bxqT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $a $n ; ^ soak_v 0
->amh $a[cs=acc] $n Tmq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $n ; ^ soak_v 0
->amh $n[cs=acc] Tmq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $a $n ; ^ soak_v 0
->amh $a[cs=acc] $n nkr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soak_v $n ; ^ soak_v 0
->amh $n[cs=acc] nkr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sob_v $a $n ; ^ sob_v 0
->amh $a[cs=acc] $n n|sqsq_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sob_v $n ; ^ sob_v 0
->amh $n[cs=acc] n|sqsq_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soften_v $a $n ; ^ soften_v 0
->amh $a[cs=acc] $n lsls_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soften_v $n ; ^ soften_v 0
->amh $n[cs=acc] lsls_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soften_v $a $n ; ^ soften_v 0
->amh $a[cs=acc] $n lax*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soften_v $n ; ^ soften_v 0
->amh $n[cs=acc] lax*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solidify_v $a $n ; ^ solidify_v 0
->amh $a[cs=acc] $n TT_r_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solidify_v $n ; ^ solidify_v 0
->amh $n[cs=acc] TT_r_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solidify_v $a $n ; ^ solidify_v 0
->amh $a[cs=acc] $n TT_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solidify_v $n ; ^ solidify_v 0
->amh $n[cs=acc] TT_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solidify_v $a $n ; ^ solidify_v 0
->amh $a[cs=acc] $n dd_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solidify_v $n ; ^ solidify_v 0
->amh $n[cs=acc] dd_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solve_v $a $n ; ^ solve_v 0
->amh $a[cs=acc] $n ft'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solve_v $n ; ^ solve_v 0
->amh $n[cs=acc] ft'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solve_v $a $n ; ^ solve_v 0
->amh $a[cs=acc] $n qrf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** solve_v $n ; ^ solve_v 0
->amh $n[cs=acc] qrf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soothe_v $a $n ; ^ soothe_v 0
->amh $a[cs=acc] $n rg'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** soothe_v $n ; ^ soothe_v 0
->amh $n[cs=acc] rg'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sow_v $a $n ; ^ sow_v 0
->amh $a[cs=acc] $n zr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sow_v $n ; ^ sow_v 0
->amh $n[cs=acc] zr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spare_v $a $n ; ^ spare_v 0
->amh $a[cs=acc] $n qWy_*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spare_v $n ; ^ spare_v 0
->amh $n[cs=acc] qWy_*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spark_v $a $n ; ^ spark_v 0
->amh $a[cs=acc] $n b|rqrq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spark_v $n ; ^ spark_v 0
->amh $n[cs=acc] b|rqrq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** speak_v $a $n ; ^ speak_v 0
->amh $a[cs=acc] $n ngr_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** speak_v $n ; ^ speak_v 0
->amh $n[cs=acc] ngr_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** speed_v $a $n ; ^ speed_v 0
->amh $a[cs=acc] $n fTn_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** speed_v $n ; ^ speed_v 0
->amh $n[cs=acc] fTn_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spend_v $a $n ; ^ spend_v 0
->amh $a[cs=acc] $n mWx_r_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spend_v $n ; ^ spend_v 0
->amh $n[cs=acc] mWx_r_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spice_v $a $n ; ^ spice_v 0
->amh $a[cs=acc] $n T'm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spice_v $n ; ^ spice_v 0
->amh $n[cs=acc] T'm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spice_v $a $n ; ^ spice_v 0
->amh $a[cs=acc] $n qm_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spice_v $n ; ^ spice_v 0
->amh $n[cs=acc] qm_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spill_v $a $n ; ^ spill_v 0
->amh $a[cs=acc] $n fss_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spill_v $n ; ^ spill_v 0
->amh $n[cs=acc] fss_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spill_v $a $n ; ^ spill_v 0
->amh $a[cs=acc] $n df'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spill_v $n ; ^ spill_v 0
->amh $n[cs=acc] df'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spill_v $a $n ; ^ spill_v 0
->amh $a[cs=acc] $n klbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spill_v $n ; ^ spill_v 0
->amh $n[cs=acc] klbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spit_v $a $n ; ^ spit_v 0
->amh $a[cs=acc] $n tf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spit_v $n ; ^ spit_v 0
->amh $n[cs=acc] tf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** splash_v $a $n ; ^ splash_v 0
->amh $a[cs=acc] $n n|bWatr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** splash_v $n ; ^ splash_v 0
->amh $n[cs=acc] n|bWatr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** split_v $a $n ; ^ split_v 0
->amh $a[cs=acc] $n flT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** split_v $n ; ^ split_v 0
->amh $n[cs=acc] flT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $a $n ; ^ spoil_v 0
->amh $a[cs=acc] $n bxqT_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $n ; ^ spoil_v 0
->amh $n[cs=acc] bxqT_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $a $n ; ^ spoil_v 0
->amh $a[cs=acc] $n n|dlaqq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $n ; ^ spoil_v 0
->amh $n[cs=acc] n|dlaqq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $a $n ; ^ spoil_v 0
->amh $a[cs=acc] $n blax*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $n ; ^ spoil_v 0
->amh $n[cs=acc] blax*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $a $n ; ^ spoil_v 0
->amh $a[cs=acc] $n mWlaqq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $n ; ^ spoil_v 0
->amh $n[cs=acc] mWlaqq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $a $n ; ^ spoil_v 0
->amh $a[cs=acc] $n n|qbarr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $n ; ^ spoil_v 0
->amh $n[cs=acc] n|qbarr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $a $n ; ^ spoil_v 0
->amh $a[cs=acc] $n nfrq_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spoil_v $n ; ^ spoil_v 0
->amh $n[cs=acc] nfrq_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sponge_v $a $n ; ^ sponge_v 0
->amh $a[cs=acc] $n qlawT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sponge_v $n ; ^ sponge_v 0
->amh $n[cs=acc] qlawT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spread_v $a $n ; ^ spread_v 0
->amh $a[cs=acc] $n zmt_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spread_v $n ; ^ spread_v 0
->amh $n[cs=acc] zmt_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spread_v $a $n ; ^ spread_v 0
->amh $a[cs=acc] $n nz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spread_v $n ; ^ spread_v 0
->amh $n[cs=acc] nz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $a $n ; ^ sprinkle_v 0
->amh $a[cs=acc] $n nsans_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $n ; ^ sprinkle_v 0
->amh $n[cs=acc] nsans_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $a $n ; ^ sprinkle_v 0
->amh $a[cs=acc] $n rC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $n ; ^ sprinkle_v 0
->amh $n[cs=acc] rC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $a $n ; ^ sprinkle_v 0
->amh $a[cs=acc] $n r|kfkf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $n ; ^ sprinkle_v 0
->amh $n[cs=acc] r|kfkf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $a $n ; ^ sprinkle_v 0
->amh $a[cs=acc] $n nsns_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprinkle_v $n ; ^ sprinkle_v 0
->amh $n[cs=acc] nsns_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprout_v $a $n ; ^ sprout_v 0
->amh $a[cs=acc] $n qWTqWT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprout_v $n ; ^ sprout_v 0
->amh $n[cs=acc] qWTqWT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprout_v $a $n ; ^ sprout_v 0
->amh $a[cs=acc] $n qWngWl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprout_v $n ; ^ sprout_v 0
->amh $n[cs=acc] qWngWl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprout_v $a $n ; ^ sprout_v 0
->amh $a[cs=acc] $n qWngWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sprout_v $n ; ^ sprout_v 0
->amh $n[cs=acc] qWngWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spur_v $a $n ; ^ spur_v 0
->amh $a[cs=acc] $n kWrkWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spur_v $n ; ^ spur_v 0
->amh $n[cs=acc] kWrkWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spur_v $a $n ; ^ spur_v 0
->amh $a[cs=acc] $n kWlkWl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spur_v $n ; ^ spur_v 0
->amh $n[cs=acc] kWlkWl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spurn_v $a $n ; ^ spurn_v 0
->amh $a[cs=acc] $n Tl'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** spurn_v $n ; ^ spurn_v 0
->amh $n[cs=acc] Tl'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squander_v $a $n ; ^ squander_v 0
->amh $a[cs=acc] $n bakn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squander_v $n ; ^ squander_v 0
->amh $n[cs=acc] bakn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squash_v $a $n ; ^ squash_v 0
->amh $a[cs=acc] $n fTfT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squash_v $n ; ^ squash_v 0
->amh $n[cs=acc] fTfT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squash_v $a $n ; ^ squash_v 0
->amh $a[cs=acc] $n Cflq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squash_v $n ; ^ squash_v 0
->amh $n[cs=acc] Cflq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squash_v $a $n ; ^ squash_v 0
->amh $a[cs=acc] $n lfaCq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squash_v $n ; ^ squash_v 0
->amh $n[cs=acc] lfaCq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeak_v $a $n ; ^ squeak_v 0
->amh $a[cs=acc] $n sqTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeak_v $n ; ^ squeak_v 0
->amh $n[cs=acc] sqTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeeze_v $a $n ; ^ squeeze_v 0
->amh $a[cs=acc] $n Cb_T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeeze_v $n ; ^ squeeze_v 0
->amh $n[cs=acc] Cb_T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeeze_v $a $n ; ^ squeeze_v 0
->amh $a[cs=acc] $n frT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeeze_v $n ; ^ squeeze_v 0
->amh $n[cs=acc] frT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeeze_v $a $n ; ^ squeeze_v 0
->amh $a[cs=acc] $n Cmq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** squeeze_v $n ; ^ squeeze_v 0
->amh $n[cs=acc] Cmq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stab_v $a $n ; ^ stab_v 0
->amh $a[cs=acc] $n wg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stab_v $n ; ^ stab_v 0
->amh $n[cs=acc] wg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stabilize_v $a $n ; ^ stabilize_v 0
->amh $a[cs=acc] $n drj*_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stabilize_v $n ; ^ stabilize_v 0
->amh $n[cs=acc] drj*_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stack_v $a $n ; ^ stack_v 0
->amh $a[cs=acc] $n rbrb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stack_v $n ; ^ stack_v 0
->amh $n[cs=acc] rbrb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stagger_v $a $n ; ^ stagger_v 0
->amh $a[cs=acc] $n n|gdgd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stagger_v $n ; ^ stagger_v 0
->amh $n[cs=acc] n|gdgd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stain_v $a $n ; ^ stain_v 0
->amh $a[cs=acc] $n bk_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stain_v $n ; ^ stain_v 0
->amh $n[cs=acc] bk_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stammer_v $a $n ; ^ stammer_v 0
->amh $a[cs=acc] $n n|tbatb_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stammer_v $n ; ^ stammer_v 0
->amh $n[cs=acc] n|tbatb_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stamp_v $a $n ; ^ stamp_v 0
->amh $a[cs=acc] $n dqdq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stamp_v $n ; ^ stamp_v 0
->amh $n[cs=acc] dqdq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stamp_v $a $n ; ^ stamp_v 0
->amh $a[cs=acc] $n 't_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stamp_v $n ; ^ stamp_v 0
->amh $n[cs=acc] 't_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stare_v $a $n ; ^ stare_v 0
->amh $a[cs=acc] $n fzz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stare_v $n ; ^ stare_v 0
->amh $n[cs=acc] fzz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** start_v $a $n ; ^ start_v 0
->amh $a[cs=acc] $n jm_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** start_v $n ; ^ start_v 0
->amh $n[cs=acc] jm_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** start_v $a $n ; ^ start_v 0
->amh $a[cs=acc] $n wT_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** start_v $n ; ^ start_v 0
->amh $n[cs=acc] wT_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** start_v $a $n ; ^ start_v 0
->amh $a[cs=acc] $n b't_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** start_v $n ; ^ start_v 0
->amh $n[cs=acc] b't_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** startle_v $a $n ; ^ startle_v 0
->amh $a[cs=acc] $n dngT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** startle_v $n ; ^ startle_v 0
->amh $n[cs=acc] dngT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** startle_v $a $n ; ^ startle_v 0
->amh $a[cs=acc] $n dngT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** startle_v $n ; ^ startle_v 0
->amh $n[cs=acc] dngT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** steal_v $a $n ; ^ steal_v 0
->amh $a[cs=acc] $n srq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** steal_v $n ; ^ steal_v 0
->amh $n[cs=acc] srq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stick_v $a $n ; ^ stick_v 0
->amh $a[cs=acc] $n C'r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stick_v $n ; ^ stick_v 0
->amh $n[cs=acc] C'r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stimulate_v $a $n ; ^ stimulate_v 0
->amh $a[cs=acc] $n qsqs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stimulate_v $n ; ^ stimulate_v 0
->amh $n[cs=acc] qsqs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sting_v $a $n ; ^ sting_v 0
->amh $a[cs=acc] $n ndf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sting_v $n ; ^ sting_v 0
->amh $n[cs=acc] ndf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $a $n ; ^ stink_v 0
->amh $a[cs=acc] $n krf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $n ; ^ stink_v 0
->amh $n[cs=acc] krf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $a $n ; ^ stink_v 0
->amh $a[cs=acc] $n Tnb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $n ; ^ stink_v 0
->amh $n[cs=acc] Tnb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $a $n ; ^ stink_v 0
->amh $a[cs=acc] $n qrn'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $n ; ^ stink_v 0
->amh $n[cs=acc] qrn'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $a $n ; ^ stink_v 0
->amh $a[cs=acc] $n qWn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $n ; ^ stink_v 0
->amh $n[cs=acc] qWn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $a $n ; ^ stink_v 0
->amh $a[cs=acc] $n gm'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $n ; ^ stink_v 0
->amh $n[cs=acc] gm'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $a $n ; ^ stink_v 0
->amh $a[cs=acc] $n xtt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stink_v $n ; ^ stink_v 0
->amh $n[cs=acc] xtt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stir_v $a $n ; ^ stir_v 0
->amh $a[cs=acc] $n msl_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stir_v $n ; ^ stir_v 0
->amh $n[cs=acc] msl_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stir_v $a $n ; ^ stir_v 0
->amh $a[cs=acc] $n 'm_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stir_v $n ; ^ stir_v 0
->amh $n[cs=acc] 'm_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stitch_v $a $n ; ^ stitch_v 0
->amh $a[cs=acc] $n sf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stitch_v $n ; ^ stitch_v 0
->amh $n[cs=acc] sf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stone_v $a $n ; ^ stone_v 0
->amh $a[cs=acc] $n wgr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stone_v $n ; ^ stone_v 0
->amh $n[cs=acc] wgr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $a $n ; ^ stoop_v 0
->amh $a[cs=acc] $n fndd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $n ; ^ stoop_v 0
->amh $n[cs=acc] fndd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $a $n ; ^ stoop_v 0
->amh $a[cs=acc] $n znbl_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $n ; ^ stoop_v 0
->amh $n[cs=acc] znbl_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $a $n ; ^ stoop_v 0
->amh $a[cs=acc] $n gWnbs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $n ; ^ stoop_v 0
->amh $n[cs=acc] gWnbs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $a $n ; ^ stoop_v 0
->amh $a[cs=acc] $n zl_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $n ; ^ stoop_v 0
->amh $n[cs=acc] zl_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $a $n ; ^ stoop_v 0
->amh $a[cs=acc] $n ql_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stoop_v $n ; ^ stoop_v 0
->amh $n[cs=acc] ql_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stop_v $a $n ; ^ stop_v 0
->amh $a[cs=acc] $n qwm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stop_v $n ; ^ stop_v 0
->amh $n[cs=acc] qwm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stop_v $a $n ; ^ stop_v 0
->amh $a[cs=acc] $n tw_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stop_v $n ; ^ stop_v 0
->amh $n[cs=acc] tw_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** straighten_v $a $n ; ^ straighten_v 0
->amh $a[cs=acc] $n qn'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** straighten_v $n ; ^ straighten_v 0
->amh $n[cs=acc] qn'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** straighten_v $a $n ; ^ straighten_v 0
->amh $a[cs=acc] $n qn'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** straighten_v $n ; ^ straighten_v 0
->amh $n[cs=acc] qn'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strain_v $a $n ; ^ strain_v 0
->amh $a[cs=acc] $n Tl_l_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strain_v $n ; ^ strain_v 0
->amh $n[cs=acc] Tl_l_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strangle_v $a $n ; ^ strangle_v 0
->amh $a[cs=acc] $n 'nq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strangle_v $n ; ^ strangle_v 0
->amh $n[cs=acc] 'nq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strengthen_v $a $n ; ^ strengthen_v 0
->amh $a[cs=acc] $n brt'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strengthen_v $n ; ^ strengthen_v 0
->amh $n[cs=acc] brt'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stretch_v $a $n ; ^ stretch_v 0
->amh $a[cs=acc] $n n|Trar'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stretch_v $n ; ^ stretch_v 0
->amh $n[cs=acc] n|Trar'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stretch_v $a $n ; ^ stretch_v 0
->amh $a[cs=acc] $n wT_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stretch_v $n ; ^ stretch_v 0
->amh $n[cs=acc] wT_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $a $n ; ^ strike_v 0
->amh $a[cs=acc] $n dw_l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $n ; ^ strike_v 0
->amh $n[cs=acc] dw_l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $a $n ; ^ strike_v 0
->amh $a[cs=acc] $n br_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $n ; ^ strike_v 0
->amh $n[cs=acc] br_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $a $n ; ^ strike_v 0
->amh $a[cs=acc] $n qWndd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $n ; ^ strike_v 0
->amh $n[cs=acc] qWndd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $a $n ; ^ strike_v 0
->amh $a[cs=acc] $n mt'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strike_v $n ; ^ strike_v 0
->amh $n[cs=acc] mt'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strip_v $a $n ; ^ strip_v 0
->amh $a[cs=acc] $n glff_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** strip_v $n ; ^ strip_v 0
->amh $n[cs=acc] glff_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** study_v $a $n ; ^ study_v 0
->amh $a[cs=acc] $n Tn'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** study_v $n ; ^ study_v 0
->amh $n[cs=acc] Tn'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n sn_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] sn_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n 'C_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] 'C_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n TqTq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] TqTq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n 'gW_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] 'gW_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n wT_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] wT_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n sksk_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] sksk_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n 'm_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] 'm_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n gWs_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] gWs_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n gWsgWs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] gWsgWs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $a $n ; ^ stuff_v 0
->amh $a[cs=acc] $n wx_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stuff_v $n ; ^ stuff_v 0
->amh $n[cs=acc] wx_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stutter_v $a $n ; ^ stutter_v 0
->amh $a[cs=acc] $n wlakf_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stutter_v $n ; ^ stutter_v 0
->amh $n[cs=acc] wlakf_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stutter_v $a $n ; ^ stutter_v 0
->amh $a[cs=acc] $n kWlatf_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** stutter_v $n ; ^ stutter_v 0
->amh $n[cs=acc] kWlatf_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subdue_v $a $n ; ^ subdue_v 0
->amh $a[cs=acc] $n gWnbs_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subdue_v $n ; ^ subdue_v 0
->amh $n[cs=acc] gWnbs_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** submerge_v $a $n ; ^ submerge_v 0
->amh $a[cs=acc] $n Tlq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** submerge_v $n ; ^ submerge_v 0
->amh $n[cs=acc] Tlq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subsidize_v $a $n ; ^ subsidize_v 0
->amh $a[cs=acc] $n dgW_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subsidize_v $n ; ^ subsidize_v 0
->amh $n[cs=acc] dgW_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** substitute_v $a $n ; ^ substitute_v 0
->amh $a[cs=acc] $n tk_'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** substitute_v $n ; ^ substitute_v 0
->amh $n[cs=acc] tk_'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subtract_v $a $n ; ^ subtract_v 0
->amh $a[cs=acc] $n qn_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subtract_v $n ; ^ subtract_v 0
->amh $n[cs=acc] qn_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subtract_v $a $n ; ^ subtract_v 0
->amh $a[cs=acc] $n qn_s_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** subtract_v $n ; ^ subtract_v 0
->amh $n[cs=acc] qn_s_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $a $n ; ^ suck_v 0
->amh $a[cs=acc] $n mTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $n ; ^ suck_v 0
->amh $n[cs=acc] mTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $a $n ; ^ suck_v 0
->amh $a[cs=acc] $n mzmz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $n ; ^ suck_v 0
->amh $n[cs=acc] mzmz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $a $n ; ^ suck_v 0
->amh $a[cs=acc] $n mTmT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $n ; ^ suck_v 0
->amh $n[cs=acc] mTmT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $a $n ; ^ suck_v 0
->amh $a[cs=acc] $n Tb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suck_v $n ; ^ suck_v 0
->amh $n[cs=acc] Tb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suckle_v $a $n ; ^ suckle_v 0
->amh $a[cs=acc] $n mTmT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suckle_v $n ; ^ suckle_v 0
->amh $n[cs=acc] mTmT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suckle_v $a $n ; ^ suckle_v 0
->amh $a[cs=acc] $n Tb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suckle_v $n ; ^ suckle_v 0
->amh $n[cs=acc] Tb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sue_v $a $n ; ^ sue_v 0
->amh $a[cs=acc] $n kss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sue_v $n ; ^ sue_v 0
->amh $n[cs=acc] kss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffer_v $a $n ; ^ suffer_v 0
->amh $a[cs=acc] $n n|glat'_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffer_v $n ; ^ suffer_v 0
->amh $n[cs=acc] n|glat'_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffer_v $a $n ; ^ suffer_v 0
->amh $a[cs=acc] $n n|gbgb_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffer_v $n ; ^ suffer_v 0
->amh $n[cs=acc] n|gbgb_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffer_v $a $n ; ^ suffer_v 0
->amh $a[cs=acc] $n gWd'_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffer_v $n ; ^ suffer_v 0
->amh $n[cs=acc] gWd'_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffocate_v $a $n ; ^ suffocate_v 0
->amh $a[cs=acc] $n 'f_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffocate_v $n ; ^ suffocate_v 0
->amh $n[cs=acc] 'f_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffocate_v $a $n ; ^ suffocate_v 0
->amh $a[cs=acc] $n 'nq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suffocate_v $n ; ^ suffocate_v 0
->amh $n[cs=acc] 'nq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** summon_v $a $n ; ^ summon_v 0
->amh $a[cs=acc] $n Tr'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** summon_v $n ; ^ summon_v 0
->amh $n[cs=acc] Tr'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** superimpose_v $a $n ; ^ superimpose_v 0
->amh $a[cs=acc] $n nbr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** superimpose_v $n ; ^ superimpose_v 0
->amh $n[cs=acc] nbr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** superintend_v $a $n ; ^ superintend_v 0
->amh $a[cs=acc] $n qWTr_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** superintend_v $n ; ^ superintend_v 0
->amh $n[cs=acc] qWTr_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** supervise_v $a $n ; ^ supervise_v 0
->amh $a[cs=acc] $n qWTr_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** supervise_v $n ; ^ supervise_v 0
->amh $n[cs=acc] qWTr_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** support_v $a $n ; ^ support_v 0
->amh $a[cs=acc] $n dg_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** support_v $n ; ^ support_v 0
->amh $n[cs=acc] dg_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suppress_v $a $n ; ^ suppress_v 0
->amh $a[cs=acc] $n C'n_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suppress_v $n ; ^ suppress_v 0
->amh $n[cs=acc] C'n_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surpass_v $a $n ; ^ surpass_v 0
->amh $a[cs=acc] $n blT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surpass_v $n ; ^ surpass_v 0
->amh $n[cs=acc] blT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surpass_v $a $n ; ^ surpass_v 0
->amh $a[cs=acc] $n mz_n_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surpass_v $n ; ^ surpass_v 0
->amh $n[cs=acc] mz_n_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surprise_v $a $n ; ^ surprise_v 0
->amh $a[cs=acc] $n dnq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surprise_v $n ; ^ surprise_v 0
->amh $n[cs=acc] dnq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surprise_v $a $n ; ^ surprise_v 0
->amh $a[cs=acc] $n dngT_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surprise_v $n ; ^ surprise_v 0
->amh $n[cs=acc] dngT_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surprise_v $a $n ; ^ surprise_v 0
->amh $a[cs=acc] $n dnq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surprise_v $n ; ^ surprise_v 0
->amh $n[cs=acc] dnq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surround_v $a $n ; ^ surround_v 0
->amh $a[cs=acc] $n kbb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surround_v $n ; ^ surround_v 0
->amh $n[cs=acc] kbb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surround_v $a $n ; ^ surround_v 0
->amh $a[cs=acc] $n kbb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** surround_v $n ; ^ surround_v 0
->amh $n[cs=acc] kbb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** survey_v $a $n ; ^ survey_v 0
->amh $a[cs=acc] $n qy_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** survey_v $n ; ^ survey_v 0
->amh $n[cs=acc] qy_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** survey_v $a $n ; ^ survey_v 0
->amh $a[cs=acc] $n Tn'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** survey_v $n ; ^ survey_v 0
->amh $n[cs=acc] Tn'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** survey_v $a $n ; ^ survey_v 0
->amh $a[cs=acc] $n qaN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** survey_v $n ; ^ survey_v 0
->amh $n[cs=acc] qaN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suspend_v $a $n ; ^ suspend_v 0
->amh $a[cs=acc] $n n|TlTl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** suspend_v $n ; ^ suspend_v 0
->amh $n[cs=acc] n|TlTl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swallow_v $a $n ; ^ swallow_v 0
->amh $a[cs=acc] $n w'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swallow_v $n ; ^ swallow_v 0
->amh $n[cs=acc] w'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swarm_v $a $n ; ^ swarm_v 0
->amh $a[cs=acc] $n fl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swarm_v $n ; ^ swarm_v 0
->amh $n[cs=acc] fl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sway_v $a $n ; ^ sway_v 0
->amh $a[cs=acc] $n xbxb_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sway_v $n ; ^ sway_v 0
->amh $n[cs=acc] xbxb_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sway_v $a $n ; ^ sway_v 0
->amh $a[cs=acc] $n rgd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sway_v $n ; ^ sway_v 0
->amh $n[cs=acc] rgd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swear_v $a $n ; ^ swear_v 0
->amh $a[cs=acc] $n gz_t_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swear_v $n ; ^ swear_v 0
->amh $n[cs=acc] gz_t_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweep_v $a $n ; ^ sweep_v 0
->amh $a[cs=acc] $n mnTr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweep_v $n ; ^ sweep_v 0
->amh $n[cs=acc] mnTr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweep_v $a $n ; ^ sweep_v 0
->amh $a[cs=acc] $n 's_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweep_v $n ; ^ sweep_v 0
->amh $n[cs=acc] 's_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweep_v $a $n ; ^ sweep_v 0
->amh $a[cs=acc] $n Trg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweep_v $n ; ^ sweep_v 0
->amh $n[cs=acc] Trg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweeten_v $a $n ; ^ sweeten_v 0
->amh $a[cs=acc] $n TafT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** sweeten_v $n ; ^ sweeten_v 0
->amh $n[cs=acc] TafT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swim_v $a $n ; ^ swim_v 0
->amh $a[cs=acc] $n waN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swim_v $n ; ^ swim_v 0
->amh $n[cs=acc] waN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swindle_v $a $n ; ^ swindle_v 0
->amh $a[cs=acc] $n C|brbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swindle_v $n ; ^ swindle_v 0
->amh $n[cs=acc] C|brbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swing_v $a $n ; ^ swing_v 0
->amh $a[cs=acc] $n n|TlTl_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swing_v $n ; ^ swing_v 0
->amh $n[cs=acc] n|TlTl_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swish_v $a $n ; ^ swish_v 0
->amh $a[cs=acc] $n nsns_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** swish_v $n ; ^ swish_v 0
->amh $n[cs=acc] nsns_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** synthesize_v $a $n ; ^ synthesize_v 0
->amh $a[cs=acc] $n qnbr_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** synthesize_v $n ; ^ synthesize_v 0
->amh $n[cs=acc] qnbr_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** take_v $a $n ; ^ take_v 0
->amh $a[cs=acc] $n wsd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** take_v $n ; ^ take_v 0
->amh $n[cs=acc] wsd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** talk_v $a $n ; ^ talk_v 0
->amh $a[cs=acc] $n ngr_v[as=rc,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** talk_v $n ; ^ talk_v 0
->amh $n[cs=acc] ngr_v[as=rc,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tame_v $a $n ; ^ tame_v 0
->amh $a[cs=acc] $n gr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tame_v $n ; ^ tame_v 0
->amh $n[cs=acc] gr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tan_v $a $n ; ^ tan_v 0
->amh $a[cs=acc] $n 'r_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tan_v $n ; ^ tan_v 0
->amh $n[cs=acc] 'r_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tan_v $a $n ; ^ tan_v 0
->amh $a[cs=acc] $n lf'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tan_v $n ; ^ tan_v 0
->amh $n[cs=acc] lf'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tan_v $a $n ; ^ tan_v 0
->amh $a[cs=acc] $n f'q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tan_v $n ; ^ tan_v 0
->amh $n[cs=acc] f'q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tantalize_v $a $n ; ^ tantalize_v 0
->amh $a[cs=acc] $n qWamT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tantalize_v $n ; ^ tantalize_v 0
->amh $n[cs=acc] qWamT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tap_v $a $n ; ^ tap_v 0
->amh $a[cs=acc] $n qWrqWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tap_v $n ; ^ tap_v 0
->amh $n[cs=acc] qWrqWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tap_v $a $n ; ^ tap_v 0
->amh $a[cs=acc] $n lkW_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tap_v $n ; ^ tap_v 0
->amh $n[cs=acc] lkW_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taper_v $a $n ; ^ taper_v 0
->amh $a[cs=acc] $n xWTT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taper_v $n ; ^ taper_v 0
->amh $n[cs=acc] xWTT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taper_v $a $n ; ^ taper_v 0
->amh $a[cs=acc] $n xwl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taper_v $n ; ^ taper_v 0
->amh $n[cs=acc] xwl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tarnish_v $a $n ; ^ tarnish_v 0
->amh $a[cs=acc] $n bl_z_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tarnish_v $n ; ^ tarnish_v 0
->amh $n[cs=acc] bl_z_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tarnish_v $a $n ; ^ tarnish_v 0
->amh $a[cs=acc] $n dbzz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tarnish_v $n ; ^ tarnish_v 0
->amh $n[cs=acc] dbzz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taste_v $a $n ; ^ taste_v 0
->amh $a[cs=acc] $n T'm_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taste_v $n ; ^ taste_v 0
->amh $n[cs=acc] T'm_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taste_v $a $n ; ^ taste_v 0
->amh $a[cs=acc] $n qms_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taste_v $n ; ^ taste_v 0
->amh $n[cs=acc] qms_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tattoo_v $a $n ; ^ tattoo_v 0
->amh $a[cs=acc] $n wqr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tattoo_v $n ; ^ tattoo_v 0
->amh $n[cs=acc] wqr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taunt_v $a $n ; ^ taunt_v 0
->amh $a[cs=acc] $n wr_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** taunt_v $n ; ^ taunt_v 0
->amh $n[cs=acc] wr_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tax_v $a $n ; ^ tax_v 0
->amh $a[cs=acc] $n qrT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tax_v $n ; ^ tax_v 0
->amh $n[cs=acc] qrT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** teach_v $a $n ; ^ teach_v 0
->amh $a[cs=acc] $n m'r_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** teach_v $n ; ^ teach_v 0
->amh $n[cs=acc] m'r_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tear_v $a $n ; ^ tear_v 0
->amh $a[cs=acc] $n qWnSl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tear_v $n ; ^ tear_v 0
->amh $n[cs=acc] qWnSl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tear_v $a $n ; ^ tear_v 0
->amh $a[cs=acc] $n qdd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tear_v $n ; ^ tear_v 0
->amh $n[cs=acc] qdd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tease_v $a $n ; ^ tease_v 0
->amh $a[cs=acc] $n nk'_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tease_v $n ; ^ tease_v 0
->amh $n[cs=acc] nk'_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tell_v $a $n ; ^ tell_v 0
->amh $a[cs=acc] $n wr'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tell_v $n ; ^ tell_v 0
->amh $n[cs=acc] wr'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tell_v $a $n ; ^ tell_v 0
->amh $a[cs=acc] $n ngr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tell_v $n ; ^ tell_v 0
->amh $n[cs=acc] ngr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** temper_v $a $n ; ^ temper_v 0
->amh $a[cs=acc] $n tb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** temper_v $n ; ^ temper_v 0
->amh $n[cs=acc] tb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tempt_v $a $n ; ^ tempt_v 0
->amh $a[cs=acc] $n gWmj*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tempt_v $n ; ^ tempt_v 0
->amh $n[cs=acc] gWmj*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $a $n ; ^ terminate_v 0
->amh $a[cs=acc] $n 'lq_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $n ; ^ terminate_v 0
->amh $n[cs=acc] 'lq_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $a $n ; ^ terminate_v 0
->amh $a[cs=acc] $n bq'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $n ; ^ terminate_v 0
->amh $n[cs=acc] bq'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $a $n ; ^ terminate_v 0
->amh $a[cs=acc] $n Cr_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $n ; ^ terminate_v 0
->amh $n[cs=acc] Cr_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $a $n ; ^ terminate_v 0
->amh $a[cs=acc] $n dmdm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terminate_v $n ; ^ terminate_v 0
->amh $n[cs=acc] dmdm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $a $n ; ^ terrify_v 0
->amh $a[cs=acc] $n fr'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $n ; ^ terrify_v 0
->amh $n[cs=acc] fr'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $a $n ; ^ terrify_v 0
->amh $a[cs=acc] $n dngT_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $n ; ^ terrify_v 0
->amh $n[cs=acc] dngT_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $a $n ; ^ terrify_v 0
->amh $a[cs=acc] $n b|rkrk_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $n ; ^ terrify_v 0
->amh $n[cs=acc] b|rkrk_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $a $n ; ^ terrify_v 0
->amh $a[cs=acc] $n fr'_v[as=it,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrify_v $n ; ^ terrify_v 0
->amh $n[cs=acc] fr'_v[as=it,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrorize_v $a $n ; ^ terrorize_v 0
->amh $a[cs=acc] $n r|btbt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrorize_v $n ; ^ terrorize_v 0
->amh $n[cs=acc] r|btbt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrorize_v $a $n ; ^ terrorize_v 0
->amh $a[cs=acc] $n xb_r_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** terrorize_v $n ; ^ terrorize_v 0
->amh $n[cs=acc] xb_r_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** test_v $a $n ; ^ test_v 0
->amh $a[cs=acc] $n ft_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** test_v $n ; ^ test_v 0
->amh $n[cs=acc] ft_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** test_v $a $n ; ^ test_v 0
->amh $a[cs=acc] $n mWk_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** test_v $n ; ^ test_v 0
->amh $n[cs=acc] mWk_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** testify_v $a $n ; ^ testify_v 0
->amh $a[cs=acc] $n mskr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** testify_v $n ; ^ testify_v 0
->amh $n[cs=acc] mskr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thank_v $a $n ; ^ thank_v 0
->amh $a[cs=acc] $n msgn_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thank_v $n ; ^ thank_v 0
->amh $n[cs=acc] msgn_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thatch_v $a $n ; ^ thatch_v 0
->amh $a[cs=acc] $n kdn_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thatch_v $n ; ^ thatch_v 0
->amh $n[cs=acc] kdn_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thicken_v $a $n ; ^ thicken_v 0
->amh $a[cs=acc] $n wf_r_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thicken_v $n ; ^ thicken_v 0
->amh $n[cs=acc] wf_r_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thin_v $a $n ; ^ thin_v 0
->amh $a[cs=acc] $n qTn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thin_v $n ; ^ thin_v 0
->amh $n[cs=acc] qTn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thin_v $a $n ; ^ thin_v 0
->amh $a[cs=acc] $n sl_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thin_v $n ; ^ thin_v 0
->amh $n[cs=acc] sl_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** think_v $a $n ; ^ think_v 0
->amh $a[cs=acc] $n 's_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** think_v $n ; ^ think_v 0
->amh $n[cs=acc] 's_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thrash_v $a $n ; ^ thrash_v 0
->amh $a[cs=acc] $n qms_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thrash_v $n ; ^ thrash_v 0
->amh $n[cs=acc] qms_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** threaten_v $a $n ; ^ threaten_v 0
->amh $a[cs=acc] $n fr'_v[as=it,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** threaten_v $n ; ^ threaten_v 0
->amh $n[cs=acc] fr'_v[as=it,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** threaten_v $a $n ; ^ threaten_v 0
->amh $a[cs=acc] $n z't_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** threaten_v $n ; ^ threaten_v 0
->amh $n[cs=acc] z't_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thresh_v $a $n ; ^ thresh_v 0
->amh $a[cs=acc] $n wq'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thresh_v $n ; ^ thresh_v 0
->amh $n[cs=acc] wq'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thresh_v $a $n ; ^ thresh_v 0
->amh $a[cs=acc] $n mrt_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thresh_v $n ; ^ thresh_v 0
->amh $n[cs=acc] mrt_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** throng_v $a $n ; ^ throng_v 0
->amh $a[cs=acc] $n 'f_n_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** throng_v $n ; ^ throng_v 0
->amh $n[cs=acc] 'f_n_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** throw_v $a $n ; ^ throw_v 0
->amh $a[cs=acc] $n wrwr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** throw_v $n ; ^ throw_v 0
->amh $n[cs=acc] wrwr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $a $n ; ^ thwart_v 0
->amh $a[cs=acc] $n nTb_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $n ; ^ thwart_v 0
->amh $n[cs=acc] nTb_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $a $n ; ^ thwart_v 0
->amh $a[cs=acc] $n CngWl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $n ; ^ thwart_v 0
->amh $n[cs=acc] CngWl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $a $n ; ^ thwart_v 0
->amh $a[cs=acc] $n Cngf_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $n ; ^ thwart_v 0
->amh $n[cs=acc] Cngf_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $a $n ; ^ thwart_v 0
->amh $a[cs=acc] $n dnaqf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** thwart_v $n ; ^ thwart_v 0
->amh $n[cs=acc] dnaqf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tickle_v $a $n ; ^ tickle_v 0
->amh $a[cs=acc] $n knkn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tickle_v $n ; ^ tickle_v 0
->amh $n[cs=acc] knkn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tickle_v $a $n ; ^ tickle_v 0
->amh $a[cs=acc] $n kWrkWr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tickle_v $n ; ^ tickle_v 0
->amh $n[cs=acc] kWrkWr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tickle_v $a $n ; ^ tickle_v 0
->amh $a[cs=acc] $n kWlkWl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tickle_v $n ; ^ tickle_v 0
->amh $n[cs=acc] kWlkWl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tie_v $a $n ; ^ tie_v 0
->amh $a[cs=acc] $n qWraN*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tie_v $n ; ^ tie_v 0
->amh $n[cs=acc] qWraN*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tie_v $a $n ; ^ tie_v 0
->amh $a[cs=acc] $n qrqb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tie_v $n ; ^ tie_v 0
->amh $n[cs=acc] qrqb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tie_v $a $n ; ^ tie_v 0
->amh $a[cs=acc] $n 'sr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tie_v $n ; ^ tie_v 0
->amh $n[cs=acc] 'sr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tighten_v $a $n ; ^ tighten_v 0
->amh $a[cs=acc] $n Tbq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tighten_v $n ; ^ tighten_v 0
->amh $n[cs=acc] Tbq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tighten_v $a $n ; ^ tighten_v 0
->amh $a[cs=acc] $n wT_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tighten_v $n ; ^ tighten_v 0
->amh $n[cs=acc] wT_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tighten_v $a $n ; ^ tighten_v 0
->amh $a[cs=acc] $n Tbb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tighten_v $n ; ^ tighten_v 0
->amh $n[cs=acc] Tbb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** time_v $a $n ; ^ time_v 0
->amh $a[cs=acc] $n 'k_l_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** time_v $n ; ^ time_v 0
->amh $n[cs=acc] 'k_l_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** time_v $a $n ; ^ time_v 0
->amh $a[cs=acc] $n qlm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** time_v $n ; ^ time_v 0
->amh $n[cs=acc] qlm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tinkle_v $a $n ; ^ tinkle_v 0
->amh $a[cs=acc] $n n|kW'kW'_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tinkle_v $n ; ^ tinkle_v 0
->amh $n[cs=acc] n|kW'kW'_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tint_v $a $n ; ^ tint_v 0
->amh $a[cs=acc] $n qlm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tint_v $n ; ^ tint_v 0
->amh $n[cs=acc] qlm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tip_v $a $n ; ^ tip_v 0
->amh $a[cs=acc] $n gWrs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tip_v $n ; ^ tip_v 0
->amh $n[cs=acc] gWrs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tire_v $a $n ; ^ tire_v 0
->amh $a[cs=acc] $n dkm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tire_v $n ; ^ tire_v 0
->amh $n[cs=acc] dkm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tire_v $a $n ; ^ tire_v 0
->amh $a[cs=acc] $n lf'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tire_v $n ; ^ tire_v 0
->amh $n[cs=acc] lf'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** toast_v $a $n ; ^ toast_v 0
->amh $a[cs=acc] $n Tbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** toast_v $n ; ^ toast_v 0
->amh $n[cs=acc] Tbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** torture_v $a $n ; ^ torture_v 0
->amh $a[cs=acc] $n n|grgb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** torture_v $n ; ^ torture_v 0
->amh $n[cs=acc] n|grgb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** torture_v $a $n ; ^ torture_v 0
->amh $a[cs=acc] $n sqy*_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** torture_v $n ; ^ torture_v 0
->amh $n[cs=acc] sqy*_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** touch_v $a $n ; ^ touch_v 0
->amh $a[cs=acc] $n nk'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** touch_v $n ; ^ touch_v 0
->amh $n[cs=acc] nk'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** touch_v $a $n ; ^ touch_v 0
->amh $a[cs=acc] $n dass_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** touch_v $n ; ^ touch_v 0
->amh $n[cs=acc] dass_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tour_v $a $n ; ^ tour_v 0
->amh $a[cs=acc] $n gWbN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tour_v $n ; ^ tour_v 0
->amh $n[cs=acc] gWbN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trade_v $a $n ; ^ trade_v 0
->amh $a[cs=acc] $n ngd_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trade_v $n ; ^ trade_v 0
->amh $n[cs=acc] ngd_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** train_v $a $n ; ^ train_v 0
->amh $a[cs=acc] $n lmd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** train_v $n ; ^ train_v 0
->amh $n[cs=acc] lmd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** train_v $a $n ; ^ train_v 0
->amh $a[cs=acc] $n 'r_q_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** train_v $n ; ^ train_v 0
->amh $n[cs=acc] 'r_q_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** train_v $a $n ; ^ train_v 0
->amh $a[cs=acc] $n slTn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** train_v $n ; ^ train_v 0
->amh $n[cs=acc] slTn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trample_v $a $n ; ^ trample_v 0
->amh $a[cs=acc] $n Tmss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trample_v $n ; ^ trample_v 0
->amh $n[cs=acc] Tmss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transact_v $a $n ; ^ transact_v 0
->amh $a[cs=acc] $n gz'_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transact_v $n ; ^ transact_v 0
->amh $n[cs=acc] gz'_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transact_v $a $n ; ^ transact_v 0
->amh $a[cs=acc] $n gby*_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transact_v $n ; ^ transact_v 0
->amh $n[cs=acc] gby*_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** translate_v $a $n ; ^ translate_v 0
->amh $a[cs=acc] $n trgWm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** translate_v $n ; ^ translate_v 0
->amh $n[cs=acc] trgWm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** translate_v $a $n ; ^ translate_v 0
->amh $a[cs=acc] $n ml_s_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** translate_v $n ; ^ translate_v 0
->amh $n[cs=acc] ml_s_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transpire_v $a $n ; ^ transpire_v 0
->amh $a[cs=acc] $n wz'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transpire_v $n ; ^ transpire_v 0
->amh $n[cs=acc] wz'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transport_v $a $n ; ^ transport_v 0
->amh $a[cs=acc] $n g'z_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transport_v $n ; ^ transport_v 0
->amh $n[cs=acc] g'z_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transport_v $a $n ; ^ transport_v 0
->amh $a[cs=acc] $n gW'z_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** transport_v $n ; ^ transport_v 0
->amh $n[cs=acc] gW'z_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tread_v $a $n ; ^ tread_v 0
->amh $a[cs=acc] $n rgT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tread_v $n ; ^ tread_v 0
->amh $n[cs=acc] rgT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** treat_v $a $n ; ^ treat_v 0
->amh $a[cs=acc] $n nagd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** treat_v $n ; ^ treat_v 0
->amh $n[cs=acc] nagd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** treat_v $a $n ; ^ treat_v 0
->amh $a[cs=acc] $n 'k_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** treat_v $n ; ^ treat_v 0
->amh $n[cs=acc] 'k_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trickle_v $a $n ; ^ trickle_v 0
->amh $a[cs=acc] $n CWrr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trickle_v $n ; ^ trickle_v 0
->amh $n[cs=acc] CWrr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trim_v $a $n ; ^ trim_v 0
->amh $a[cs=acc] $n krkm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trim_v $n ; ^ trim_v 0
->amh $n[cs=acc] krkm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trim_v $a $n ; ^ trim_v 0
->amh $a[cs=acc] $n 'f_f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trim_v $n ; ^ trim_v 0
->amh $n[cs=acc] 'f_f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trim_v $a $n ; ^ trim_v 0
->amh $a[cs=acc] $n kWstr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trim_v $n ; ^ trim_v 0
->amh $n[cs=acc] kWstr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trip_v $a $n ; ^ trip_v 0
->amh $a[cs=acc] $n Tlf_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trip_v $n ; ^ trip_v 0
->amh $n[cs=acc] Tlf_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trip_v $a $n ; ^ trip_v 0
->amh $a[cs=acc] $n wlakf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trip_v $n ; ^ trip_v 0
->amh $n[cs=acc] wlakf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trot_v $a $n ; ^ trot_v 0
->amh $a[cs=acc] $n sgr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trot_v $n ; ^ trot_v 0
->amh $n[cs=acc] sgr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trouble_v $a $n ; ^ trouble_v 0
->amh $a[cs=acc] $n 'w_k_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trouble_v $n ; ^ trouble_v 0
->amh $n[cs=acc] 'w_k_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trust_v $a $n ; ^ trust_v 0
->amh $a[cs=acc] $n 'mn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** trust_v $n ; ^ trust_v 0
->amh $n[cs=acc] 'mn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** try_v $a $n ; ^ try_v 0
->amh $a[cs=acc] $n mWk_r_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** try_v $n ; ^ try_v 0
->amh $n[cs=acc] mWk_r_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** try_v $a $n ; ^ try_v 0
->amh $a[cs=acc] $n qms_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** try_v $n ; ^ try_v 0
->amh $n[cs=acc] qms_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tutor_v $a $n ; ^ tutor_v 0
->amh $a[cs=acc] $n Tn'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** tutor_v $n ; ^ tutor_v 0
->amh $n[cs=acc] Tn'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n T|mzmz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] T|mzmz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n Tmm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] Tmm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n Tmzz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] Tmzz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n n|gadd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] n|gadd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n wlagd_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] wlagd_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n qWaC*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] qWaC*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n wlagd_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] wlagd_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $a $n ; ^ twist_v 0
->amh $a[cs=acc] $n Tmm_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** twist_v $n ; ^ twist_v 0
->amh $n[cs=acc] Tmm_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** uncover_v $a $n ; ^ uncover_v 0
->amh $a[cs=acc] $n glS_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** uncover_v $n ; ^ uncover_v 0
->amh $n[cs=acc] glS_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** uncover_v $a $n ; ^ uncover_v 0
->amh $a[cs=acc] $n ks_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** uncover_v $n ; ^ uncover_v 0
->amh $n[cs=acc] ks_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** understand_v $a $n ; ^ understand_v 0
->amh $a[cs=acc] $n sm'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** understand_v $n ; ^ understand_v 0
->amh $n[cs=acc] sm'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** undo_v $a $n ; ^ undo_v 0
->amh $a[cs=acc] $n ft'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** undo_v $n ; ^ undo_v 0
->amh $n[cs=acc] ft'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unify_v $a $n ; ^ unify_v 0
->amh $a[cs=acc] $n zamd_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unify_v $n ; ^ unify_v 0
->amh $n[cs=acc] zamd_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unite_v $a $n ; ^ unite_v 0
->amh $a[cs=acc] $n y'z_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unite_v $n ; ^ unite_v 0
->amh $n[cs=acc] y'z_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unload_v $a $n ; ^ unload_v 0
->amh $a[cs=acc] $n rgf_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unload_v $n ; ^ unload_v 0
->amh $n[cs=acc] rgf_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unlock_v $a $n ; ^ unlock_v 0
->amh $a[cs=acc] $n kft_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unlock_v $n ; ^ unlock_v 0
->amh $n[cs=acc] kft_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unroll_v $a $n ; ^ unroll_v 0
->amh $a[cs=acc] $n zrg'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unroll_v $n ; ^ unroll_v 0
->amh $n[cs=acc] zrg'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unsheathe_v $a $n ; ^ unsheathe_v 0
->amh $a[cs=acc] $n l'T_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unsheathe_v $n ; ^ unsheathe_v 0
->amh $n[cs=acc] l'T_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unveil_v $a $n ; ^ unveil_v 0
->amh $a[cs=acc] $n glS_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unveil_v $n ; ^ unveil_v 0
->amh $n[cs=acc] glS_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unzip_v $a $n ; ^ unzip_v 0
->amh $a[cs=acc] $n trtr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** unzip_v $n ; ^ unzip_v 0
->amh $n[cs=acc] trtr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** uproot_v $a $n ; ^ uproot_v 0
->amh $a[cs=acc] $n fls_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** uproot_v $n ; ^ uproot_v 0
->amh $n[cs=acc] fls_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** use_v $a $n ; ^ use_v 0
->amh $a[cs=acc] $n Tqm_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** use_v $n ; ^ use_v 0
->amh $n[cs=acc] Tqm_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** use_v $a $n ; ^ use_v 0
->amh $a[cs=acc] $n lmd_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** use_v $n ; ^ use_v 0
->amh $n[cs=acc] lmd_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** usher_v $a $n ; ^ usher_v 0
->amh $a[cs=acc] $n gafr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** usher_v $n ; ^ usher_v 0
->amh $n[cs=acc] gafr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** utter_v $a $n ; ^ utter_v 0
->amh $a[cs=acc] $n sm'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** utter_v $n ; ^ utter_v 0
->amh $n[cs=acc] sm'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vaccinate_v $a $n ; ^ vaccinate_v 0
->amh $a[cs=acc] $n ktb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vaccinate_v $n ; ^ vaccinate_v 0
->amh $n[cs=acc] ktb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** value_v $a $n ; ^ value_v 0
->amh $a[cs=acc] $n gm_t_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** value_v $n ; ^ value_v 0
->amh $n[cs=acc] gm_t_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vary_v $a $n ; ^ vary_v 0
->amh $a[cs=acc] $n blT_v[as=it,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vary_v $n ; ^ vary_v 0
->amh $n[cs=acc] blT_v[as=it,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** veil_v $a $n ; ^ veil_v 0
->amh $a[cs=acc] $n gard_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** veil_v $n ; ^ veil_v 0
->amh $n[cs=acc] gard_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** veil_v $a $n ; ^ veil_v 0
->amh $a[cs=acc] $n xf_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** veil_v $n ; ^ veil_v 0
->amh $n[cs=acc] xf_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** venerate_v $a $n ; ^ venerate_v 0
->amh $a[cs=acc] $n kbr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** venerate_v $n ; ^ venerate_v 0
->amh $n[cs=acc] kbr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ventilate_v $a $n ; ^ ventilate_v 0
->amh $a[cs=acc] $n nfs_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** ventilate_v $n ; ^ ventilate_v 0
->amh $n[cs=acc] nfs_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** verify_v $a $n ; ^ verify_v 0
->amh $a[cs=acc] $n Tr'_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** verify_v $n ; ^ verify_v 0
->amh $n[cs=acc] Tr'_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vex_v $a $n ; ^ vex_v 0
->amh $a[cs=acc] $n knkn_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vex_v $n ; ^ vex_v 0
->amh $n[cs=acc] knkn_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vex_v $a $n ; ^ vex_v 0
->amh $a[cs=acc] $n ndd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vex_v $n ; ^ vex_v 0
->amh $n[cs=acc] ndd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vibrate_v $a $n ; ^ vibrate_v 0
->amh $a[cs=acc] $n nzr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vibrate_v $n ; ^ vibrate_v 0
->amh $n[cs=acc] nzr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** violate_v $a $n ; ^ violate_v 0
->amh $a[cs=acc] $n dfr_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** violate_v $n ; ^ violate_v 0
->amh $n[cs=acc] dfr_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** violate_v $a $n ; ^ violate_v 0
->amh $a[cs=acc] $n gss_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** violate_v $n ; ^ violate_v 0
->amh $n[cs=acc] gss_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** violate_v $a $n ; ^ violate_v 0
->amh $a[cs=acc] $n T's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** violate_v $n ; ^ violate_v 0
->amh $n[cs=acc] T's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** visit_v $a $n ; ^ visit_v 0
->amh $a[cs=acc] $n lqs_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** visit_v $n ; ^ visit_v 0
->amh $n[cs=acc] lqs_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** visit_v $a $n ; ^ visit_v 0
->amh $a[cs=acc] $n gWbN*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** visit_v $n ; ^ visit_v 0
->amh $n[cs=acc] gWbN*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** voice_v $a $n ; ^ voice_v 0
->amh $a[cs=acc] $n sm'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** voice_v $n ; ^ voice_v 0
->amh $n[cs=acc] sm'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vomit_v $a $n ; ^ vomit_v 0
->amh $a[cs=acc] $n gWagWT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vomit_v $n ; ^ vomit_v 0
->amh $n[cs=acc] gWagWT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vomit_v $a $n ; ^ vomit_v 0
->amh $a[cs=acc] $n tf'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vomit_v $n ; ^ vomit_v 0
->amh $n[cs=acc] tf'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vomit_v $a $n ; ^ vomit_v 0
->amh $a[cs=acc] $n ml_s_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** vomit_v $n ; ^ vomit_v 0
->amh $n[cs=acc] ml_s_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wait_v $a $n ; ^ wait_v 0
->amh $a[cs=acc] $n qWy_*_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wait_v $n ; ^ wait_v 0
->amh $n[cs=acc] qWy_*_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wake_v $a $n ; ^ wake_v 0
->amh $a[cs=acc] $n ns'_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wake_v $n ; ^ wake_v 0
->amh $n[cs=acc] ns'_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** walk_v $a $n ; ^ walk_v 0
->amh $a[cs=acc] $n ramd_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** walk_v $n ; ^ walk_v 0
->amh $n[cs=acc] ramd_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wander_v $a $n ; ^ wander_v 0
->amh $a[cs=acc] $n dzdz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wander_v $n ; ^ wander_v 0
->amh $n[cs=acc] dzdz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wander_v $a $n ; ^ wander_v 0
->amh $a[cs=acc] $n fads_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wander_v $n ; ^ wander_v 0
->amh $n[cs=acc] fads_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wander_v $a $n ; ^ wander_v 0
->amh $a[cs=acc] $n watt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wander_v $n ; ^ wander_v 0
->amh $n[cs=acc] watt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** want_v $a $n ; ^ want_v 0
->amh $a[cs=acc] $n fl_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** want_v $n ; ^ want_v 0
->amh $n[cs=acc] fl_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** want_v $a $n ; ^ want_v 0
->amh $a[cs=acc] $n x'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** want_v $n ; ^ want_v 0
->amh $n[cs=acc] x'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warm_v $a $n ; ^ warm_v 0
->amh $a[cs=acc] $n mwq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warm_v $n ; ^ warm_v 0
->amh $n[cs=acc] mwq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warn_v $a $n ; ^ warn_v 0
->amh $a[cs=acc] $n Tnqq_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warn_v $n ; ^ warn_v 0
->amh $n[cs=acc] Tnqq_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warn_v $a $n ; ^ warn_v 0
->amh $a[cs=acc] $n ngr_v[as=it,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warn_v $n ; ^ warn_v 0
->amh $n[cs=acc] ngr_v[as=it,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warp_v $a $n ; ^ warp_v 0
->amh $a[cs=acc] $n zb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** warp_v $n ; ^ warp_v 0
->amh $n[cs=acc] zb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wash_v $a $n ; ^ wash_v 0
->amh $a[cs=acc] $n 'Tb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wash_v $n ; ^ wash_v 0
->amh $n[cs=acc] 'Tb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** waste_v $a $n ; ^ waste_v 0
->amh $a[cs=acc] $n nbz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** waste_v $n ; ^ waste_v 0
->amh $n[cs=acc] nbz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** waste_v $a $n ; ^ waste_v 0
->amh $a[cs=acc] $n bakn_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** waste_v $n ; ^ waste_v 0
->amh $n[cs=acc] bakn_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** water_v $a $n ; ^ water_v 0
->amh $a[cs=acc] $n r|kfkf_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** water_v $n ; ^ water_v 0
->amh $n[cs=acc] r|kfkf_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** water_v $a $n ; ^ water_v 0
->amh $a[cs=acc] $n TT_'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** water_v $n ; ^ water_v 0
->amh $n[cs=acc] TT_'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $a $n ; ^ wave_v 0
->amh $a[cs=acc] $n r|gbgb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $n ; ^ wave_v 0
->amh $n[cs=acc] r|gbgb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $a $n ; ^ wave_v 0
->amh $a[cs=acc] $n w|lblb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $n ; ^ wave_v 0
->amh $n[cs=acc] w|lblb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $a $n ; ^ wave_v 0
->amh $a[cs=acc] $n wzwz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $n ; ^ wave_v 0
->amh $n[cs=acc] wzwz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $a $n ; ^ wave_v 0
->amh $a[cs=acc] $n wzwz_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wave_v $n ; ^ wave_v 0
->amh $n[cs=acc] wzwz_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $a $n ; ^ weaken_v 0
->amh $a[cs=acc] $n dqq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $n ; ^ weaken_v 0
->amh $n[cs=acc] dqq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $a $n ; ^ weaken_v 0
->amh $a[cs=acc] $n lax*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $n ; ^ weaken_v 0
->amh $n[cs=acc] lax*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $a $n ; ^ weaken_v 0
->amh $a[cs=acc] $n gzgz_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $n ; ^ weaken_v 0
->amh $n[cs=acc] gzgz_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $a $n ; ^ weaken_v 0
->amh $a[cs=acc] $n n|Trawz_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weaken_v $n ; ^ weaken_v 0
->amh $n[cs=acc] n|Trawz_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wear_v $a $n ; ^ wear_v 0
->amh $a[cs=acc] $n lbs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wear_v $n ; ^ wear_v 0
->amh $n[cs=acc] lbs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wear_v $a $n ; ^ wear_v 0
->amh $a[cs=acc] $n m'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wear_v $n ; ^ wear_v 0
->amh $n[cs=acc] m'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wear_v $a $n ; ^ wear_v 0
->amh $a[cs=acc] $n Tlq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wear_v $n ; ^ wear_v 0
->amh $n[cs=acc] Tlq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weary_v $a $n ; ^ weary_v 0
->amh $a[cs=acc] $n Twlg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weary_v $n ; ^ weary_v 0
->amh $n[cs=acc] Twlg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weary_v $a $n ; ^ weary_v 0
->amh $a[cs=acc] $n z'l_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weary_v $n ; ^ weary_v 0
->amh $n[cs=acc] z'l_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weed_v $a $n ; ^ weed_v 0
->amh $a[cs=acc] $n 'r_m_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weed_v $n ; ^ weed_v 0
->amh $n[cs=acc] 'r_m_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weed_v $a $n ; ^ weed_v 0
->amh $a[cs=acc] $n xlxl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weed_v $n ; ^ weed_v 0
->amh $n[cs=acc] xlxl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weep_v $a $n ; ^ weep_v 0
->amh $a[cs=acc] $n lqs_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weep_v $n ; ^ weep_v 0
->amh $n[cs=acc] lqs_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weep_v $a $n ; ^ weep_v 0
->amh $a[cs=acc] $n nb'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weep_v $n ; ^ weep_v 0
->amh $n[cs=acc] nb'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weep_v $a $n ; ^ weep_v 0
->amh $a[cs=acc] $n nb'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weep_v $n ; ^ weep_v 0
->amh $n[cs=acc] nb'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weigh_v $a $n ; ^ weigh_v 0
->amh $a[cs=acc] $n mz_n_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weigh_v $n ; ^ weigh_v 0
->amh $n[cs=acc] mz_n_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weld_v $a $n ; ^ weld_v 0
->amh $a[cs=acc] $n by_d_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** weld_v $n ; ^ weld_v 0
->amh $n[cs=acc] by_d_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wet_v $a $n ; ^ wet_v 0
->amh $a[cs=acc] $n rTb_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wet_v $n ; ^ wet_v 0
->amh $n[cs=acc] rTb_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whip_v $a $n ; ^ whip_v 0
->amh $a[cs=acc] $n xnqWT_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whip_v $n ; ^ whip_v 0
->amh $n[cs=acc] xnqWT_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whistle_v $a $n ; ^ whistle_v 0
->amh $a[cs=acc] $n fWaC*_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whistle_v $n ; ^ whistle_v 0
->amh $n[cs=acc] fWaC*_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whiten_v $a $n ; ^ whiten_v 0
->amh $a[cs=acc] $n nT'_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whiten_v $n ; ^ whiten_v 0
->amh $n[cs=acc] nT'_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whiten_v $a $n ; ^ whiten_v 0
->amh $a[cs=acc] $n nT'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** whiten_v $n ; ^ whiten_v 0
->amh $n[cs=acc] nT'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wilt_v $a $n ; ^ wilt_v 0
->amh $a[cs=acc] $n Twlg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wilt_v $n ; ^ wilt_v 0
->amh $n[cs=acc] Twlg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** win_v $a $n ; ^ win_v 0
->amh $a[cs=acc] $n rt'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** win_v $n ; ^ win_v 0
->amh $n[cs=acc] rt'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** win_v $a $n ; ^ win_v 0
->amh $a[cs=acc] $n bl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** win_v $n ; ^ win_v 0
->amh $n[cs=acc] bl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** win_v $a $n ; ^ win_v 0
->amh $a[cs=acc] $n xnf_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** win_v $n ; ^ win_v 0
->amh $n[cs=acc] xnf_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wince_v $a $n ; ^ wince_v 0
->amh $a[cs=acc] $n sq_q_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wince_v $n ; ^ wince_v 0
->amh $n[cs=acc] sq_q_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wind_v $a $n ; ^ wind_v 0
->amh $a[cs=acc] $n TmTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wind_v $n ; ^ wind_v 0
->amh $n[cs=acc] TmTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wind_v $a $n ; ^ wind_v 0
->amh $a[cs=acc] $n mWl'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wind_v $n ; ^ wind_v 0
->amh $n[cs=acc] mWl'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wipe_v $a $n ; ^ wipe_v 0
->amh $a[cs=acc] $n 'bs_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wipe_v $n ; ^ wipe_v 0
->amh $n[cs=acc] 'bs_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wipe_v $a $n ; ^ wipe_v 0
->amh $a[cs=acc] $n Trg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wipe_v $n ; ^ wipe_v 0
->amh $n[cs=acc] Trg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wipe_v $a $n ; ^ wipe_v 0
->amh $a[cs=acc] $n wlwl_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wipe_v $n ; ^ wipe_v 0
->amh $n[cs=acc] wlwl_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wish_v $a $n ; ^ wish_v 0
->amh $a[cs=acc] $n fl_g_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wish_v $n ; ^ wish_v 0
->amh $n[cs=acc] fl_g_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wish_v $a $n ; ^ wish_v 0
->amh $a[cs=acc] $n mN*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wish_v $n ; ^ wish_v 0
->amh $n[cs=acc] mN*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wish_v $a $n ; ^ wish_v 0
->amh $a[cs=acc] $n x'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wish_v $n ; ^ wish_v 0
->amh $n[cs=acc] x'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withdraw_v $a $n ; ^ withdraw_v 0
->amh $a[cs=acc] $n fgfg_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withdraw_v $n ; ^ withdraw_v 0
->amh $n[cs=acc] fgfg_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withdraw_v $a $n ; ^ withdraw_v 0
->amh $a[cs=acc] $n fngT_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withdraw_v $n ; ^ withdraw_v 0
->amh $n[cs=acc] fngT_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withdraw_v $a $n ; ^ withdraw_v 0
->amh $a[cs=acc] $n ns'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withdraw_v $n ; ^ withdraw_v 0
->amh $n[cs=acc] ns'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wither_v $a $n ; ^ wither_v 0
->amh $a[cs=acc] $n Twlg_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wither_v $n ; ^ wither_v 0
->amh $n[cs=acc] Twlg_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wither_v $a $n ; ^ wither_v 0
->amh $a[cs=acc] $n ksm_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wither_v $n ; ^ wither_v 0
->amh $n[cs=acc] ksm_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wither_v $a $n ; ^ wither_v 0
->amh $a[cs=acc] $n ksm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wither_v $n ; ^ wither_v 0
->amh $n[cs=acc] ksm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withhold_v $a $n ; ^ withhold_v 0
->amh $a[cs=acc] $n qr*_v[as=smp,vc=cs] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** withhold_v $n ; ^ withhold_v 0
->amh $n[cs=acc] qr*_v[as=smp,vc=cs] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wobble_v $a $n ; ^ wobble_v 0
->amh $a[cs=acc] $n b|rkrk_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wobble_v $n ; ^ wobble_v 0
->amh $n[cs=acc] b|rkrk_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wonder_v $a $n ; ^ wonder_v 0
->amh $a[cs=acc] $n dnq_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wonder_v $n ; ^ wonder_v 0
->amh $n[cs=acc] dnq_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** work_v $a $n ; ^ work_v 0
->amh $a[cs=acc] $n sr'_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** work_v $n ; ^ work_v 0
->amh $n[cs=acc] sr'_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worry_v $a $n ; ^ worry_v 0
->amh $a[cs=acc] $n xaql_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worry_v $n ; ^ worry_v 0
->amh $n[cs=acc] xaql_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worsen_v $a $n ; ^ worsen_v 0
->amh $a[cs=acc] $n b's_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worsen_v $n ; ^ worsen_v 0
->amh $n[cs=acc] b's_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worsen_v $a $n ; ^ worsen_v 0
->amh $a[cs=acc] $n kf'_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worsen_v $n ; ^ worsen_v 0
->amh $n[cs=acc] kf'_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worship_v $a $n ; ^ worship_v 0
->amh $a[cs=acc] $n sgd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worship_v $n ; ^ worship_v 0
->amh $n[cs=acc] sgd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worship_v $a $n ; ^ worship_v 0
->amh $a[cs=acc] $n mlk_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** worship_v $n ; ^ worship_v 0
->amh $n[cs=acc] mlk_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wound_v $a $n ; ^ wound_v 0
->amh $a[cs=acc] $n qWsl_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wound_v $n ; ^ wound_v 0
->amh $n[cs=acc] qWsl_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wound_v $a $n ; ^ wound_v 0
->amh $a[cs=acc] $n gT_b_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wound_v $n ; ^ wound_v 0
->amh $n[cs=acc] gT_b_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrap_v $a $n ; ^ wrap_v 0
->amh $a[cs=acc] $n TmTm_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrap_v $n ; ^ wrap_v 0
->amh $n[cs=acc] TmTm_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrap_v $a $n ; ^ wrap_v 0
->amh $a[cs=acc] $n Tqll_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrap_v $n ; ^ wrap_v 0
->amh $n[cs=acc] Tqll_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrap_v $a $n ; ^ wrap_v 0
->amh $a[cs=acc] $n n|xaff_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrap_v $n ; ^ wrap_v 0
->amh $n[cs=acc] n|xaff_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wreck_v $a $n ; ^ wreck_v 0
->amh $a[cs=acc] $n frs_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wreck_v $n ; ^ wreck_v 0
->amh $n[cs=acc] frs_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wriggle_v $a $n ; ^ wriggle_v 0
->amh $a[cs=acc] $n n|fragT_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wriggle_v $n ; ^ wriggle_v 0
->amh $n[cs=acc] n|fragT_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wriggle_v $a $n ; ^ wriggle_v 0
->amh $a[cs=acc] $n s|lklk_v[as=smp,vc=ps] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wriggle_v $n ; ^ wriggle_v 0
->amh $n[cs=acc] s|lklk_v[as=smp,vc=ps] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $a $n ; ^ wrinkle_v 0
->amh $a[cs=acc] $n Cmdd_v[as=rc,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $n ; ^ wrinkle_v 0
->amh $n[cs=acc] Cmdd_v[as=rc,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $a $n ; ^ wrinkle_v 0
->amh $a[cs=acc] $n Cmatr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $n ; ^ wrinkle_v 0
->amh $n[cs=acc] Cmatr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $a $n ; ^ wrinkle_v 0
->amh $a[cs=acc] $n Cb_T_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $n ; ^ wrinkle_v 0
->amh $n[cs=acc] Cb_T_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $a $n ; ^ wrinkle_v 0
->amh $a[cs=acc] $n kWmatr_v[as=smp,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $n ; ^ wrinkle_v 0
->amh $n[cs=acc] kWmatr_v[as=smp,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $a $n ; ^ wrinkle_v 0
->amh $a[cs=acc] $n gWrb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $n ; ^ wrinkle_v 0
->amh $n[cs=acc] gWrb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $a $n ; ^ wrinkle_v 0
->amh $a[cs=acc] $n kWmatr_v[as=it,vc=tr] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $n ; ^ wrinkle_v 0
->amh $n[cs=acc] kWmatr_v[as=it,vc=tr] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $a $n ; ^ wrinkle_v 0
->amh $a[cs=acc] $n xbxb_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** wrinkle_v $n ; ^ wrinkle_v 0
->amh $n[cs=acc] xbxb_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** write_v $a $n ; ^ write_v 0
->amh $a[cs=acc] $n S'f_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** write_v $n ; ^ write_v 0
->amh $n[cs=acc] S'f_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** yell_v $a $n ; ^ yell_v 0
->amh $a[cs=acc] $n Cwh_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** yell_v $n ; ^ yell_v 0
->amh $n[cs=acc] Cwh_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** yield_v $a $n ; ^ yield_v 0
->amh $a[cs=acc] $n mrt_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** yield_v $n ; ^ yield_v 0
->amh $n[cs=acc] mrt_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** yoke_v $a $n ; ^ yoke_v 0
->amh $a[cs=acc] $n Tmd_v[as=smp,vc=smp] ; || 2, 0, 1 ; 0==2 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
*** yoke_v $n ; ^ yoke_v 0
->amh $n[cs=acc] Tmd_v[as=smp,vc=smp] ; || 1, 0 ; 0==1 tm:tm,rel:rel,sb:sb,ob:ob,neg:neg,ax:ax
